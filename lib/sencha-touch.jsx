/*
GNU General Public License Usage
This file may be used under the terms of the GNU General Public License version 3.0 as
published by the Free Software Foundation and appearing in the file LICENSE included in the
packaging of this file.

Please review the following information to ensure the GNU General Public License version 3.0
requirements will be met: http://www.gnu.org/copyleft/gpl.html.

This code is generated by sencha2jsx command created by @shibukawa
*/


import "js/web.jsx";
import "googlemaps.jsx";


native class Ext
{
    // Properties
    static var SSL_SECURE_URL : boolean;
    static var emptyFn : function () : void;
    static var enableGarbageCollector : boolean;
    static var enableListenerCollection : boolean;
    static var enumerables : string[];
    static var frameStartTime : variant;
    static var isSecure : boolean;
    static var version : string;
    // Methods
    static function application (config : variant) : void;
    static function apply (object : variant, config : variant, defaults : variant) : variant;
    static function apply (object : variant, config : variant) : variant;
    static function applyIf (object : variant, config : variant) : variant;
    static function bind (fn : function  () : void, scope : variant, args : variant[], appendArgs : boolean) : function () : void;
    static function bind (fn : function  () : void, scope : variant, args : variant[], appendArgs : number) : function () : void;
    static function bind (fn : function  () : void, scope : variant, args : variant[]) : function () : void;
    static function bind (fn : function  () : void, scope : variant, appendArgs : boolean) : function () : void;
    static function bind (fn : function  () : void, scope : variant, appendArgs : number) : function () : void;
    static function bind (fn : function  () : void, scope : variant) : function () : void;
    static function bind (fn : function  () : void, args : variant[], appendArgs : boolean) : function () : void;
    static function bind (fn : function  () : void, args : variant[], appendArgs : number) : function () : void;
    static function bind (fn : function  () : void, args : variant[]) : function () : void;
    static function bind (fn : function  () : void, appendArgs : boolean) : function () : void;
    static function bind (fn : function  () : void, appendArgs : number) : function () : void;
    static function bind (fn : function  () : void) : function () : void;
    static function callback (callback : function  () : void, scope : variant, args : variant[], delay : number) : void;
    static function callback (callback : function  () : void, scope : variant, args : variant[]) : void;
    static function callback (callback : function  () : void, scope : variant, delay : number) : void;
    static function callback (callback : function  () : void, scope : variant) : void;
    static function callback (callback : function  () : void, args : variant[], delay : number) : void;
    static function callback (callback : function  () : void, args : variant[]) : void;
    static function callback (callback : function  () : void, delay : number) : void;
    static function callback (callback : function  () : void) : void;
    static function clone (item : variant) : variant;
    static function copyTo (dest : variant, source : variant, names : string, usePrototypeKeys : boolean) : variant;
    static function copyTo (dest : variant, source : variant, names : string) : variant;
    static function copyTo (dest : variant, source : variant, names : string[], usePrototypeKeys : boolean) : variant;
    static function copyTo (dest : variant, source : variant, names : string[]) : variant;
    static function create (name : string, args : variant) : variant;
    static function createByAlias (alias : string, args : variant) : variant;
    static function decode (json : string, safe : boolean) : variant;
    static function decode (json : string) : variant;
    static function defer (fn : function  () : void, millis : number, scope : variant, args : variant[], appendArgs : boolean) : number;
    static function defer (fn : function  () : void, millis : number, scope : variant, args : variant[], appendArgs : number) : number;
    static function defer (fn : function  () : void, millis : number, scope : variant, args : variant[]) : number;
    static function defer (fn : function  () : void, millis : number, scope : variant, appendArgs : boolean) : number;
    static function defer (fn : function  () : void, millis : number, scope : variant, appendArgs : number) : number;
    static function defer (fn : function  () : void, millis : number, scope : variant) : number;
    static function defer (fn : function  () : void, millis : number, args : variant[], appendArgs : boolean) : number;
    static function defer (fn : function  () : void, millis : number, args : variant[], appendArgs : number) : number;
    static function defer (fn : function  () : void, millis : number, args : variant[]) : number;
    static function defer (fn : function  () : void, millis : number, appendArgs : boolean) : number;
    static function defer (fn : function  () : void, millis : number, appendArgs : number) : number;
    static function defer (fn : function  () : void, millis : number) : number;
    static function define (className : string, data : variant, createdFn : function  () : void) : Ext.Base;
    static function define (className : string, data : variant) : Ext.Base;
    static function destroy (args : variant) : void;
    static function dispatch () : void;
    static function each (iterable : variant[], fn : function  (item : variant, index : number, allItems : variant[], return_ : boolean) : void, scope : variant, reverse : boolean) : boolean;
    static function each (iterable : variant[], fn : function  (item : variant, index : number, allItems : variant[], return_ : boolean) : void, scope : variant) : boolean;
    static function each (iterable : variant[], fn : function  (item : variant, index : number, allItems : variant[], return_ : boolean) : void, reverse : boolean) : boolean;
    static function each (iterable : variant[], fn : function  (item : variant, index : number, allItems : variant[], return_ : boolean) : void) : boolean;
    static function each (iterable : NodeList, fn : function  (item : variant, index : number, allItems : variant[], return_ : boolean) : void, scope : variant, reverse : boolean) : boolean;
    static function each (iterable : NodeList, fn : function  (item : variant, index : number, allItems : variant[], return_ : boolean) : void, scope : variant) : boolean;
    static function each (iterable : NodeList, fn : function  (item : variant, index : number, allItems : variant[], return_ : boolean) : void, reverse : boolean) : boolean;
    static function each (iterable : NodeList, fn : function  (item : variant, index : number, allItems : variant[], return_ : boolean) : void) : boolean;
    static function each (iterable : variant, fn : function  (item : variant, index : number, allItems : variant[], return_ : boolean) : void, scope : variant, reverse : boolean) : boolean;
    static function each (iterable : variant, fn : function  (item : variant, index : number, allItems : variant[], return_ : boolean) : void, scope : variant) : boolean;
    static function each (iterable : variant, fn : function  (item : variant, index : number, allItems : variant[], return_ : boolean) : void, reverse : boolean) : boolean;
    static function each (iterable : variant, fn : function  (item : variant, index : number, allItems : variant[], return_ : boolean) : void) : boolean;
    static function encode (o : variant) : string;
    static function exclude (excludes : variant[]) : variant;
    static function factory (config : variant, classReference : string, instance : variant, aliasNamespace : string) : void;
    static function factory (config : variant, classReference : string, instance : variant) : void;
    static function factory (config : variant, classReference : string, aliasNamespace : string) : void;
    static function factory (config : variant, classReference : string) : void;
    static function fly (element : string, named : string) : Ext.dom.Element;
    static function fly (element : string) : Ext.dom.Element;
    static function fly (element : HTMLElement, named : string) : Ext.dom.Element;
    static function fly (element : HTMLElement) : Ext.dom.Element;
    static function get (element : string) : Ext.dom.Element;
    static function get (element : HTMLElement) : Ext.dom.Element;
    static function get (element : Ext.dom.Element) : Ext.dom.Element;
    static function getBody () : Ext.dom.Element;
    static function getClass () : void;
    static function getClassName (object : Ext.Class) : string;
    static function getClassName (object : variant) : string;
    static function getCmp (id : string) : Ext.Component;
    static function getDisplayName (object : variant) : string;
    static function getDisplayName () : string;
    static function getDoc () : Ext.dom.Element;
    static function getDom (el : variant) : HTMLElement;
    static function getHead () : Ext.dom.Element;
    static function getOrientation () : void;
    static function getStore (store : string) : Ext.data.Store;
    static function getStore (store : variant) : Ext.data.Store;
    static function id (el : variant, prefix : string) : string;
    static function id (el : variant) : string;
    static function id (prefix : string) : string;
    static function id () : string;
    static function isArray (target : variant) : boolean;
    static function isBoolean (value : variant) : boolean;
    static function isDate (object : variant) : boolean;
    static function isDefined (value : variant) : boolean;
    static function isElement (value : variant) : boolean;
    static function isEmpty (value : variant, allowEmptyString : boolean) : boolean;
    static function isEmpty (value : variant) : boolean;
    static function isFunction (value : variant) : boolean;
    static function isIterable (value : variant) : boolean;
    static function isMSDate (value : string) : boolean;
    static function isNumber (value : variant) : boolean;
    static function isNumeric (value : variant) : boolean;
    static function isObject (value : variant) : boolean;
    static function isPrimitive (value : variant) : boolean;
    static function isString (value : variant) : boolean;
    static function isTextNode (value : variant) : boolean;
    static function iterate (object : variant, fn : function  () : void, scope : variant) : void;
    static function iterate (object : variant, fn : function  () : void) : void;
    static function iterate (object : variant[], fn : function  () : void, scope : variant) : void;
    static function iterate (object : variant[], fn : function  () : void) : void;
    static function merge () : void;
    static function namespace (namespace1 : string, namespace2 : string, etc : string) : variant;
    static function ns () : void;
    static function onReady (fn : function  () : void, scope : variant, options : boolean) : void;
    static function onReady (fn : function  () : void, scope : variant) : void;
    static function onReady (fn : function  () : void, options : boolean) : void;
    static function onReady (fn : function  () : void) : void;
    static function pass (fn : function  () : void, args : variant[], scope : variant) : function () : void;
    static function pass (fn : function  () : void, args : variant[]) : function () : void;
    static function preg () : void;
    static function query (selector : string, root : HTMLElement) : HTMLElement[];
    static function query (selector : string, root : string) : HTMLElement[];
    static function query (selector : string) : HTMLElement[];
    static function redirect () : void;
    static function reg () : void;
    static function regApplication () : void;
    static function regController () : void;
    static function regLayout () : void;
    static function regStore (id : string, config : variant) : void;
    static function removeNode (node : HTMLElement) : void;
    static function repaint () : void;
    static function require (expressions : string, fn : function  () : void, scope : variant, excludes : string) : void;
    static function require (expressions : string, fn : function  () : void, scope : variant, excludes : variant[]) : void;
    static function require (expressions : string, fn : function  () : void, scope : variant) : void;
    static function require (expressions : string, fn : function  () : void, excludes : string) : void;
    static function require (expressions : string, fn : function  () : void, excludes : variant[]) : void;
    static function require (expressions : string, fn : function  () : void) : void;
    static function require (expressions : string, scope : variant, excludes : string) : void;
    static function require (expressions : string, scope : variant, excludes : variant[]) : void;
    static function require (expressions : string, scope : variant) : void;
    static function require (expressions : string, excludes : string) : void;
    static function require (expressions : string, excludes : variant[]) : void;
    static function require (expressions : string) : void;
    static function require (expressions : variant[], fn : function  () : void, scope : variant, excludes : string) : void;
    static function require (expressions : variant[], fn : function  () : void, scope : variant, excludes : variant[]) : void;
    static function require (expressions : variant[], fn : function  () : void, scope : variant) : void;
    static function require (expressions : variant[], fn : function  () : void, excludes : string) : void;
    static function require (expressions : variant[], fn : function  () : void, excludes : variant[]) : void;
    static function require (expressions : variant[], fn : function  () : void) : void;
    static function require (expressions : variant[], scope : variant, excludes : string) : void;
    static function require (expressions : variant[], scope : variant, excludes : variant[]) : void;
    static function require (expressions : variant[], scope : variant) : void;
    static function require (expressions : variant[], excludes : string) : void;
    static function require (expressions : variant[], excludes : variant[]) : void;
    static function require (expressions : variant[]) : void;
    static function select (selector : string, composite : boolean) : variant;
    static function select (selector : HTMLElement[], composite : boolean) : variant;
    static function setup (config : variant) : void;
    static function syncRequire (expressions : string, fn : function  () : void, scope : variant, excludes : string) : void;
    static function syncRequire (expressions : string, fn : function  () : void, scope : variant, excludes : variant[]) : void;
    static function syncRequire (expressions : string, fn : function  () : void, scope : variant) : void;
    static function syncRequire (expressions : string, fn : function  () : void, excludes : string) : void;
    static function syncRequire (expressions : string, fn : function  () : void, excludes : variant[]) : void;
    static function syncRequire (expressions : string, fn : function  () : void) : void;
    static function syncRequire (expressions : string, scope : variant, excludes : string) : void;
    static function syncRequire (expressions : string, scope : variant, excludes : variant[]) : void;
    static function syncRequire (expressions : string, scope : variant) : void;
    static function syncRequire (expressions : string, excludes : string) : void;
    static function syncRequire (expressions : string, excludes : variant[]) : void;
    static function syncRequire (expressions : string) : void;
    static function syncRequire (expressions : variant[], fn : function  () : void, scope : variant, excludes : string) : void;
    static function syncRequire (expressions : variant[], fn : function  () : void, scope : variant, excludes : variant[]) : void;
    static function syncRequire (expressions : variant[], fn : function  () : void, scope : variant) : void;
    static function syncRequire (expressions : variant[], fn : function  () : void, excludes : string) : void;
    static function syncRequire (expressions : variant[], fn : function  () : void, excludes : variant[]) : void;
    static function syncRequire (expressions : variant[], fn : function  () : void) : void;
    static function syncRequire (expressions : variant[], scope : variant, excludes : string) : void;
    static function syncRequire (expressions : variant[], scope : variant, excludes : variant[]) : void;
    static function syncRequire (expressions : variant[], scope : variant) : void;
    static function syncRequire (expressions : variant[], excludes : string) : void;
    static function syncRequire (expressions : variant[], excludes : variant[]) : void;
    static function syncRequire (expressions : variant[]) : void;
    static function toArray (iterable : variant, start : number, end : number) : variant[];
    static function toArray (iterable : variant, start : number) : variant[];
    static function toArray (iterable : variant) : variant[];
    static function typeOf (value : variant) : string;
    static function valueFrom (value : variant, defaultValue : variant, allowBlank : boolean) : variant;
    static function valueFrom (value : variant, defaultValue : variant) : variant;
    static function widget (name : string) : variant;

    class AbstractComponent extends Ext.Evented
    {
        // Methods
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class AbstractManager extends Ext.Base
    {
        // Properties
        var all : Ext.util.HashMap;
        // Methods
        function constructor (config : variant);
        function create (config : variant, defaultType : string) : variant;
        function each (fn : function  (key : string, value : number, length : number, return_ : boolean) : void, scope : variant) : void;
        function each (fn : function  (key : string, value : number, length : number, return_ : boolean) : void) : void;
        function get (id : string) : variant;
        function getCount () : number;
        function isRegistered (type : string) : boolean;
        function onAvailable (id : string, fn : function  () : void, scope : variant) : void;
        function register (item : variant) : void;
        function registerType (type : string, cls : function  () : void) : void;
        function unregister (item : variant) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }


    class ActionSheet extends Ext.Sheet
    {
        // Methods
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class Ajax extends Ext.data.Connection
    {
        // Properties
        static var autoAbort : boolean;
        // Methods
        static function constructor (config : variant);
        static function abort (request : variant) : void;
        static function abort () : void;
        static function abortAll () : void;
        static function addAfterListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function addAfterListener (eventName : string, fn : function  () : void, scope : variant) : void;
        static function addAfterListener (eventName : string, fn : function  () : void) : void;
        static function addAfterListener (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function addAfterListener (eventName : string, fn : string, scope : variant) : void;
        static function addAfterListener (eventName : string, fn : string) : void;
        static function addAfterListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function addAfterListener (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function addAfterListener (eventName : string[], fn : function  () : void) : void;
        static function addAfterListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function addAfterListener (eventName : string[], fn : string, scope : variant) : void;
        static function addAfterListener (eventName : string[], fn : string) : void;
        static function addAfterListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function addAfterListener (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function addAfterListener (eventName : variant, fn : function  () : void) : void;
        static function addAfterListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function addAfterListener (eventName : variant, fn : string, scope : variant) : void;
        static function addAfterListener (eventName : variant, fn : string) : void;
        static function addBeforeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function addBeforeListener (eventName : string, fn : function  () : void, scope : variant) : void;
        static function addBeforeListener (eventName : string, fn : function  () : void) : void;
        static function addBeforeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function addBeforeListener (eventName : string, fn : string, scope : variant) : void;
        static function addBeforeListener (eventName : string, fn : string) : void;
        static function addBeforeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function addBeforeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function addBeforeListener (eventName : string[], fn : function  () : void) : void;
        static function addBeforeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function addBeforeListener (eventName : string[], fn : string, scope : variant) : void;
        static function addBeforeListener (eventName : string[], fn : string) : void;
        static function addBeforeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function addBeforeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function addBeforeListener (eventName : variant, fn : function  () : void) : void;
        static function addBeforeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function addBeforeListener (eventName : variant, fn : string, scope : variant) : void;
        static function addBeforeListener (eventName : variant, fn : string) : void;
        static function addListener (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function addListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function addListener (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
        static function addListener (eventName : string, fn : function  () : void, scope : variant) : void;
        static function addListener (eventName : string, fn : function  () : void, order : string) : void;
        static function addListener (eventName : string, fn : function  () : void) : void;
        static function addListener (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
        static function addListener (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function addListener (eventName : string, fn : string, scope : variant, order : string) : void;
        static function addListener (eventName : string, fn : string, scope : variant) : void;
        static function addListener (eventName : string, fn : string, order : string) : void;
        static function addListener (eventName : string, fn : string) : void;
        static function addListener (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function addListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function addListener (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
        static function addListener (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function addListener (eventName : string[], fn : function  () : void, order : string) : void;
        static function addListener (eventName : string[], fn : function  () : void) : void;
        static function addListener (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
        static function addListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function addListener (eventName : string[], fn : string, scope : variant, order : string) : void;
        static function addListener (eventName : string[], fn : string, scope : variant) : void;
        static function addListener (eventName : string[], fn : string, order : string) : void;
        static function addListener (eventName : string[], fn : string) : void;
        static function addListener (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function addListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function addListener (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
        static function addListener (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function addListener (eventName : variant, fn : function  () : void, order : string) : void;
        static function addListener (eventName : variant, fn : function  () : void) : void;
        static function addListener (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
        static function addListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function addListener (eventName : variant, fn : string, scope : variant, order : string) : void;
        static function addListener (eventName : variant, fn : string, scope : variant) : void;
        static function addListener (eventName : variant, fn : string, order : string) : void;
        static function addListener (eventName : variant, fn : string) : void;
        static function callOverridden (args : variant[]) : variant;
        static function callParent (args : variant[]) : variant;
        static function callSuper (args : variant[]) : variant;
        static function clearListeners () : void;
        static function destroy () : void;
        static function enableBubble (events : string) : void;
        static function enableBubble (events : string[]) : void;
        static function fireAction (eventName : string, args : variant[], fn : function  () : void, scope : variant) : variant;
        static function fireEvent (eventName : string, args : variant) : boolean;
        static function getAsync () : boolean;
        static function getAutoAbort () : boolean;
        static function getBubbleEvents () : variant;
        static function getDefaultHeaders () : variant;
        static function getDefaultPostHeader () : string;
        static function getDefaultXhrHeader () : string;
        static function getDisableCaching () : boolean;
        static function getDisableCachingParam () : string;
        static function getExtraParams () : variant;
        static function getId () : string;
        static function getInitialConfig (name : string) : variant;
        static function getInitialConfig () : variant;
        static function getListeners () : variant;
        static function getMethod () : string;
        static function getPassword () : string;
        static function getTimeout () : number;
        static function getUrl () : string;
        static function getUseDefaultHeader () : boolean;
        static function getUseDefaultXhrHeader () : boolean;
        static function getUsername () : string;
        static function hasListener (eventName : string) : boolean;
        static function initConfig (instanceConfig : variant) : variant;
        static function isLoading (request : variant) : boolean;
        static function on (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function on (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function on (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
        static function on (eventName : string, fn : function  () : void, scope : variant) : void;
        static function on (eventName : string, fn : function  () : void, order : string) : void;
        static function on (eventName : string, fn : function  () : void) : void;
        static function on (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
        static function on (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function on (eventName : string, fn : string, scope : variant, order : string) : void;
        static function on (eventName : string, fn : string, scope : variant) : void;
        static function on (eventName : string, fn : string, order : string) : void;
        static function on (eventName : string, fn : string) : void;
        static function on (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function on (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function on (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
        static function on (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function on (eventName : string[], fn : function  () : void, order : string) : void;
        static function on (eventName : string[], fn : function  () : void) : void;
        static function on (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
        static function on (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function on (eventName : string[], fn : string, scope : variant, order : string) : void;
        static function on (eventName : string[], fn : string, scope : variant) : void;
        static function on (eventName : string[], fn : string, order : string) : void;
        static function on (eventName : string[], fn : string) : void;
        static function on (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function on (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function on (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
        static function on (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function on (eventName : variant, fn : function  () : void, order : string) : void;
        static function on (eventName : variant, fn : function  () : void) : void;
        static function on (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
        static function on (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function on (eventName : variant, fn : string, scope : variant, order : string) : void;
        static function on (eventName : variant, fn : string, scope : variant) : void;
        static function on (eventName : variant, fn : string, order : string) : void;
        static function on (eventName : variant, fn : string) : void;
        static function onAfter (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function onAfter (eventName : string, fn : function  () : void, scope : variant) : void;
        static function onAfter (eventName : string, fn : function  () : void) : void;
        static function onAfter (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function onAfter (eventName : string, fn : string, scope : variant) : void;
        static function onAfter (eventName : string, fn : string) : void;
        static function onAfter (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function onAfter (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function onAfter (eventName : string[], fn : function  () : void) : void;
        static function onAfter (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function onAfter (eventName : string[], fn : string, scope : variant) : void;
        static function onAfter (eventName : string[], fn : string) : void;
        static function onAfter (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function onAfter (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function onAfter (eventName : variant, fn : function  () : void) : void;
        static function onAfter (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function onAfter (eventName : variant, fn : string, scope : variant) : void;
        static function onAfter (eventName : variant, fn : string) : void;
        static function onBefore (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function onBefore (eventName : string, fn : function  () : void, scope : variant) : void;
        static function onBefore (eventName : string, fn : function  () : void) : void;
        static function onBefore (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function onBefore (eventName : string, fn : string, scope : variant) : void;
        static function onBefore (eventName : string, fn : string) : void;
        static function onBefore (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function onBefore (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function onBefore (eventName : string[], fn : function  () : void) : void;
        static function onBefore (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function onBefore (eventName : string[], fn : string, scope : variant) : void;
        static function onBefore (eventName : string[], fn : string) : void;
        static function onBefore (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function onBefore (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function onBefore (eventName : variant, fn : function  () : void) : void;
        static function onBefore (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function onBefore (eventName : variant, fn : string, scope : variant) : void;
        static function onBefore (eventName : variant, fn : string) : void;
        static function parseStatus (status : number, xhr : XMLHttpRequest) : variant;
        static function relayEvents (object : variant, events : string) : Ext.mixin.Observable;
        static function relayEvents (object : variant, events : variant[]) : Ext.mixin.Observable;
        static function relayEvents (object : variant, events : variant) : Ext.mixin.Observable;
        static function removeAfterListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function removeAfterListener (eventName : string, fn : function  () : void, scope : variant) : void;
        static function removeAfterListener (eventName : string, fn : function  () : void) : void;
        static function removeAfterListener (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function removeAfterListener (eventName : string, fn : string, scope : variant) : void;
        static function removeAfterListener (eventName : string, fn : string) : void;
        static function removeAfterListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function removeAfterListener (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function removeAfterListener (eventName : string[], fn : function  () : void) : void;
        static function removeAfterListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function removeAfterListener (eventName : string[], fn : string, scope : variant) : void;
        static function removeAfterListener (eventName : string[], fn : string) : void;
        static function removeAfterListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function removeAfterListener (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function removeAfterListener (eventName : variant, fn : function  () : void) : void;
        static function removeAfterListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function removeAfterListener (eventName : variant, fn : string, scope : variant) : void;
        static function removeAfterListener (eventName : variant, fn : string) : void;
        static function removeBeforeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function removeBeforeListener (eventName : string, fn : function  () : void, scope : variant) : void;
        static function removeBeforeListener (eventName : string, fn : function  () : void) : void;
        static function removeBeforeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function removeBeforeListener (eventName : string, fn : string, scope : variant) : void;
        static function removeBeforeListener (eventName : string, fn : string) : void;
        static function removeBeforeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function removeBeforeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function removeBeforeListener (eventName : string[], fn : function  () : void) : void;
        static function removeBeforeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function removeBeforeListener (eventName : string[], fn : string, scope : variant) : void;
        static function removeBeforeListener (eventName : string[], fn : string) : void;
        static function removeBeforeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function removeBeforeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function removeBeforeListener (eventName : variant, fn : function  () : void) : void;
        static function removeBeforeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function removeBeforeListener (eventName : variant, fn : string, scope : variant) : void;
        static function removeBeforeListener (eventName : variant, fn : string) : void;
        static function removeListener (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function removeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function removeListener (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
        static function removeListener (eventName : string, fn : function  () : void, scope : variant) : void;
        static function removeListener (eventName : string, fn : function  () : void, order : string) : void;
        static function removeListener (eventName : string, fn : function  () : void) : void;
        static function removeListener (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
        static function removeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function removeListener (eventName : string, fn : string, scope : variant, order : string) : void;
        static function removeListener (eventName : string, fn : string, scope : variant) : void;
        static function removeListener (eventName : string, fn : string, order : string) : void;
        static function removeListener (eventName : string, fn : string) : void;
        static function removeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function removeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function removeListener (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
        static function removeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function removeListener (eventName : string[], fn : function  () : void, order : string) : void;
        static function removeListener (eventName : string[], fn : function  () : void) : void;
        static function removeListener (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
        static function removeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function removeListener (eventName : string[], fn : string, scope : variant, order : string) : void;
        static function removeListener (eventName : string[], fn : string, scope : variant) : void;
        static function removeListener (eventName : string[], fn : string, order : string) : void;
        static function removeListener (eventName : string[], fn : string) : void;
        static function removeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function removeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function removeListener (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
        static function removeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function removeListener (eventName : variant, fn : function  () : void, order : string) : void;
        static function removeListener (eventName : variant, fn : function  () : void) : void;
        static function removeListener (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
        static function removeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function removeListener (eventName : variant, fn : string, scope : variant, order : string) : void;
        static function removeListener (eventName : variant, fn : string, scope : variant) : void;
        static function removeListener (eventName : variant, fn : string, order : string) : void;
        static function removeListener (eventName : variant, fn : string) : void;
        static function request (options : variant) : variant;
        static function resumeEvents (discardQueuedEvents : boolean) : void;
        static function setAsync (async : boolean) : void;
        static function setAutoAbort (autoAbort : boolean) : void;
        static function setBubbleEvents (bubbleEvents : string) : void;
        static function setBubbleEvents (bubbleEvents : string[]) : void;
        static function setDefaultHeaders (defaultHeaders : variant) : void;
        static function setDefaultPostHeader (defaultPostHeader : string) : void;
        static function setDefaultXhrHeader (defaultXhrHeader : string) : void;
        static function setDisableCaching (disableCaching : boolean) : void;
        static function setDisableCachingParam (disableCachingParam : string) : void;
        static function setExtraParams (extraParams : variant) : void;
        static function setListeners (listeners : variant) : void;
        static function setMethod (method : string) : void;
        static function setOptions (options : variant, scope : variant) : variant;
        static function setPassword (password : string) : void;
        static function setTimeout (timeout : number) : void;
        static function setUrl (url : string) : void;
        static function setUseDefaultHeader (useDefaultHeader : boolean) : void;
        static function setUseDefaultXhrHeader (useDefaultXhrHeader : boolean) : void;
        static function setUsername (username : string) : void;
        static function statics () : Ext.Class;
        static function suspendEvents () : void;
        static function un (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function un (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function un (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
        static function un (eventName : string, fn : function  () : void, scope : variant) : void;
        static function un (eventName : string, fn : function  () : void, order : string) : void;
        static function un (eventName : string, fn : function  () : void) : void;
        static function un (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
        static function un (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function un (eventName : string, fn : string, scope : variant, order : string) : void;
        static function un (eventName : string, fn : string, scope : variant) : void;
        static function un (eventName : string, fn : string, order : string) : void;
        static function un (eventName : string, fn : string) : void;
        static function un (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function un (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function un (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
        static function un (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function un (eventName : string[], fn : function  () : void, order : string) : void;
        static function un (eventName : string[], fn : function  () : void) : void;
        static function un (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
        static function un (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function un (eventName : string[], fn : string, scope : variant, order : string) : void;
        static function un (eventName : string[], fn : string, scope : variant) : void;
        static function un (eventName : string[], fn : string, order : string) : void;
        static function un (eventName : string[], fn : string) : void;
        static function un (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function un (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function un (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
        static function un (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function un (eventName : variant, fn : function  () : void, order : string) : void;
        static function un (eventName : variant, fn : function  () : void) : void;
        static function un (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
        static function un (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function un (eventName : variant, fn : string, scope : variant, order : string) : void;
        static function un (eventName : variant, fn : string, scope : variant) : void;
        static function un (eventName : variant, fn : string, order : string) : void;
        static function un (eventName : variant, fn : string) : void;
        static function unAfter (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function unAfter (eventName : string, fn : function  () : void, scope : variant) : void;
        static function unAfter (eventName : string, fn : function  () : void) : void;
        static function unAfter (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function unAfter (eventName : string, fn : string, scope : variant) : void;
        static function unAfter (eventName : string, fn : string) : void;
        static function unAfter (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function unAfter (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function unAfter (eventName : string[], fn : function  () : void) : void;
        static function unAfter (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function unAfter (eventName : string[], fn : string, scope : variant) : void;
        static function unAfter (eventName : string[], fn : string) : void;
        static function unAfter (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function unAfter (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function unAfter (eventName : variant, fn : function  () : void) : void;
        static function unAfter (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function unAfter (eventName : variant, fn : string, scope : variant) : void;
        static function unAfter (eventName : variant, fn : string) : void;
        static function unBefore (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function unBefore (eventName : string, fn : function  () : void, scope : variant) : void;
        static function unBefore (eventName : string, fn : function  () : void) : void;
        static function unBefore (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function unBefore (eventName : string, fn : string, scope : variant) : void;
        static function unBefore (eventName : string, fn : string) : void;
        static function unBefore (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function unBefore (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function unBefore (eventName : string[], fn : function  () : void) : void;
        static function unBefore (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function unBefore (eventName : string[], fn : string, scope : variant) : void;
        static function unBefore (eventName : string[], fn : string) : void;
        static function unBefore (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function unBefore (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function unBefore (eventName : variant, fn : function  () : void) : void;
        static function unBefore (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function unBefore (eventName : variant, fn : string, scope : variant) : void;
        static function unBefore (eventName : variant, fn : string) : void;
        static function upload (form : string, url : string, params : string, options : variant) : void;
        static function upload (form : HTMLElement, url : string, params : string, options : variant) : void;
        static function upload (form : Ext.dom.Element, url : string, params : string, options : variant) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
        // Events
        static function beforerequest (conn : Ext.data.Connection, options : variant, eOpts : variant) : void;
        static function requestcomplete (conn : Ext.data.Connection, response : variant, options : variant, eOpts : variant) : void;
        static function requestexception (conn : Ext.data.Connection, response : variant, options : variant, eOpts : variant) : void;
    }

    class Anim extends Ext.Base
    {
        // Properties
        // Methods
        static function constructor (config : variant);
        static function callOverridden (args : variant[]) : variant;
        static function callParent (args : variant[]) : variant;
        static function callSuper (args : variant[]) : variant;
        static function destroy () : void;
        static function getInitialConfig (name : string) : variant;
        static function getInitialConfig () : variant;
        static function initConfig (el : variant, runConfig : variant) : variant;
        static function run (el : Ext.dom.Element, anim : string, config : variant) : void;
        static function run (el : HTMLElement, anim : string, config : variant) : void;
        static function statics () : Ext.Class;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }


    class Array
    {
        // Methods
        static function clean (array : variant[]) : variant[];
        static function clone (array : variant[]) : variant[];
        static function contains (array : variant[], item : variant) : boolean;
        static function difference (arrayA : variant[], arrayB : variant[]) : variant[];
        static function each (iterable : variant[], fn : function  (item : variant, index : number, allItems : variant[], return_ : boolean) : void, scope : variant, reverse : boolean) : boolean;
        static function each (iterable : variant[], fn : function  (item : variant, index : number, allItems : variant[], return_ : boolean) : void, scope : variant) : boolean;
        static function each (iterable : variant[], fn : function  (item : variant, index : number, allItems : variant[], return_ : boolean) : void, reverse : boolean) : boolean;
        static function each (iterable : variant[], fn : function  (item : variant, index : number, allItems : variant[], return_ : boolean) : void) : boolean;
        static function each (iterable : NodeList, fn : function  (item : variant, index : number, allItems : variant[], return_ : boolean) : void, scope : variant, reverse : boolean) : boolean;
        static function each (iterable : NodeList, fn : function  (item : variant, index : number, allItems : variant[], return_ : boolean) : void, scope : variant) : boolean;
        static function each (iterable : NodeList, fn : function  (item : variant, index : number, allItems : variant[], return_ : boolean) : void, reverse : boolean) : boolean;
        static function each (iterable : NodeList, fn : function  (item : variant, index : number, allItems : variant[], return_ : boolean) : void) : boolean;
        static function each (iterable : variant, fn : function  (item : variant, index : number, allItems : variant[], return_ : boolean) : void, scope : variant, reverse : boolean) : boolean;
        static function each (iterable : variant, fn : function  (item : variant, index : number, allItems : variant[], return_ : boolean) : void, scope : variant) : boolean;
        static function each (iterable : variant, fn : function  (item : variant, index : number, allItems : variant[], return_ : boolean) : void, reverse : boolean) : boolean;
        static function each (iterable : variant, fn : function  (item : variant, index : number, allItems : variant[], return_ : boolean) : void) : boolean;
        static function erase (array : variant[], index : number, removeCount : number) : variant[];
        static function every (array : variant[], fn : function  () : void, scope : variant) : boolean;
        static function filter (array : variant[], fn : function  () : void, scope : variant) : variant[];
        static function flatten (array : variant[]) : variant[];
        static function forEach (array : variant[], fn : function  (item : variant, index : number, allItems : variant[]) : void, scope : variant) : void;
        static function forEach (array : variant[], fn : function  (item : variant, index : number, allItems : variant[]) : void) : void;
        static function from (value : variant, newReference : boolean) : variant[];
        static function from (value : variant) : variant[];
        static function include (array : variant[], item : variant) : void;
        static function indexOf (array : variant[], item : variant, from : number) : number;
        static function indexOf (array : variant[], item : variant) : number;
        static function insert (array : variant[], index : number, items : variant[]) : variant[];
        static function intersect (array1 : variant[], array2 : variant[], etc : variant[]) : variant[];
        static function map (array : variant[], fn : function  () : void, scope : variant) : variant[];
        static function max (array : variant[], comparisonFn : function  () : void) : variant;
        static function max (array : variant[]) : variant;
        static function max (array : NodeList, comparisonFn : function  () : void) : variant;
        static function max (array : NodeList) : variant;
        static function mean (array : variant[]) : number;
        static function merge (array1 : variant[], array2 : variant[], etc : variant[]) : variant[];
        static function min (array : variant[], comparisonFn : function  () : void) : variant;
        static function min (array : variant[]) : variant;
        static function min (array : NodeList, comparisonFn : function  () : void) : variant;
        static function min (array : NodeList) : variant;
        static function pluck (array : variant[], propertyName : string) : variant[];
        static function pluck (array : NodeList, propertyName : string) : variant[];
        static function remove (array : variant[], item : variant) : variant[];
        static function replace (array : variant[], index : number, removeCount : number, insert : variant[]) : variant[];
        static function replace (array : variant[], index : number, removeCount : number) : variant[];
        static function slice (array : variant[], begin : number, end : number) : variant[];
        static function some (array : variant[], fn : function  () : void, scope : variant) : boolean;
        static function sort (array : variant[], sortFn : function  () : void) : variant[];
        static function sort (array : variant[]) : variant[];
        static function splice (array : variant[], index : number, removeCount : number) : variant[];
        static function sum (array : variant[]) : number;
        static function toArray (iterable : variant, start : number, end : number) : variant[];
        static function toArray (iterable : variant, start : number) : variant[];
        static function toArray (iterable : variant) : variant[];
        static function union (array1 : variant[], array2 : variant[], etc : variant[]) : variant[];
        static function unique (array : variant[]) : variant[];
    }

    class Audio extends Ext.Media
    {
        // Methods
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class Base
    {
        // Properties
        var self : Ext.Class;
        // Methods
        function callOverridden (args : variant[]) : variant;
        function callParent (args : variant[]) : variant;
        function callSuper (args : variant[]) : variant;
        function destroy () : void;
        function getInitialConfig (name : string) : variant;
        function getInitialConfig () : variant;
        function initConfig (instanceConfig : variant) : variant;
        function statics () : Ext.Class;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class Button extends Ext.Component
    {
        // Methods
        function getAutoEvent () : string;
        function getBadgeCls () : string;
        function getBadgeText () : string;
        function getHandler () : function () : void;
        function getIcon () : string;
        function getIconAlign () : string;
        function getIconCls () : string;
        function getLabelCls () : string;
        function getPressedCls () : string;
        function getPressedDelay () : variant;
        function getScope () : variant;
        function getText () : string;
        function setAutoEvent (autoEvent : string) : void;
        function setBadgeCls (badgeCls : string) : void;
        function setBadgeText (badgeText : string) : void;
        function setHandler (handler : function  () : void) : void;
        function setIcon (icon : string) : void;
        function setIconAlign (iconAlign : string) : void;
        function setIconCls (iconCls : string) : void;
        function setLabelCls (labelCls : string) : void;
        function setPressedCls (pressedCls : string) : void;
        function setPressedDelay (pressedDelay : number) : void;
        function setPressedDelay (pressedDelay : boolean) : void;
        function setScope (scope : variant) : void;
        function setText (text : string) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
        // Events
        function release (this_ : Ext.Button, e : Ext.event.Event, eOpts : variant) : void;
        function tap (this_ : Ext.Button, e : Ext.event.Event, eOpts : variant) : void;
    }

    class Class
    {
        // Methods
        function constructor (data : variant, onCreated : function  () : void);
        function constructor (data : variant);
    }

    class ClassManager
    {
        // Methods
        static function addNameAliasMappings (aliases : variant) : Ext.ClassManager;
        static function addNameAlternateMappings (alternates : variant) : Ext.ClassManager;
        static function get (name : string) : Ext.Class;
        static function getAliasesByName (name : string) : variant[];
        static function getByAlias (alias : string) : Ext.Class;
        static function getClass (object : variant) : Ext.Class;
        static function getName (object : Ext.Class) : string;
        static function getName (object : variant) : string;
        static function getNameByAlias (alias : string) : string;
        static function getNameByAlternate (alternate : string) : string;
        static function getNamesByExpression (expression : string) : variant[];
        static function instantiate (name : string, args : variant) : variant;
        static function instantiateByAlias (alias : string, args : variant) : variant;
        static function isCreated (className : string) : boolean;
        static function set (name : string, value : variant) : Ext.ClassManager;
        static function setAlias (cls : Ext.Class, alias : string) : Ext.ClassManager;
        static function setAlias (cls : string, alias : string) : Ext.ClassManager;
        static function setNamespace (name : string, value : variant) : void;
    }

    class Component extends Ext.AbstractComponent
    {
        // Methods
        function constructor (config : variant);
        function addCls (cls : string, prefix : string, suffix : string) : void;
        function addCls (cls : string, prefix : string) : void;
        function addCls (cls : string) : void;
        override function destroy () : void;
        function disable () : void;
        function enable () : void;
        function getAlignmentInfo (component : variant, alignment : variant) : void;
        function getBaseCls () : string;
        function getBorder () : variant;
        function getBottom () : variant;
        function getCentered () : boolean;
        function getCls () : variant;
        function getContentEl () : variant;
        function getData () : variant;
        function getDisabled () : boolean;
        function getDisabledCls () : string;
        function getDocked () : string;
        function getFlex () : number;
        function getFloatingCls () : string;
        function getHeight () : variant;
        function getHidden () : boolean;
        function getHiddenCls () : string;
        function getHideAnimation () : variant;
        function getHtml () : variant;
        function getItemId () : string;
        function getLeft () : variant;
        function getMargin () : variant;
        function getMaxHeight () : variant;
        function getMaxWidth () : variant;
        function getMinHeight () : variant;
        function getMinWidth () : variant;
        function getPadding () : variant;
        function getParent () : Ext.Component;
        function getPlugins () : variant;
        function getRecord () : Ext.data.Model;
        function getRenderTo () : Ext.dom.Element;
        function getRight () : variant;
        function getShowAnimation () : variant;
        function getSize () : variant;
        function getStyle () : variant;
        function getStyleHtmlCls () : string;
        function getStyleHtmlContent () : boolean;
        function getTop () : variant;
        function getTpl () : variant;
        function getTplWriteMode () : string;
        function getUi () : string;
        function getWidth () : variant;
        function getXTypes () : string;
        function getZIndex () : number;
        function hasParent () : boolean;
        function hide (animation : variant) : Ext.Component;
        function hide (animation : boolean) : Ext.Component;
        function hide () : Ext.Component;
        function initialize () : void;
        function isDisabled () : boolean;
        function isHidden () : boolean;
        function isXType (xtype : string, shallow : boolean) : boolean;
        function isXType (xtype : string) : boolean;
        function removeCls (cls : string, prefix : string, suffix : string) : void;
        function removeCls (cls : string, prefix : string) : void;
        function removeCls (cls : string) : void;
        function replaceCls (oldCls : string, newCls : string, prefix : string, suffix : string) : void;
        function replaceCls (oldCls : string, newCls : string, prefix : string) : void;
        function replaceCls (oldCls : string, newCls : string) : void;
        function resetFloating () : void;
        function setBaseCls (baseCls : string) : void;
        function setBorder (border : number) : void;
        function setBorder (border : string) : void;
        function setBottom (bottom : number) : void;
        function setBottom (bottom : string) : void;
        function setCentered (centered : boolean) : void;
        function setCls (cls : string) : void;
        function setCls (cls : string[]) : void;
        function setContentEl (contentEl : Ext.dom.Element) : void;
        function setContentEl (contentEl : HTMLElement) : void;
        function setContentEl (contentEl : string) : void;
        function setData (data : variant) : void;
        function setDisabled (disabled : boolean) : void;
        function setDisabledCls (disabledCls : string) : void;
        function setDocked (docked : string) : void;
        function setDraggable (draggable : variant) : void;
        function setFlex (flex : number) : void;
        function setFloatingCls (floatingCls : string) : void;
        function setHeight (height : number) : void;
        function setHeight (height : string) : void;
        function setHidden (hidden : boolean) : void;
        function setHiddenCls (hiddenCls : string) : void;
        function setHideAnimation (hideAnimation : string) : void;
        function setHideAnimation (hideAnimation : variant) : void;
        function setHtml (html : string) : void;
        function setHtml (html : Ext.dom.Element) : void;
        function setHtml (html : HTMLElement) : void;
        function setItemId (itemId : string) : void;
        function setLeft (left : number) : void;
        function setLeft (left : string) : void;
        function setMargin (margin : number) : void;
        function setMargin (margin : string) : void;
        function setMaxHeight (maxHeight : number) : void;
        function setMaxHeight (maxHeight : string) : void;
        function setMaxWidth (maxWidth : number) : void;
        function setMaxWidth (maxWidth : string) : void;
        function setMinHeight (minHeight : number) : void;
        function setMinHeight (minHeight : string) : void;
        function setMinWidth (minWidth : number) : void;
        function setMinWidth (minWidth : string) : void;
        function setPadding (padding : number) : void;
        function setPadding (padding : string) : void;
        function setPlugins (plugins : variant) : void;
        function setPlugins (plugins : variant[]) : void;
        function setRecord (record : Ext.data.Model) : void;
        function setRenderTo (renderTo : Ext.dom.Element) : void;
        function setRight (right : number) : void;
        function setRight (right : string) : void;
        function setScrollable () : void;
        function setShowAnimation (showAnimation : string) : void;
        function setShowAnimation (showAnimation : variant) : void;
        function setSize (width : number, height : number) : void;
        function setStyle (style : string) : void;
        function setStyle (style : variant) : void;
        function setStyleHtmlCls (styleHtmlCls : string) : void;
        function setStyleHtmlContent (styleHtmlContent : boolean) : void;
        function setTop (top : number) : void;
        function setTop (top : string) : void;
        function setTpl (tpl : string) : void;
        function setTpl (tpl : string[]) : void;
        function setTpl (tpl : Ext.Template) : void;
        function setTpl (tpl : Ext.XTemplate[]) : void;
        function setTplWriteMode (tplWriteMode : string) : void;
        function setUi (ui : string) : void;
        function setWidth (width : number) : void;
        function setWidth (width : string) : void;
        function setZIndex (zIndex : number) : void;
        function show (animation : variant) : Ext.Component;
        function show (animation : boolean) : Ext.Component;
        function show () : Ext.Component;
        function showBy (component : Ext.Component, alignment : string) : void;
        function showBy (component : Ext.Component) : void;
        function up (selector : string) : Ext.Container;
        function up () : Ext.Container;
        function updateStyleHtmlCls (newHtmlCls : variant, oldHtmlCls : variant) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
        // Events
        function beforeorientationchange (eOpts : variant) : void;
        function bottomchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        function bottomchange (this_ : Ext.Component, value : number, oldValue : string, eOpts : variant) : void;
        function bottomchange (this_ : Ext.Component, value : string, oldValue : number, eOpts : variant) : void;
        function bottomchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
        function centeredchange (this_ : Ext.Component, value : boolean, oldValue : boolean, eOpts : variant) : void;
        function destroy (eOpts : variant) : void;
        function disabledchange (this_ : Ext.Component, value : boolean, oldValue : boolean, eOpts : variant) : void;
        function dockedchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
        function erased (this_ : Ext.Component, eOpts : variant) : void;
        function flexchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        function floatingchange (this_ : Ext.Component, floating : boolean, eOpts : variant) : void;
        function fullscreen (this_ : Ext.Component, eOpts : variant) : void;
        function heightchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        function heightchange (this_ : Ext.Component, value : number, oldValue : string, eOpts : variant) : void;
        function heightchange (this_ : Ext.Component, value : string, oldValue : number, eOpts : variant) : void;
        function heightchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
        function hiddenchange (this_ : Ext.Component, value : boolean, oldValue : boolean, eOpts : variant) : void;
        function hide (this_ : Ext.Component, eOpts : variant) : void;
        function initialize (this_ : Ext.Component, eOpts : variant) : void;
        function leftchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        function leftchange (this_ : Ext.Component, value : number, oldValue : string, eOpts : variant) : void;
        function leftchange (this_ : Ext.Component, value : string, oldValue : number, eOpts : variant) : void;
        function leftchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
        function maxheightchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        function maxheightchange (this_ : Ext.Component, value : number, oldValue : string, eOpts : variant) : void;
        function maxheightchange (this_ : Ext.Component, value : string, oldValue : number, eOpts : variant) : void;
        function maxheightchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
        function maxwidthchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        function maxwidthchange (this_ : Ext.Component, value : number, oldValue : string, eOpts : variant) : void;
        function maxwidthchange (this_ : Ext.Component, value : string, oldValue : number, eOpts : variant) : void;
        function maxwidthchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
        function minheightchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        function minheightchange (this_ : Ext.Component, value : number, oldValue : string, eOpts : variant) : void;
        function minheightchange (this_ : Ext.Component, value : string, oldValue : number, eOpts : variant) : void;
        function minheightchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
        function minwidthchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        function minwidthchange (this_ : Ext.Component, value : number, oldValue : string, eOpts : variant) : void;
        function minwidthchange (this_ : Ext.Component, value : string, oldValue : number, eOpts : variant) : void;
        function minwidthchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
        function orientationchange (eOpts : variant) : void;
        function painted (element : Ext.dom.Element, eOpts : variant) : void;
        function resize (element : Ext.dom.Element, eOpts : variant) : void;
        function rightchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        function rightchange (this_ : Ext.Component, value : number, oldValue : string, eOpts : variant) : void;
        function rightchange (this_ : Ext.Component, value : string, oldValue : number, eOpts : variant) : void;
        function rightchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
        function show (this_ : Ext.Component, eOpts : variant) : void;
        function topchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        function topchange (this_ : Ext.Component, value : number, oldValue : string, eOpts : variant) : void;
        function topchange (this_ : Ext.Component, value : string, oldValue : number, eOpts : variant) : void;
        function topchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
        function updatedata (this_ : Ext.Component, newData : variant, eOpts : variant) : void;
        function widthchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        function widthchange (this_ : Ext.Component, value : number, oldValue : string, eOpts : variant) : void;
        function widthchange (this_ : Ext.Component, value : string, oldValue : number, eOpts : variant) : void;
        function widthchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
    }


    class ComponentQuery
    {
        // Methods
        static function is (component : Ext.Component, selector : string) : boolean;
        static function query (selector : string, root : Ext.Container) : Ext.Component[];
    }

    class Container extends Ext.Component
    {
        // Methods
        function constructor (config : variant);
        function add (newItems : variant) : Ext.Component;
        function add (newItems : variant[]) : Ext.Component;
        function add (newItems : Ext.Component) : Ext.Component;
        function add (newItems : Ext.Component[]) : Ext.Component;
        function animateActiveItem (activeItem : variant, animation : variant) : void;
        function animateActiveItem (activeItem : variant, animation : Ext.fx.layout.Card) : void;
        function animateActiveItem (activeItem : number, animation : variant) : void;
        function animateActiveItem (activeItem : number, animation : Ext.fx.layout.Card) : void;
        function applyMasked (masked : boolean) : variant;
        function applyMasked (masked : variant) : variant;
        function applyMasked (masked : Ext.Mask) : variant;
        function applyMasked (masked : Ext.LoadMask) : variant;
        function child (selector : string) : Ext.Component;
        override function destroy () : void;
        function down (selector : string) : Ext.Component;
        function getActiveItem () : variant;
        function getAt (index : number) : Ext.Component;
        function getAutoDestroy () : boolean;
        function getComponent (component : string) : Ext.Component;
        function getComponent (component : number) : Ext.Component;
        function getControl () : variant;
        function getDefaultType () : string;
        function getDefaults () : variant;
        function getDockedComponent (component : string) : variant;
        function getDockedComponent (component : number) : variant;
        function getDockedItems () : variant[];
        function getHideOnMaskTap () : boolean;
        function getInnerItems () : variant[];
        function getItems () : variant;
        function getMasked () : variant;
        function getModal () : boolean;
        function getScrollable () : boolean;
        function insert (index : number, item : variant) : void;
        function mask (mask : variant) : void;
        function query (selector : string) : variant[];
        function remove (item : variant, destroy : boolean) : Ext.Component;
        function remove (item : variant) : Ext.Component;
        function removeAll (destroy : boolean, everything : boolean) : Ext.Component;
        function removeAt (index : number) : Ext.Container;
        function removeInnerAt (index : number) : Ext.Container;
        function setActiveItem (activeItem : variant) : void;
        function setActiveItem (activeItem : string) : void;
        function setActiveItem (activeItem : number) : void;
        function setAutoDestroy (autoDestroy : boolean) : void;
        function setControl (control : variant) : void;
        function setDefaultType (defaultType : string) : void;
        function setDefaults (defaults : variant) : void;
        function setHideOnMaskTap (hideOnMaskTap : boolean) : void;
        function setItems (items : variant[]) : void;
        function setItems (items : variant) : void;
        function setLayout (layout : variant) : void;
        function setLayout (layout : string) : void;
        function setMasked (masked : boolean) : void;
        function setMasked (masked : variant) : void;
        function setMasked (masked : Ext.Mask) : void;
        function setMasked (masked : Ext.LoadMask) : void;
        function setModal (modal : boolean) : void;
        override function show () : Ext.Component;
        function unmask () : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
        // Events
        function activate (newActiveItem : variant, this_ : Ext.Container, oldActiveItem : variant, eOpts : variant) : void;
        function activeitemchange (this_ : Ext.Container, value : variant, oldValue : variant, eOpts : variant) : void;
        function activeitemchange (this_ : Ext.Container, value : variant, oldValue : string, eOpts : variant) : void;
        function activeitemchange (this_ : Ext.Container, value : variant, oldValue : number, eOpts : variant) : void;
        function activeitemchange (this_ : Ext.Container, value : string, oldValue : variant, eOpts : variant) : void;
        function activeitemchange (this_ : Ext.Container, value : string, oldValue : string, eOpts : variant) : void;
        function activeitemchange (this_ : Ext.Container, value : string, oldValue : number, eOpts : variant) : void;
        function activeitemchange (this_ : Ext.Container, value : number, oldValue : variant, eOpts : variant) : void;
        function activeitemchange (this_ : Ext.Container, value : number, oldValue : string, eOpts : variant) : void;
        function activeitemchange (this_ : Ext.Container, value : number, oldValue : number, eOpts : variant) : void;
        function add (this_ : Ext.Container, item : variant, index : number, eOpts : variant) : void;
        function deactivate (oldActiveItem : variant, this_ : Ext.Container, newActiveItem : variant, eOpts : variant) : void;
        function move (this_ : Ext.Container, item : variant, toIndex : number, fromIndex : number, eOpts : variant) : void;
        function remove (this_ : Ext.Container, item : variant, index : number, eOpts : variant) : void;
        function scrollablechange (this_ : Ext.Container, value : boolean, oldValue : boolean, eOpts : variant) : Ext.scroll.View;
        function scrollablechange (this_ : Ext.Container, value : boolean, oldValue : string, eOpts : variant) : Ext.scroll.View;
        function scrollablechange (this_ : Ext.Container, value : boolean, oldValue : variant, eOpts : variant) : Ext.scroll.View;
        function scrollablechange (this_ : Ext.Container, value : string, oldValue : boolean, eOpts : variant) : Ext.scroll.View;
        function scrollablechange (this_ : Ext.Container, value : string, oldValue : string, eOpts : variant) : Ext.scroll.View;
        function scrollablechange (this_ : Ext.Container, value : string, oldValue : variant, eOpts : variant) : Ext.scroll.View;
        function scrollablechange (this_ : Ext.Container, value : variant, oldValue : boolean, eOpts : variant) : Ext.scroll.View;
        function scrollablechange (this_ : Ext.Container, value : variant, oldValue : string, eOpts : variant) : Ext.scroll.View;
        function scrollablechange (this_ : Ext.Container, value : variant, oldValue : variant, eOpts : variant) : Ext.scroll.View;
    }

    class Date
    {
        // Properties
        static var DAY : string;
        static var HOUR : string;
        static var MILLI : string;
        static var MINUTE : string;
        static var MONTH : string;
        static var SECOND : string;
        static var YEAR : string;
        static var dayNames : variant[];
        static var defaultFormat : string;
        static var defaults : variant;
        static var formatCodes : variant;
        static var formatFunctions : variant;
        static var monthNames : variant[];
        static var monthNumbers : variant;
        static var parseFunctions : variant;
        static var useStrict : boolean;
        // Methods
        static function add (date : Date, interval : string, value : number) : Date;
        static function align (date : Date, unit : string) : Date;
        static function between (date : Date, start : Date, end : Date) : boolean;
        static function clearTime (date : Date, clone : boolean) : Date;
        static function clearTime (date : Date) : Date;
        static function clone (date : Date) : Date;
        static function diff (min : Date, max : Date, unit : string) : number;
        static function format (date : Date, format : string) : string;
        static function getDayOfYear (date : Date) : number;
        static function getDaysInMonth (date : Date) : number;
        static function getElapsed (dateA : Date, dateB : Date) : number;
        static function getElapsed (dateA : Date) : number;
        static function getFirstDateOfMonth (date : Date) : Date;
        static function getFirstDayOfMonth (date : Date) : number;
        static function getGMTOffset (date : Date, colon : boolean) : string;
        static function getGMTOffset (date : Date) : string;
        static function getLastDateOfMonth (date : Date) : Date;
        static function getLastDayOfMonth (date : Date) : number;
        static function getMonthNumber (name : string) : number;
        static function getShortDayName (day : number) : string;
        static function getShortMonthName (month : number) : string;
        static function getSuffix (date : Date) : string;
        static function getTimezone (date : Date) : string;
        static function getWeekOfYear (date : Date) : number;
        static function isDST (date : Date) : boolean;
        static function isLeapYear (date : Date) : boolean;
        static function isValid (year : number, month : number, day : number, hour : number, minute : number, second : number, millisecond : number) : boolean;
        static function isValid (year : number, month : number, day : number, hour : number, minute : number, second : number) : boolean;
        static function isValid (year : number, month : number, day : number, hour : number, minute : number) : boolean;
        static function isValid (year : number, month : number, day : number, hour : number) : boolean;
        static function isValid (year : number, month : number, day : number) : boolean;
        static function now () : number;
        static function parse (input : string, format : string, strict : boolean) : variant;
        static function parse (input : string, format : string) : variant;
        static function parse (input : number, format : string, strict : boolean) : variant;
        static function parse (input : number, format : string) : variant;
    }

    class DateExtras
    {
        // Properties
        static var DAY : string;
        static var HOUR : string;
        static var MILLI : string;
        static var MINUTE : string;
        static var MONTH : string;
        static var SECOND : string;
        static var YEAR : string;
        static var dayNames : variant[];
        static var defaultFormat : string;
        static var defaults : variant;
        static var formatCodes : variant;
        static var formatFunctions : variant;
        static var monthNames : variant[];
        static var monthNumbers : variant;
        static var parseFunctions : variant;
        static var useStrict : boolean;
        // Methods
        static function add (date : Date, interval : string, value : number) : Date;
        static function align (date : Date, unit : string) : Date;
        static function between (date : Date, start : Date, end : Date) : boolean;
        static function clearTime (date : Date, clone : boolean) : Date;
        static function clearTime (date : Date) : Date;
        static function clone (date : Date) : Date;
        static function diff (min : Date, max : Date, unit : string) : number;
        static function format (date : Date, format : string) : string;
        static function getDayOfYear (date : Date) : number;
        static function getDaysInMonth (date : Date) : number;
        static function getElapsed (dateA : Date, dateB : Date) : number;
        static function getElapsed (dateA : Date) : number;
        static function getFirstDateOfMonth (date : Date) : Date;
        static function getFirstDayOfMonth (date : Date) : number;
        static function getGMTOffset (date : Date, colon : boolean) : string;
        static function getGMTOffset (date : Date) : string;
        static function getLastDateOfMonth (date : Date) : Date;
        static function getLastDayOfMonth (date : Date) : number;
        static function getMonthNumber (name : string) : number;
        static function getShortDayName (day : number) : string;
        static function getShortMonthName (month : number) : string;
        static function getSuffix (date : Date) : string;
        static function getTimezone (date : Date) : string;
        static function getWeekOfYear (date : Date) : number;
        static function isDST (date : Date) : boolean;
        static function isLeapYear (date : Date) : boolean;
        static function isValid (year : number, month : number, day : number, hour : number, minute : number, second : number, millisecond : number) : boolean;
        static function isValid (year : number, month : number, day : number, hour : number, minute : number, second : number) : boolean;
        static function isValid (year : number, month : number, day : number, hour : number, minute : number) : boolean;
        static function isValid (year : number, month : number, day : number, hour : number) : boolean;
        static function isValid (year : number, month : number, day : number) : boolean;
        static function now () : number;
        static function parse (input : string, format : string, strict : boolean) : variant;
        static function parse (input : string, format : string) : variant;
        static function parse (input : number, format : string, strict : boolean) : variant;
        static function parse (input : number, format : string) : variant;
    }

    class Decorator extends Ext.Component
    {
        // Methods
        override function destroy () : void;
        function getComponent () : variant;
        function setComponent (component : variant) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class DomHelper
    {
        // Methods
        function append (el : string, o : variant, returnElement : boolean) : variant;
        function append (el : string, o : variant) : variant;
        function append (el : string, o : string, returnElement : boolean) : variant;
        function append (el : string, o : string) : variant;
        function append (el : HTMLElement, o : variant, returnElement : boolean) : variant;
        function append (el : HTMLElement, o : variant) : variant;
        function append (el : HTMLElement, o : string, returnElement : boolean) : variant;
        function append (el : HTMLElement, o : string) : variant;
        function append (el : Ext.dom.Element, o : variant, returnElement : boolean) : variant;
        function append (el : Ext.dom.Element, o : variant) : variant;
        function append (el : Ext.dom.Element, o : string, returnElement : boolean) : variant;
        function append (el : Ext.dom.Element, o : string) : variant;
        function applyStyles (el : string, styles : string) : void;
        function applyStyles (el : string, styles : variant) : void;
        function applyStyles (el : string, styles : function  () : void) : void;
        function applyStyles (el : HTMLElement, styles : string) : void;
        function applyStyles (el : HTMLElement, styles : variant) : void;
        function applyStyles (el : HTMLElement, styles : function  () : void) : void;
        function createTemplate (o : variant) : Ext.Template;
        function generateStyles (styles : variant, buffer : string[]) : variant;
        function generateStyles (styles : variant) : variant;
        function insertAfter (el : string, o : variant, returnElement : boolean) : variant;
        function insertAfter (el : string, o : variant) : variant;
        function insertAfter (el : HTMLElement, o : variant, returnElement : boolean) : variant;
        function insertAfter (el : HTMLElement, o : variant) : variant;
        function insertAfter (el : Ext.dom.Element, o : variant, returnElement : boolean) : variant;
        function insertAfter (el : Ext.dom.Element, o : variant) : variant;
        function insertBefore (el : string, o : variant, returnElement : boolean) : variant;
        function insertBefore (el : string, o : variant) : variant;
        function insertBefore (el : string, o : string, returnElement : boolean) : variant;
        function insertBefore (el : string, o : string) : variant;
        function insertBefore (el : HTMLElement, o : variant, returnElement : boolean) : variant;
        function insertBefore (el : HTMLElement, o : variant) : variant;
        function insertBefore (el : HTMLElement, o : string, returnElement : boolean) : variant;
        function insertBefore (el : HTMLElement, o : string) : variant;
        function insertBefore (el : Ext.dom.Element, o : variant, returnElement : boolean) : variant;
        function insertBefore (el : Ext.dom.Element, o : variant) : variant;
        function insertBefore (el : Ext.dom.Element, o : string, returnElement : boolean) : variant;
        function insertBefore (el : Ext.dom.Element, o : string) : variant;
        function insertFirst (el : string, o : variant, returnElement : boolean) : variant;
        function insertFirst (el : string, o : variant) : variant;
        function insertFirst (el : string, o : string, returnElement : boolean) : variant;
        function insertFirst (el : string, o : string) : variant;
        function insertFirst (el : HTMLElement, o : variant, returnElement : boolean) : variant;
        function insertFirst (el : HTMLElement, o : variant) : variant;
        function insertFirst (el : HTMLElement, o : string, returnElement : boolean) : variant;
        function insertFirst (el : HTMLElement, o : string) : variant;
        function insertFirst (el : Ext.dom.Element, o : variant, returnElement : boolean) : variant;
        function insertFirst (el : Ext.dom.Element, o : variant) : variant;
        function insertFirst (el : Ext.dom.Element, o : string, returnElement : boolean) : variant;
        function insertFirst (el : Ext.dom.Element, o : string) : variant;
        function insertHtml (where : string, el : HTMLElement, html : string) : HTMLElement;
        function insertHtml (where : string, el : Text, html : string) : HTMLElement;
        function markup (spec : variant) : string;
        function overwrite (el : string, o : variant, returnElement : boolean) : variant;
        function overwrite (el : string, o : variant) : variant;
        function overwrite (el : string, o : string, returnElement : boolean) : variant;
        function overwrite (el : string, o : string) : variant;
        function overwrite (el : HTMLElement, o : variant, returnElement : boolean) : variant;
        function overwrite (el : HTMLElement, o : variant) : variant;
        function overwrite (el : HTMLElement, o : string, returnElement : boolean) : variant;
        function overwrite (el : HTMLElement, o : string) : variant;
        function overwrite (el : Ext.dom.Element, o : variant, returnElement : boolean) : variant;
        function overwrite (el : Ext.dom.Element, o : variant) : variant;
        function overwrite (el : Ext.dom.Element, o : string, returnElement : boolean) : variant;
        function overwrite (el : Ext.dom.Element, o : string) : variant;
    }

    class DomQuery extends Ext.dom.Query
    {
        // Properties
        // Methods
        static function callOverridden (args : variant[]) : variant;
        static function callParent (args : variant[]) : variant;
        static function callSuper (args : variant[]) : variant;
        static function destroy () : void;
        static function getInitialConfig (name : string) : variant;
        static function getInitialConfig () : variant;
        static function initConfig (instanceConfig : variant) : variant;
        static function is (el : string, selector : string) : boolean;
        static function is (el : HTMLElement, selector : string) : boolean;
        static function is (el : variant[], selector : string) : boolean;
        static function select (selector : string, root : HTMLElement) : HTMLElement[];
        static function select (selector : string, root : string) : HTMLElement[];
        static function select (selector : string) : HTMLElement[];
        static function selectNode (selector : string, root : HTMLElement) : HTMLElement;
        static function selectNode (selector : string, root : string) : HTMLElement;
        static function selectNode (selector : string) : HTMLElement;
        static function statics () : Ext.Class;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }


    class Evented extends Ext.Base
    {
        // Methods
        function constructor (config : variant);
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class Function
    {
        // Methods
        static function alias (object : variant, methodName : string) : function () : void;
        static function alias (object : function  () : void, methodName : string) : function () : void;
        static function bind (fn : function  () : void, scope : variant, args : variant[], appendArgs : boolean) : function () : void;
        static function bind (fn : function  () : void, scope : variant, args : variant[], appendArgs : number) : function () : void;
        static function bind (fn : function  () : void, scope : variant, args : variant[]) : function () : void;
        static function bind (fn : function  () : void, scope : variant, appendArgs : boolean) : function () : void;
        static function bind (fn : function  () : void, scope : variant, appendArgs : number) : function () : void;
        static function bind (fn : function  () : void, scope : variant) : function () : void;
        static function bind (fn : function  () : void, args : variant[], appendArgs : boolean) : function () : void;
        static function bind (fn : function  () : void, args : variant[], appendArgs : number) : function () : void;
        static function bind (fn : function  () : void, args : variant[]) : function () : void;
        static function bind (fn : function  () : void, appendArgs : boolean) : function () : void;
        static function bind (fn : function  () : void, appendArgs : number) : function () : void;
        static function bind (fn : function  () : void) : function () : void;
        static function clone (method : function  () : void) : function () : void;
        static function createBuffered (fn : function  () : void, buffer : number, scope : variant, args : variant[]) : function () : void;
        static function createBuffered (fn : function  () : void, buffer : number, scope : variant) : function () : void;
        static function createBuffered (fn : function  () : void, buffer : number, args : variant[]) : function () : void;
        static function createBuffered (fn : function  () : void, buffer : number) : function () : void;
        static function createDelayed (fn : function  () : void, delay : number, scope : variant, args : variant[], appendArgs : boolean) : function () : void;
        static function createDelayed (fn : function  () : void, delay : number, scope : variant, args : variant[], appendArgs : number) : function () : void;
        static function createDelayed (fn : function  () : void, delay : number, scope : variant, args : variant[]) : function () : void;
        static function createDelayed (fn : function  () : void, delay : number, scope : variant, appendArgs : boolean) : function () : void;
        static function createDelayed (fn : function  () : void, delay : number, scope : variant, appendArgs : number) : function () : void;
        static function createDelayed (fn : function  () : void, delay : number, scope : variant) : function () : void;
        static function createDelayed (fn : function  () : void, delay : number, args : variant[], appendArgs : boolean) : function () : void;
        static function createDelayed (fn : function  () : void, delay : number, args : variant[], appendArgs : number) : function () : void;
        static function createDelayed (fn : function  () : void, delay : number, args : variant[]) : function () : void;
        static function createDelayed (fn : function  () : void, delay : number, appendArgs : boolean) : function () : void;
        static function createDelayed (fn : function  () : void, delay : number, appendArgs : number) : function () : void;
        static function createDelayed (fn : function  () : void, delay : number) : function () : void;
        static function createInterceptor (origFn : function  () : void, newFn : function  () : void, scope : variant, returnValue : variant) : function () : void;
        static function createInterceptor (origFn : function  () : void, newFn : function  () : void, scope : variant) : function () : void;
        static function createInterceptor (origFn : function  () : void, newFn : function  () : void) : function () : void;
        static function createSequence (originalFn : function  () : void, newFn : function  () : void, scope : variant) : function () : void;
        static function createSequence (originalFn : function  () : void, newFn : function  () : void) : function () : void;
        static function createThrottled (fn : function  () : void, interval : number, scope : variant) : function () : void;
        static function createThrottled (fn : function  () : void, interval : number) : function () : void;
        static function defer (fn : function  () : void, millis : number, scope : variant, args : variant[], appendArgs : boolean) : number;
        static function defer (fn : function  () : void, millis : number, scope : variant, args : variant[], appendArgs : number) : number;
        static function defer (fn : function  () : void, millis : number, scope : variant, args : variant[]) : number;
        static function defer (fn : function  () : void, millis : number, scope : variant, appendArgs : boolean) : number;
        static function defer (fn : function  () : void, millis : number, scope : variant, appendArgs : number) : number;
        static function defer (fn : function  () : void, millis : number, scope : variant) : number;
        static function defer (fn : function  () : void, millis : number, args : variant[], appendArgs : boolean) : number;
        static function defer (fn : function  () : void, millis : number, args : variant[], appendArgs : number) : number;
        static function defer (fn : function  () : void, millis : number, args : variant[]) : number;
        static function defer (fn : function  () : void, millis : number, appendArgs : boolean) : number;
        static function defer (fn : function  () : void, millis : number, appendArgs : number) : number;
        static function defer (fn : function  () : void, millis : number) : number;
        static function flexSetter (fn : function  () : void) : function () : void;
        static function interceptAfter (object : variant, methodName : string, fn : function  () : void, scope : variant) : function () : void;
        static function interceptAfter (object : variant, methodName : string, fn : function  () : void) : function () : void;
        static function interceptBefore (object : variant, methodName : string, fn : function  () : void, scope : variant) : function () : void;
        static function interceptBefore (object : variant, methodName : string, fn : function  () : void) : function () : void;
        static function pass (fn : function  () : void, args : variant[], scope : variant) : function () : void;
        static function pass (fn : function  () : void, args : variant[]) : function () : void;
    }

    class Img extends Ext.Component
    {
        // Methods
        function getBackgroundCls () : string;
        function getImageCls () : string;
        function getMode () : string;
        function getSrc () : string;
        function setBackgroundCls (backgroundCls : string) : void;
        function setImageCls (imageCls : string) : void;
        function setMode (mode : string) : void;
        function setSrc (src : string) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
        // Events
        function error (this_ : Ext.Img, e : Ext.event.Event, eOpts : variant) : void;
        function load (this_ : Ext.Img, e : Ext.event.Event, eOpts : variant) : void;
        function tap (this_ : Ext.Img, e : Ext.event.Event, eOpts : variant) : void;
    }


    class JSON
    {
        // Methods
        static function decode (json : string, safe : boolean) : variant;
        static function decode (json : string) : variant;
        static function encode (o : variant) : string;
        static function encodeDate (d : Date) : string;
    }

    class Label extends Ext.Component
    {
        // Methods
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class LoadMask extends Ext.Mask
    {
        // Methods
        function bindStore (store : Ext.data.Store) : void;
        function getIndicator () : boolean;
        function getMessage () : string;
        function getMessageCls () : string;
        function setIndicator (indicator : boolean) : void;
        function setMessage (message : string) : void;
        function setMessageCls (messageCls : string) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class Loader
    {
        // Properties
        static var history : variant[];
        // Methods
        static function addClassPathMappings (paths : Object ) : Ext.Loader;
        static function exclude (excludes : variant[]) : variant;
        static function getConfig (name : string) : variant;
        static function getPath (className : string) : string;
        static function onReady (fn : function  () : void, scope : variant, withDomReady : boolean) : void;
        static function require (expressions : string, fn : function  () : void, scope : variant, excludes : string) : void;
        static function require (expressions : string, fn : function  () : void, scope : variant, excludes : variant[]) : void;
        static function require (expressions : string, fn : function  () : void, scope : variant) : void;
        static function require (expressions : string, fn : function  () : void, excludes : string) : void;
        static function require (expressions : string, fn : function  () : void, excludes : variant[]) : void;
        static function require (expressions : string, fn : function  () : void) : void;
        static function require (expressions : string, scope : variant, excludes : string) : void;
        static function require (expressions : string, scope : variant, excludes : variant[]) : void;
        static function require (expressions : string, scope : variant) : void;
        static function require (expressions : string, excludes : string) : void;
        static function require (expressions : string, excludes : variant[]) : void;
        static function require (expressions : string) : void;
        static function require (expressions : variant[], fn : function  () : void, scope : variant, excludes : string) : void;
        static function require (expressions : variant[], fn : function  () : void, scope : variant, excludes : variant[]) : void;
        static function require (expressions : variant[], fn : function  () : void, scope : variant) : void;
        static function require (expressions : variant[], fn : function  () : void, excludes : string) : void;
        static function require (expressions : variant[], fn : function  () : void, excludes : variant[]) : void;
        static function require (expressions : variant[], fn : function  () : void) : void;
        static function require (expressions : variant[], scope : variant, excludes : string) : void;
        static function require (expressions : variant[], scope : variant, excludes : variant[]) : void;
        static function require (expressions : variant[], scope : variant) : void;
        static function require (expressions : variant[], excludes : string) : void;
        static function require (expressions : variant[], excludes : variant[]) : void;
        static function require (expressions : variant[]) : void;
        static function setConfig (name : variant, value : variant) : Ext.Loader;
        static function setConfig (name : variant) : Ext.Loader;
        static function setConfig (name : string, value : variant) : Ext.Loader;
        static function setConfig (name : string) : Ext.Loader;
        static function setPath (name : string, path : string) : Ext.Loader;
        static function setPath (name : string) : Ext.Loader;
        static function setPath (name : variant, path : string) : Ext.Loader;
        static function setPath (name : variant) : Ext.Loader;
        static function syncRequire (expressions : string, fn : function  () : void, scope : variant, excludes : string) : void;
        static function syncRequire (expressions : string, fn : function  () : void, scope : variant, excludes : variant[]) : void;
        static function syncRequire (expressions : string, fn : function  () : void, scope : variant) : void;
        static function syncRequire (expressions : string, fn : function  () : void, excludes : string) : void;
        static function syncRequire (expressions : string, fn : function  () : void, excludes : variant[]) : void;
        static function syncRequire (expressions : string, fn : function  () : void) : void;
        static function syncRequire (expressions : string, scope : variant, excludes : string) : void;
        static function syncRequire (expressions : string, scope : variant, excludes : variant[]) : void;
        static function syncRequire (expressions : string, scope : variant) : void;
        static function syncRequire (expressions : string, excludes : string) : void;
        static function syncRequire (expressions : string, excludes : variant[]) : void;
        static function syncRequire (expressions : string) : void;
        static function syncRequire (expressions : variant[], fn : function  () : void, scope : variant, excludes : string) : void;
        static function syncRequire (expressions : variant[], fn : function  () : void, scope : variant, excludes : variant[]) : void;
        static function syncRequire (expressions : variant[], fn : function  () : void, scope : variant) : void;
        static function syncRequire (expressions : variant[], fn : function  () : void, excludes : string) : void;
        static function syncRequire (expressions : variant[], fn : function  () : void, excludes : variant[]) : void;
        static function syncRequire (expressions : variant[], fn : function  () : void) : void;
        static function syncRequire (expressions : variant[], scope : variant, excludes : string) : void;
        static function syncRequire (expressions : variant[], scope : variant, excludes : variant[]) : void;
        static function syncRequire (expressions : variant[], scope : variant) : void;
        static function syncRequire (expressions : variant[], excludes : string) : void;
        static function syncRequire (expressions : variant[], excludes : variant[]) : void;
        static function syncRequire (expressions : variant[]) : void;
    }

    class Logger
    {
        // Methods
        static function deprecate () : void;
        static function error () : void;
        static function info () : void;
        static function log (message : string, priority : number) : Ext.Logger;
        static function verbose () : void;
        static function warn () : void;
    }

    class Map extends Ext.Container
    {
        // Methods
        function getGeo () : Ext.util.Geolocation;
        function getMap () : google.maps.Map;
        function getMapListeners () : variant;
        function getUseCurrentLocation () : variant;
        function setGeo (geo : Ext.util.Geolocation) : void;
        function setMap (map : google.maps.Map) : void;
        function setMapCenter (coordinates : variant) : void;
        function setMapCenter (coordinates : google.maps.LatLng) : void;
        function setMapListeners (mapListeners : variant) : void;
        function setMapOptions (mapOptions : variant) : void;
        function setUseCurrentLocation (useCurrentLocation : boolean) : void;
        function setUseCurrentLocation (useCurrentLocation : Ext.util.Geolocation) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
        // Events
        function centerchange (this_ : Ext.Map, map : google.maps.Map, center : google.maps.LatLng, eOpts : variant) : void;
        function maprender (this_ : Ext.Map, map : google.maps.Map, eOpts : variant) : void;
        function typechange (this_ : Ext.Map, map : google.maps.Map, mapType : number, eOpts : variant) : void;
        function zoomchange (this_ : Ext.Map, map : google.maps.Map, zoomLevel : number, eOpts : variant) : void;
    }

    class Mask extends Ext.Component
    {
        // Methods
        function getTransparent () : boolean;
        function setTransparent (transparent : boolean) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
        // Events
        function tap (this_ : Ext.Mask, e : Ext.event.Event, eOpts : variant) : void;
    }

    class Media extends Ext.Component
    {
        // Methods
        function getAutoPause () : boolean;
        function getAutoResume () : boolean;
        function getCurrentTime () : number;
        function getDuration () : number;
        function getEnableControls () : boolean;
        function getLoop () : boolean;
        function getMedia () : Ext.dom.Element;
        function getMuted () : boolean;
        function getPreload () : boolean;
        function getUrl () : string;
        function getVolume () : number;
        override function initialize () : void;
        function isPlaying () : boolean;
        function pause () : void;
        function play () : void;
        function setAutoPause (autoPause : boolean) : void;
        function setAutoResume (autoResume : boolean) : void;
        function setEnableControls (enableControls : boolean) : void;
        function setLoop (loop : boolean) : void;
        function setMedia (media : Ext.dom.Element) : void;
        function setMuted (muted : boolean) : void;
        function setPreload (preload : boolean) : void;
        function setUrl (url : string) : void;
        function setVolume (volume : number) : void;
        function stop () : void;
        function toggle () : void;
        function updateEnableControls (enableControls : variant) : void;
        function updateLoop (loop : variant) : void;
        function updateUrl (newUrl : variant) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
        // Events
        function ended (this_ : Ext.Media, time : number, eOpts : variant) : void;
        function mutedchange (this_ : Ext.Media, muted : boolean, eOpts : variant) : void;
        function pause (this_ : Ext.Media, time : number, eOpts : variant) : void;
        function play (this_ : Ext.Media, eOpts : variant) : void;
        function stop (this_ : Ext.Media, eOpts : variant) : void;
        function timeupdate (this_ : Ext.Media, time : number, eOpts : variant) : void;
        function volumechange (this_ : Ext.Media, volume : number, eOpts : variant) : void;
    }

    class Menu extends Ext.Button
    {
    }

    class MessageBox extends Ext.Sheet
    {
        // Methods
        function alert (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void, scope : variant) : Ext.MessageBox;
        function alert (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void) : Ext.MessageBox;
        function alert (title : string, message : string, scope : variant) : Ext.MessageBox;
        function alert (title : string, message : string) : Ext.MessageBox;
        function confirm (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void, scope : variant) : Ext.MessageBox;
        function confirm (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void) : Ext.MessageBox;
        function getButtons () : variant;
        function getDefaultTextHeight () : number;
        function getPrompt () : variant;
        function getTitle () : string;
        function prompt (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void, scope : variant, multiLine : boolean, value : string, prompt : variant) : Ext.MessageBox;
        function prompt (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void, scope : variant, multiLine : boolean, value : string) : Ext.MessageBox;
        function prompt (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void, scope : variant, multiLine : boolean, prompt : variant) : Ext.MessageBox;
        function prompt (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void, scope : variant, multiLine : boolean) : Ext.MessageBox;
        function prompt (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void, scope : variant, multiLine : number, value : string, prompt : variant) : Ext.MessageBox;
        function prompt (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void, scope : variant, multiLine : number, value : string) : Ext.MessageBox;
        function prompt (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void, scope : variant, multiLine : number, prompt : variant) : Ext.MessageBox;
        function prompt (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void, scope : variant, multiLine : number) : Ext.MessageBox;
        function prompt (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void, scope : variant, value : string, prompt : variant) : Ext.MessageBox;
        function prompt (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void, scope : variant, value : string) : Ext.MessageBox;
        function prompt (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void, scope : variant, prompt : variant) : Ext.MessageBox;
        function prompt (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void, scope : variant) : Ext.MessageBox;
        function setButtons (buttons : variant[]) : void;
        function setButtons (buttons : variant) : void;
        function setDefaultTextHeight (defaultTextHeight : number) : void;
        function setIconCls (iconCls : string) : void;
        function setMessage (message : string) : void;
        function setPrompt (prompt : variant) : void;
        function setTitle (title : string) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class Msg extends Ext.MessageBox
    {
        // Properties
        // Methods
        static function constructor (config : variant);
        static function add (newItems : variant) : Ext.Component;
        static function add (newItems : variant[]) : Ext.Component;
        static function add (newItems : Ext.Component) : Ext.Component;
        static function add (newItems : Ext.Component[]) : Ext.Component;
        static function addAfterListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function addAfterListener (eventName : string, fn : function  () : void, scope : variant) : void;
        static function addAfterListener (eventName : string, fn : function  () : void) : void;
        static function addAfterListener (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function addAfterListener (eventName : string, fn : string, scope : variant) : void;
        static function addAfterListener (eventName : string, fn : string) : void;
        static function addAfterListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function addAfterListener (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function addAfterListener (eventName : string[], fn : function  () : void) : void;
        static function addAfterListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function addAfterListener (eventName : string[], fn : string, scope : variant) : void;
        static function addAfterListener (eventName : string[], fn : string) : void;
        static function addAfterListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function addAfterListener (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function addAfterListener (eventName : variant, fn : function  () : void) : void;
        static function addAfterListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function addAfterListener (eventName : variant, fn : string, scope : variant) : void;
        static function addAfterListener (eventName : variant, fn : string) : void;
        static function addBeforeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function addBeforeListener (eventName : string, fn : function  () : void, scope : variant) : void;
        static function addBeforeListener (eventName : string, fn : function  () : void) : void;
        static function addBeforeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function addBeforeListener (eventName : string, fn : string, scope : variant) : void;
        static function addBeforeListener (eventName : string, fn : string) : void;
        static function addBeforeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function addBeforeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function addBeforeListener (eventName : string[], fn : function  () : void) : void;
        static function addBeforeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function addBeforeListener (eventName : string[], fn : string, scope : variant) : void;
        static function addBeforeListener (eventName : string[], fn : string) : void;
        static function addBeforeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function addBeforeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function addBeforeListener (eventName : variant, fn : function  () : void) : void;
        static function addBeforeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function addBeforeListener (eventName : variant, fn : string, scope : variant) : void;
        static function addBeforeListener (eventName : variant, fn : string) : void;
        static function addCls (cls : string, prefix : string, suffix : string) : void;
        static function addCls (cls : string, prefix : string) : void;
        static function addCls (cls : string) : void;
        static function addListener (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function addListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function addListener (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
        static function addListener (eventName : string, fn : function  () : void, scope : variant) : void;
        static function addListener (eventName : string, fn : function  () : void, order : string) : void;
        static function addListener (eventName : string, fn : function  () : void) : void;
        static function addListener (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
        static function addListener (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function addListener (eventName : string, fn : string, scope : variant, order : string) : void;
        static function addListener (eventName : string, fn : string, scope : variant) : void;
        static function addListener (eventName : string, fn : string, order : string) : void;
        static function addListener (eventName : string, fn : string) : void;
        static function addListener (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function addListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function addListener (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
        static function addListener (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function addListener (eventName : string[], fn : function  () : void, order : string) : void;
        static function addListener (eventName : string[], fn : function  () : void) : void;
        static function addListener (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
        static function addListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function addListener (eventName : string[], fn : string, scope : variant, order : string) : void;
        static function addListener (eventName : string[], fn : string, scope : variant) : void;
        static function addListener (eventName : string[], fn : string, order : string) : void;
        static function addListener (eventName : string[], fn : string) : void;
        static function addListener (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function addListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function addListener (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
        static function addListener (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function addListener (eventName : variant, fn : function  () : void, order : string) : void;
        static function addListener (eventName : variant, fn : function  () : void) : void;
        static function addListener (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
        static function addListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function addListener (eventName : variant, fn : string, scope : variant, order : string) : void;
        static function addListener (eventName : variant, fn : string, scope : variant) : void;
        static function addListener (eventName : variant, fn : string, order : string) : void;
        static function addListener (eventName : variant, fn : string) : void;
        static function alert (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void, scope : variant) : Ext.MessageBox;
        static function alert (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void) : Ext.MessageBox;
        static function alert (title : string, message : string, scope : variant) : Ext.MessageBox;
        static function alert (title : string, message : string) : Ext.MessageBox;
        static function animateActiveItem (activeItem : variant, animation : variant) : void;
        static function animateActiveItem (activeItem : variant, animation : Ext.fx.layout.Card) : void;
        static function animateActiveItem (activeItem : number, animation : variant) : void;
        static function animateActiveItem (activeItem : number, animation : Ext.fx.layout.Card) : void;
        static function applyMasked (masked : boolean) : variant;
        static function applyMasked (masked : variant) : variant;
        static function applyMasked (masked : Ext.Mask) : variant;
        static function applyMasked (masked : Ext.LoadMask) : variant;
        static function callOverridden (args : variant[]) : variant;
        static function callParent (args : variant[]) : variant;
        static function callSuper (args : variant[]) : variant;
        static function child (selector : string) : Ext.Component;
        static function clearListeners () : void;
        static function confirm (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void, scope : variant) : Ext.MessageBox;
        static function confirm (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void) : Ext.MessageBox;
        static function destroy () : void;
        static function disable () : void;
        static function down (selector : string) : Ext.Component;
        static function enable () : void;
        static function enableBubble (events : string) : void;
        static function enableBubble (events : string[]) : void;
        static function fireAction (eventName : string, args : variant[], fn : function  () : void, scope : variant) : variant;
        static function fireEvent (eventName : string, args : variant) : boolean;
        static function getActiveItem () : variant;
        static function getAlignmentInfo (component : variant, alignment : variant) : void;
        static function getAt (index : number) : Ext.Component;
        static function getAutoDestroy () : boolean;
        static function getBaseCls () : string;
        static function getBorder () : variant;
        static function getBottom () : variant;
        static function getBubbleEvents () : variant;
        static function getButtons () : variant;
        static function getCentered () : boolean;
        static function getCls () : variant;
        static function getComponent (component : string) : Ext.Component;
        static function getComponent (component : number) : Ext.Component;
        static function getContentEl () : variant;
        static function getControl () : variant;
        static function getData () : variant;
        static function getDefaultTextHeight () : number;
        static function getDefaultType () : string;
        static function getDefaults () : variant;
        static function getDisabled () : boolean;
        static function getDisabledCls () : string;
        static function getDocked () : string;
        static function getDockedComponent (component : string) : variant;
        static function getDockedComponent (component : number) : variant;
        static function getDockedItems () : variant[];
        static function getEnter () : string;
        static function getExit () : string;
        static function getFlex () : number;
        static function getFloatingCls () : string;
        static function getHeight () : variant;
        static function getHidden () : boolean;
        static function getHiddenCls () : string;
        static function getHideAnimation () : variant;
        static function getHideOnMaskTap () : boolean;
        static function getHtml () : variant;
        static function getId () : string;
        static function getInitialConfig (name : string) : variant;
        static function getInitialConfig () : variant;
        static function getInnerItems () : variant[];
        static function getItemId () : string;
        static function getItems () : variant;
        static function getLayout () : variant;
        static function getLeft () : variant;
        static function getListeners () : variant;
        static function getMargin () : variant;
        static function getMasked () : variant;
        static function getMaxHeight () : variant;
        static function getMaxWidth () : variant;
        static function getMinHeight () : variant;
        static function getMinWidth () : variant;
        static function getPadding () : variant;
        static function getParent () : Ext.Component;
        static function getPlugins () : variant;
        static function getPrompt () : variant;
        static function getRecord () : Ext.data.Model;
        static function getRenderTo () : Ext.dom.Element;
        static function getRight () : variant;
        static function getScrollable () : Ext.scroll.View;
        static function getShowAnimation () : variant;
        static function getSize () : variant;
        static function getStretchX () : boolean;
        static function getStretchY () : boolean;
        static function getStyle () : variant;
        static function getStyleHtmlCls () : string;
        static function getStyleHtmlContent () : boolean;
        static function getTitle () : string;
        static function getTop () : variant;
        static function getTpl () : variant;
        static function getTplWriteMode () : string;
        static function getUi () : string;
        static function getWidth () : variant;
        static function getXTypes () : string;
        static function getZIndex () : number;
        static function hasListener (eventName : string) : boolean;
        static function hasParent () : boolean;
        static function hide () : Ext.Component;
        static function initConfig (instanceConfig : variant) : variant;
        static function initialize () : void;
        static function insert (index : number, item : variant) : void;
        static function isDisabled () : boolean;
        static function isHidden () : boolean;
        static function isXType (xtype : string, shallow : boolean) : boolean;
        static function isXType (xtype : string) : boolean;
        static function mask (mask : variant) : void;
        static function on (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function on (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function on (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
        static function on (eventName : string, fn : function  () : void, scope : variant) : void;
        static function on (eventName : string, fn : function  () : void, order : string) : void;
        static function on (eventName : string, fn : function  () : void) : void;
        static function on (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
        static function on (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function on (eventName : string, fn : string, scope : variant, order : string) : void;
        static function on (eventName : string, fn : string, scope : variant) : void;
        static function on (eventName : string, fn : string, order : string) : void;
        static function on (eventName : string, fn : string) : void;
        static function on (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function on (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function on (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
        static function on (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function on (eventName : string[], fn : function  () : void, order : string) : void;
        static function on (eventName : string[], fn : function  () : void) : void;
        static function on (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
        static function on (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function on (eventName : string[], fn : string, scope : variant, order : string) : void;
        static function on (eventName : string[], fn : string, scope : variant) : void;
        static function on (eventName : string[], fn : string, order : string) : void;
        static function on (eventName : string[], fn : string) : void;
        static function on (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function on (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function on (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
        static function on (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function on (eventName : variant, fn : function  () : void, order : string) : void;
        static function on (eventName : variant, fn : function  () : void) : void;
        static function on (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
        static function on (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function on (eventName : variant, fn : string, scope : variant, order : string) : void;
        static function on (eventName : variant, fn : string, scope : variant) : void;
        static function on (eventName : variant, fn : string, order : string) : void;
        static function on (eventName : variant, fn : string) : void;
        static function onAfter (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function onAfter (eventName : string, fn : function  () : void, scope : variant) : void;
        static function onAfter (eventName : string, fn : function  () : void) : void;
        static function onAfter (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function onAfter (eventName : string, fn : string, scope : variant) : void;
        static function onAfter (eventName : string, fn : string) : void;
        static function onAfter (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function onAfter (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function onAfter (eventName : string[], fn : function  () : void) : void;
        static function onAfter (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function onAfter (eventName : string[], fn : string, scope : variant) : void;
        static function onAfter (eventName : string[], fn : string) : void;
        static function onAfter (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function onAfter (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function onAfter (eventName : variant, fn : function  () : void) : void;
        static function onAfter (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function onAfter (eventName : variant, fn : string, scope : variant) : void;
        static function onAfter (eventName : variant, fn : string) : void;
        static function onBefore (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function onBefore (eventName : string, fn : function  () : void, scope : variant) : void;
        static function onBefore (eventName : string, fn : function  () : void) : void;
        static function onBefore (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function onBefore (eventName : string, fn : string, scope : variant) : void;
        static function onBefore (eventName : string, fn : string) : void;
        static function onBefore (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function onBefore (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function onBefore (eventName : string[], fn : function  () : void) : void;
        static function onBefore (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function onBefore (eventName : string[], fn : string, scope : variant) : void;
        static function onBefore (eventName : string[], fn : string) : void;
        static function onBefore (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function onBefore (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function onBefore (eventName : variant, fn : function  () : void) : void;
        static function onBefore (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function onBefore (eventName : variant, fn : string, scope : variant) : void;
        static function onBefore (eventName : variant, fn : string) : void;
        static function prompt (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void, scope : variant, multiLine : boolean, value : string, prompt : variant) : Ext.MessageBox;
        static function prompt (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void, scope : variant, multiLine : boolean, value : string) : Ext.MessageBox;
        static function prompt (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void, scope : variant, multiLine : boolean, prompt : variant) : Ext.MessageBox;
        static function prompt (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void, scope : variant, multiLine : boolean) : Ext.MessageBox;
        static function prompt (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void, scope : variant, multiLine : number, value : string, prompt : variant) : Ext.MessageBox;
        static function prompt (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void, scope : variant, multiLine : number, value : string) : Ext.MessageBox;
        static function prompt (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void, scope : variant, multiLine : number, prompt : variant) : Ext.MessageBox;
        static function prompt (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void, scope : variant, multiLine : number) : Ext.MessageBox;
        static function prompt (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void, scope : variant, value : string, prompt : variant) : Ext.MessageBox;
        static function prompt (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void, scope : variant, value : string) : Ext.MessageBox;
        static function prompt (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void, scope : variant, prompt : variant) : Ext.MessageBox;
        static function prompt (title : string, message : string, fn : function  (buttonId : string, value : string, opt : variant) : void, scope : variant) : Ext.MessageBox;
        static function query (selector : string) : variant[];
        static function relayEvents (object : variant, events : string) : Ext.mixin.Observable;
        static function relayEvents (object : variant, events : variant[]) : Ext.mixin.Observable;
        static function relayEvents (object : variant, events : variant) : Ext.mixin.Observable;
        static function remove (item : variant, destroy : boolean) : Ext.Component;
        static function remove (item : variant) : Ext.Component;
        static function removeAfterListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function removeAfterListener (eventName : string, fn : function  () : void, scope : variant) : void;
        static function removeAfterListener (eventName : string, fn : function  () : void) : void;
        static function removeAfterListener (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function removeAfterListener (eventName : string, fn : string, scope : variant) : void;
        static function removeAfterListener (eventName : string, fn : string) : void;
        static function removeAfterListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function removeAfterListener (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function removeAfterListener (eventName : string[], fn : function  () : void) : void;
        static function removeAfterListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function removeAfterListener (eventName : string[], fn : string, scope : variant) : void;
        static function removeAfterListener (eventName : string[], fn : string) : void;
        static function removeAfterListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function removeAfterListener (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function removeAfterListener (eventName : variant, fn : function  () : void) : void;
        static function removeAfterListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function removeAfterListener (eventName : variant, fn : string, scope : variant) : void;
        static function removeAfterListener (eventName : variant, fn : string) : void;
        static function removeAll (destroy : boolean, everything : boolean) : Ext.Component;
        static function removeAt (index : number) : Ext.Container;
        static function removeBeforeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function removeBeforeListener (eventName : string, fn : function  () : void, scope : variant) : void;
        static function removeBeforeListener (eventName : string, fn : function  () : void) : void;
        static function removeBeforeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function removeBeforeListener (eventName : string, fn : string, scope : variant) : void;
        static function removeBeforeListener (eventName : string, fn : string) : void;
        static function removeBeforeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function removeBeforeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function removeBeforeListener (eventName : string[], fn : function  () : void) : void;
        static function removeBeforeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function removeBeforeListener (eventName : string[], fn : string, scope : variant) : void;
        static function removeBeforeListener (eventName : string[], fn : string) : void;
        static function removeBeforeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function removeBeforeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function removeBeforeListener (eventName : variant, fn : function  () : void) : void;
        static function removeBeforeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function removeBeforeListener (eventName : variant, fn : string, scope : variant) : void;
        static function removeBeforeListener (eventName : variant, fn : string) : void;
        static function removeCls (cls : string, prefix : string, suffix : string) : void;
        static function removeCls (cls : string, prefix : string) : void;
        static function removeCls (cls : string) : void;
        static function removeInnerAt (index : number) : Ext.Container;
        static function removeListener (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function removeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function removeListener (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
        static function removeListener (eventName : string, fn : function  () : void, scope : variant) : void;
        static function removeListener (eventName : string, fn : function  () : void, order : string) : void;
        static function removeListener (eventName : string, fn : function  () : void) : void;
        static function removeListener (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
        static function removeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function removeListener (eventName : string, fn : string, scope : variant, order : string) : void;
        static function removeListener (eventName : string, fn : string, scope : variant) : void;
        static function removeListener (eventName : string, fn : string, order : string) : void;
        static function removeListener (eventName : string, fn : string) : void;
        static function removeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function removeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function removeListener (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
        static function removeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function removeListener (eventName : string[], fn : function  () : void, order : string) : void;
        static function removeListener (eventName : string[], fn : function  () : void) : void;
        static function removeListener (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
        static function removeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function removeListener (eventName : string[], fn : string, scope : variant, order : string) : void;
        static function removeListener (eventName : string[], fn : string, scope : variant) : void;
        static function removeListener (eventName : string[], fn : string, order : string) : void;
        static function removeListener (eventName : string[], fn : string) : void;
        static function removeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function removeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function removeListener (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
        static function removeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function removeListener (eventName : variant, fn : function  () : void, order : string) : void;
        static function removeListener (eventName : variant, fn : function  () : void) : void;
        static function removeListener (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
        static function removeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function removeListener (eventName : variant, fn : string, scope : variant, order : string) : void;
        static function removeListener (eventName : variant, fn : string, scope : variant) : void;
        static function removeListener (eventName : variant, fn : string, order : string) : void;
        static function removeListener (eventName : variant, fn : string) : void;
        static function replaceCls (oldCls : string, newCls : string, prefix : string, suffix : string) : void;
        static function replaceCls (oldCls : string, newCls : string, prefix : string) : void;
        static function replaceCls (oldCls : string, newCls : string) : void;
        static function resetFloating () : void;
        static function resumeEvents (discardQueuedEvents : boolean) : void;
        static function setActiveItem (activeItem : variant) : void;
        static function setActiveItem (activeItem : string) : void;
        static function setActiveItem (activeItem : number) : void;
        static function setAutoDestroy (autoDestroy : boolean) : void;
        static function setBaseCls (baseCls : string) : void;
        static function setBorder (border : number) : void;
        static function setBorder (border : string) : void;
        static function setBottom (bottom : number) : void;
        static function setBottom (bottom : string) : void;
        static function setBubbleEvents (bubbleEvents : string) : void;
        static function setBubbleEvents (bubbleEvents : string[]) : void;
        static function setButtons (buttons : variant[]) : void;
        static function setButtons (buttons : variant) : void;
        static function setCentered (centered : boolean) : void;
        static function setCls (cls : string) : void;
        static function setCls (cls : string[]) : void;
        static function setContentEl (contentEl : Ext.dom.Element) : void;
        static function setContentEl (contentEl : HTMLElement) : void;
        static function setContentEl (contentEl : string) : void;
        static function setControl (control : variant) : void;
        static function setData (data : variant) : void;
        static function setDefaultTextHeight (defaultTextHeight : number) : void;
        static function setDefaultType (defaultType : string) : void;
        static function setDefaults (defaults : variant) : void;
        static function setDisabled (disabled : boolean) : void;
        static function setDisabledCls (disabledCls : string) : void;
        static function setDocked (docked : string) : void;
        static function setDraggable (draggable : variant) : void;
        static function setEnter (enter : string) : void;
        static function setExit (exit : string) : void;
        static function setFlex (flex : number) : void;
        static function setFloatingCls (floatingCls : string) : void;
        static function setHeight (height : number) : void;
        static function setHeight (height : string) : void;
        static function setHidden (hidden : boolean) : void;
        static function setHiddenCls (hiddenCls : string) : void;
        static function setHideAnimation (hideAnimation : variant) : void;
        static function setHideOnMaskTap (hideOnMaskTap : boolean) : void;
        static function setHtml (html : string) : void;
        static function setHtml (html : Ext.dom.Element) : void;
        static function setHtml (html : HTMLElement) : void;
        static function setIconCls (iconCls : string) : void;
        static function setItemId (itemId : string) : void;
        static function setItems (items : variant[]) : void;
        static function setItems (items : variant) : void;
        static function setLayout (layout : variant) : void;
        static function setLeft (left : number) : void;
        static function setLeft (left : string) : void;
        static function setListeners (listeners : variant) : void;
        static function setMargin (margin : number) : void;
        static function setMargin (margin : string) : void;
        static function setMasked (masked : boolean) : void;
        static function setMasked (masked : variant) : void;
        static function setMasked (masked : Ext.Mask) : void;
        static function setMasked (masked : Ext.LoadMask) : void;
        static function setMaxHeight (maxHeight : number) : void;
        static function setMaxHeight (maxHeight : string) : void;
        static function setMaxWidth (maxWidth : number) : void;
        static function setMaxWidth (maxWidth : string) : void;
        static function setMessage (message : string) : void;
        static function setMinHeight (minHeight : number) : void;
        static function setMinHeight (minHeight : string) : void;
        static function setMinWidth (minWidth : number) : void;
        static function setMinWidth (minWidth : string) : void;
        static function setPadding (padding : number) : void;
        static function setPadding (padding : string) : void;
        static function setPlugins (plugins : variant) : void;
        static function setPlugins (plugins : variant[]) : void;
        static function setPrompt (prompt : variant) : void;
        static function setRecord (record : Ext.data.Model) : void;
        static function setRenderTo (renderTo : Ext.dom.Element) : void;
        static function setRight (right : number) : void;
        static function setRight (right : string) : void;
        static function setScrollable (scrollable : boolean) : Ext.scroll.View;
        static function setScrollable (scrollable : string) : Ext.scroll.View;
        static function setScrollable (scrollable : variant) : Ext.scroll.View;
        static function setShowAnimation (showAnimation : variant) : void;
        static function setSize (width : number, height : number) : void;
        static function setStretchX (stretchX : boolean) : void;
        static function setStretchY (stretchY : boolean) : void;
        static function setStyle (style : string) : void;
        static function setStyle (style : variant) : void;
        static function setStyleHtmlCls (styleHtmlCls : string) : void;
        static function setStyleHtmlContent (styleHtmlContent : boolean) : void;
        static function setTitle (title : string) : void;
        static function setTop (top : number) : void;
        static function setTop (top : string) : void;
        static function setTpl (tpl : string) : void;
        static function setTpl (tpl : string[]) : void;
        static function setTpl (tpl : Ext.Template) : void;
        static function setTpl (tpl : Ext.XTemplate[]) : void;
        static function setTplWriteMode (tplWriteMode : string) : void;
        static function setUi (ui : string) : void;
        static function setWidth (width : number) : void;
        static function setWidth (width : string) : void;
        static function setZIndex (zIndex : number) : void;
        static function show (config : variant) : Ext.MessageBox;
        static function showBy (component : Ext.Component, alignment : string) : void;
        static function showBy (component : Ext.Component) : void;
        static function statics () : Ext.Class;
        static function suspendEvents () : void;
        static function un (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function un (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function un (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
        static function un (eventName : string, fn : function  () : void, scope : variant) : void;
        static function un (eventName : string, fn : function  () : void, order : string) : void;
        static function un (eventName : string, fn : function  () : void) : void;
        static function un (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
        static function un (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function un (eventName : string, fn : string, scope : variant, order : string) : void;
        static function un (eventName : string, fn : string, scope : variant) : void;
        static function un (eventName : string, fn : string, order : string) : void;
        static function un (eventName : string, fn : string) : void;
        static function un (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function un (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function un (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
        static function un (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function un (eventName : string[], fn : function  () : void, order : string) : void;
        static function un (eventName : string[], fn : function  () : void) : void;
        static function un (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
        static function un (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function un (eventName : string[], fn : string, scope : variant, order : string) : void;
        static function un (eventName : string[], fn : string, scope : variant) : void;
        static function un (eventName : string[], fn : string, order : string) : void;
        static function un (eventName : string[], fn : string) : void;
        static function un (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function un (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function un (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
        static function un (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function un (eventName : variant, fn : function  () : void, order : string) : void;
        static function un (eventName : variant, fn : function  () : void) : void;
        static function un (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
        static function un (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function un (eventName : variant, fn : string, scope : variant, order : string) : void;
        static function un (eventName : variant, fn : string, scope : variant) : void;
        static function un (eventName : variant, fn : string, order : string) : void;
        static function un (eventName : variant, fn : string) : void;
        static function unAfter (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function unAfter (eventName : string, fn : function  () : void, scope : variant) : void;
        static function unAfter (eventName : string, fn : function  () : void) : void;
        static function unAfter (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function unAfter (eventName : string, fn : string, scope : variant) : void;
        static function unAfter (eventName : string, fn : string) : void;
        static function unAfter (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function unAfter (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function unAfter (eventName : string[], fn : function  () : void) : void;
        static function unAfter (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function unAfter (eventName : string[], fn : string, scope : variant) : void;
        static function unAfter (eventName : string[], fn : string) : void;
        static function unAfter (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function unAfter (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function unAfter (eventName : variant, fn : function  () : void) : void;
        static function unAfter (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function unAfter (eventName : variant, fn : string, scope : variant) : void;
        static function unAfter (eventName : variant, fn : string) : void;
        static function unBefore (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function unBefore (eventName : string, fn : function  () : void, scope : variant) : void;
        static function unBefore (eventName : string, fn : function  () : void) : void;
        static function unBefore (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function unBefore (eventName : string, fn : string, scope : variant) : void;
        static function unBefore (eventName : string, fn : string) : void;
        static function unBefore (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function unBefore (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function unBefore (eventName : string[], fn : function  () : void) : void;
        static function unBefore (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function unBefore (eventName : string[], fn : string, scope : variant) : void;
        static function unBefore (eventName : string[], fn : string) : void;
        static function unBefore (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function unBefore (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function unBefore (eventName : variant, fn : function  () : void) : void;
        static function unBefore (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function unBefore (eventName : variant, fn : string, scope : variant) : void;
        static function unBefore (eventName : variant, fn : string) : void;
        static function unmask () : void;
        static function up (selector : string) : Ext.Container;
        static function up () : Ext.Container;
        static function updateStyleHtmlCls (newHtmlCls : variant, oldHtmlCls : variant) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
        // Events
        static function activate (newActiveItem : variant, this_ : Ext.Container, oldActiveItem : variant, eOpts : variant) : void;
        static function activeitemchange (this_ : Ext.Container, value : variant, oldValue : variant, eOpts : variant) : void;
        static function activeitemchange (this_ : Ext.Container, value : variant, oldValue : string, eOpts : variant) : void;
        static function activeitemchange (this_ : Ext.Container, value : variant, oldValue : number, eOpts : variant) : void;
        static function activeitemchange (this_ : Ext.Container, value : string, oldValue : variant, eOpts : variant) : void;
        static function activeitemchange (this_ : Ext.Container, value : string, oldValue : string, eOpts : variant) : void;
        static function activeitemchange (this_ : Ext.Container, value : string, oldValue : number, eOpts : variant) : void;
        static function activeitemchange (this_ : Ext.Container, value : number, oldValue : variant, eOpts : variant) : void;
        static function activeitemchange (this_ : Ext.Container, value : number, oldValue : string, eOpts : variant) : void;
        static function activeitemchange (this_ : Ext.Container, value : number, oldValue : number, eOpts : variant) : void;
        static function add (this_ : Ext.Container, item : variant, index : number, eOpts : variant) : void;
        static function beforeorientationchange (eOpts : variant) : void;
        static function bottomchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        static function bottomchange (this_ : Ext.Component, value : number, oldValue : string, eOpts : variant) : void;
        static function bottomchange (this_ : Ext.Component, value : string, oldValue : number, eOpts : variant) : void;
        static function bottomchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
        static function centeredchange (this_ : Ext.Sheet, value : boolean, oldValue : boolean, eOpts : variant) : void;
        static function deactivate (oldActiveItem : variant, this_ : Ext.Container, newActiveItem : variant, eOpts : variant) : void;
        static function destroy (eOpts : variant) : void;
        static function disabledchange (this_ : Ext.Component, value : boolean, oldValue : boolean, eOpts : variant) : void;
        static function dockedchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
        static function erased (this_ : Ext.Component, eOpts : variant) : void;
        static function flexchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        static function floatingchange (this_ : Ext.Component, floating : boolean, eOpts : variant) : void;
        static function fullscreen (this_ : Ext.Component, eOpts : variant) : void;
        static function heightchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        static function heightchange (this_ : Ext.Component, value : number, oldValue : string, eOpts : variant) : void;
        static function heightchange (this_ : Ext.Component, value : string, oldValue : number, eOpts : variant) : void;
        static function heightchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
        static function hiddenchange (this_ : Ext.Component, value : boolean, oldValue : boolean, eOpts : variant) : void;
        static function hide (this_ : Ext.Component, eOpts : variant) : void;
        static function initialize (this_ : Ext.Component, eOpts : variant) : void;
        static function leftchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        static function leftchange (this_ : Ext.Component, value : number, oldValue : string, eOpts : variant) : void;
        static function leftchange (this_ : Ext.Component, value : string, oldValue : number, eOpts : variant) : void;
        static function leftchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
        static function maxheightchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        static function maxheightchange (this_ : Ext.Component, value : number, oldValue : string, eOpts : variant) : void;
        static function maxheightchange (this_ : Ext.Component, value : string, oldValue : number, eOpts : variant) : void;
        static function maxheightchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
        static function maxwidthchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        static function maxwidthchange (this_ : Ext.Component, value : number, oldValue : string, eOpts : variant) : void;
        static function maxwidthchange (this_ : Ext.Component, value : string, oldValue : number, eOpts : variant) : void;
        static function maxwidthchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
        static function minheightchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        static function minheightchange (this_ : Ext.Component, value : number, oldValue : string, eOpts : variant) : void;
        static function minheightchange (this_ : Ext.Component, value : string, oldValue : number, eOpts : variant) : void;
        static function minheightchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
        static function minwidthchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        static function minwidthchange (this_ : Ext.Component, value : number, oldValue : string, eOpts : variant) : void;
        static function minwidthchange (this_ : Ext.Component, value : string, oldValue : number, eOpts : variant) : void;
        static function minwidthchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
        static function move (this_ : Ext.Container, item : variant, toIndex : number, fromIndex : number, eOpts : variant) : void;
        static function orientationchange (eOpts : variant) : void;
        static function painted (element : Ext.dom.Element, eOpts : variant) : void;
        static function remove (this_ : Ext.Container, item : variant, index : number, eOpts : variant) : void;
        static function resize (element : Ext.dom.Element, eOpts : variant) : void;
        static function rightchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        static function rightchange (this_ : Ext.Component, value : number, oldValue : string, eOpts : variant) : void;
        static function rightchange (this_ : Ext.Component, value : string, oldValue : number, eOpts : variant) : void;
        static function rightchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
        static function scrollablechange (this_ : Ext.Container, value : boolean, oldValue : boolean, eOpts : variant) : Ext.scroll.View;
        static function scrollablechange (this_ : Ext.Container, value : boolean, oldValue : string, eOpts : variant) : Ext.scroll.View;
        static function scrollablechange (this_ : Ext.Container, value : boolean, oldValue : variant, eOpts : variant) : Ext.scroll.View;
        static function scrollablechange (this_ : Ext.Container, value : string, oldValue : boolean, eOpts : variant) : Ext.scroll.View;
        static function scrollablechange (this_ : Ext.Container, value : string, oldValue : string, eOpts : variant) : Ext.scroll.View;
        static function scrollablechange (this_ : Ext.Container, value : string, oldValue : variant, eOpts : variant) : Ext.scroll.View;
        static function scrollablechange (this_ : Ext.Container, value : variant, oldValue : boolean, eOpts : variant) : Ext.scroll.View;
        static function scrollablechange (this_ : Ext.Container, value : variant, oldValue : string, eOpts : variant) : Ext.scroll.View;
        static function scrollablechange (this_ : Ext.Container, value : variant, oldValue : variant, eOpts : variant) : Ext.scroll.View;
        static function show (this_ : Ext.Component, eOpts : variant) : void;
        static function topchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        static function topchange (this_ : Ext.Component, value : number, oldValue : string, eOpts : variant) : void;
        static function topchange (this_ : Ext.Component, value : string, oldValue : number, eOpts : variant) : void;
        static function topchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
        static function updatedata (this_ : Ext.Component, newData : variant, eOpts : variant) : void;
        static function widthchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        static function widthchange (this_ : Ext.Component, value : number, oldValue : string, eOpts : variant) : void;
        static function widthchange (this_ : Ext.Component, value : string, oldValue : number, eOpts : variant) : void;
        static function widthchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
    }

    class Number
    {
        // Methods
        static function constrain (number : number, min : number, max : number) : number;
        static function from (value : variant, defaultValue : number) : number;
        static function snap (value : number, increment : number, minValue : number, maxValue : number) : number;
        static function toFixed (value : number, precision : number) : void;
    }

    class Object
    {
        // Methods
        static function chain (object : variant) : void;
        static function each (object : variant, fn : function  (key : string, value : variant, object : variant) : void, scope : variant) : void;
        static function each (object : variant, fn : function  (key : string, value : variant, object : variant) : void) : void;
        static function fromQueryString (queryString : string, recursive : boolean) : variant;
        static function fromQueryString (queryString : string) : variant;
        static function getKey (object : variant, value : variant) : void;
        static function getKeys (object : variant) : string[];
        static function getSize (object : variant) : number;
        static function getValues (object : variant) : variant[];
        static function merge (source : variant, objs : variant) : variant;
        static function mergeIf (source : variant) : void;
        static function toQueryObjects (name : string, value : variant, recursive : boolean) : variant[];
        static function toQueryObjects (name : string, value : variant) : variant[];
        static function toQueryString (object : variant, recursive : boolean) : string;
        static function toQueryString (object : variant) : string;
    }

    class Panel extends Ext.Container
    {
        // Methods
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class ProgressIndicator extends Ext.Container
    {
        // Methods
        function getMonitoredStates () : variant;
        function setFallbackText (fallbackText : string) : void;
        function setFallbackText (fallbackText : variant) : void;
        function setLoadingText (loadingText : string) : void;
        function setLoadingText (loadingText : Ext.XTemplate) : void;
        function setLoadingText (loadingText : variant) : void;
        function setMonitoredStates (monitoredStates : variant) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class Promise extends Ext.Base
    {
        // Methods
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }


    class SegmentedButton extends Ext.Container
    {
        // Methods
        function getAllowDepress () : boolean;
        function getAllowMultiple () : boolean;
        function getAllowToggle () : boolean;
        function getPressedButtons () : variant[];
        function getPressedCls () : string;
        function isPressed (button : Ext.Button) : boolean;
        function setAllowDepress (allowDepress : boolean) : void;
        function setAllowMultiple (allowMultiple : boolean) : void;
        function setAllowToggle (allowToggle : boolean) : void;
        function setPressedButtons (pressedButtons : variant[]) : void;
        function setPressedCls (pressedCls : string) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
        // Events
        function toggle (this_ : Ext.SegmentedButton, button : Ext.Button, isPressed : boolean, eOpts : variant) : void;
    }

    class Sheet extends Ext.Panel
    {
        // Methods
        function getEnter () : string;
        function getExit () : string;
        function getStretchX () : boolean;
        function getStretchY () : boolean;
        function setEnter (enter : string) : void;
        function setExit (exit : string) : void;
        function setStretchX (stretchX : boolean) : void;
        function setStretchY (stretchY : boolean) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class Spacer extends Ext.Component
    {
        // Methods
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class String
    {
        // Methods
        static function capitalize (string : string) : string;
        static function ellipsis (value : string, length : number, word : boolean) : string;
        static function escape (string : string) : string;
        static function escapeRegex (string : string) : string;
        static function format (string : string, values : string) : string;
        static function htmlDecode (value : string) : string;
        static function htmlEncode (value : string) : string;
        static function leftPad (string : string, size : number, character : string) : string;
        static function leftPad (string : string, size : number) : string;
        static function repeat (pattern : string, count : number, sep : string) : void;
        static function toggle (string : string, value : string, other : string) : string;
        static function trim (string : string) : string;
        static function urlAppend (url : string, string : string) : string;
    }


    class Template extends Ext.Base
    {
        // Properties
        var isTemplate : boolean;
        // Methods
        function constructor (html : variant[]);
        function constructor (html : variant);
        function append (el : string, values : variant, returnElement : boolean) : variant;
        function append (el : string, values : variant) : variant;
        function append (el : string, values : variant[], returnElement : boolean) : variant;
        function append (el : string, values : variant[]) : variant;
        function append (el : HTMLElement, values : variant, returnElement : boolean) : variant;
        function append (el : HTMLElement, values : variant) : variant;
        function append (el : HTMLElement, values : variant[], returnElement : boolean) : variant;
        function append (el : HTMLElement, values : variant[]) : variant;
        function append (el : Ext.dom.Element, values : variant, returnElement : boolean) : variant;
        function append (el : Ext.dom.Element, values : variant) : variant;
        function append (el : Ext.dom.Element, values : variant[], returnElement : boolean) : variant;
        function append (el : Ext.dom.Element, values : variant[]) : variant;
        function apply (values : variant) : string;
        function apply (values : variant[]) : string;
        function applyOut (values : variant, out : variant[]) : variant[];
        function applyOut (values : variant[], out : variant[]) : variant[];
        function applyTemplate (values : variant) : string;
        function applyTemplate (values : variant[]) : string;
        function compile () : Ext.Template;
        function insertAfter (el : string, values : variant, returnElement : boolean) : variant;
        function insertAfter (el : string, values : variant) : variant;
        function insertAfter (el : string, values : variant[], returnElement : boolean) : variant;
        function insertAfter (el : string, values : variant[]) : variant;
        function insertAfter (el : HTMLElement, values : variant, returnElement : boolean) : variant;
        function insertAfter (el : HTMLElement, values : variant) : variant;
        function insertAfter (el : HTMLElement, values : variant[], returnElement : boolean) : variant;
        function insertAfter (el : HTMLElement, values : variant[]) : variant;
        function insertAfter (el : Ext.dom.Element, values : variant, returnElement : boolean) : variant;
        function insertAfter (el : Ext.dom.Element, values : variant) : variant;
        function insertAfter (el : Ext.dom.Element, values : variant[], returnElement : boolean) : variant;
        function insertAfter (el : Ext.dom.Element, values : variant[]) : variant;
        function insertBefore (el : string, values : variant, returnElement : boolean) : variant;
        function insertBefore (el : string, values : variant) : variant;
        function insertBefore (el : string, values : variant[], returnElement : boolean) : variant;
        function insertBefore (el : string, values : variant[]) : variant;
        function insertBefore (el : HTMLElement, values : variant, returnElement : boolean) : variant;
        function insertBefore (el : HTMLElement, values : variant) : variant;
        function insertBefore (el : HTMLElement, values : variant[], returnElement : boolean) : variant;
        function insertBefore (el : HTMLElement, values : variant[]) : variant;
        function insertBefore (el : Ext.dom.Element, values : variant, returnElement : boolean) : variant;
        function insertBefore (el : Ext.dom.Element, values : variant) : variant;
        function insertBefore (el : Ext.dom.Element, values : variant[], returnElement : boolean) : variant;
        function insertBefore (el : Ext.dom.Element, values : variant[]) : variant;
        function insertFirst (el : string, values : variant, returnElement : boolean) : variant;
        function insertFirst (el : string, values : variant) : variant;
        function insertFirst (el : string, values : variant[], returnElement : boolean) : variant;
        function insertFirst (el : string, values : variant[]) : variant;
        function insertFirst (el : HTMLElement, values : variant, returnElement : boolean) : variant;
        function insertFirst (el : HTMLElement, values : variant) : variant;
        function insertFirst (el : HTMLElement, values : variant[], returnElement : boolean) : variant;
        function insertFirst (el : HTMLElement, values : variant[]) : variant;
        function insertFirst (el : Ext.dom.Element, values : variant, returnElement : boolean) : variant;
        function insertFirst (el : Ext.dom.Element, values : variant) : variant;
        function insertFirst (el : Ext.dom.Element, values : variant[], returnElement : boolean) : variant;
        function insertFirst (el : Ext.dom.Element, values : variant[]) : variant;
        function overwrite (el : string, values : variant, returnElement : boolean) : variant;
        function overwrite (el : string, values : variant) : variant;
        function overwrite (el : string, values : variant[], returnElement : boolean) : variant;
        function overwrite (el : string, values : variant[]) : variant;
        function overwrite (el : HTMLElement, values : variant, returnElement : boolean) : variant;
        function overwrite (el : HTMLElement, values : variant) : variant;
        function overwrite (el : HTMLElement, values : variant[], returnElement : boolean) : variant;
        function overwrite (el : HTMLElement, values : variant[]) : variant;
        function overwrite (el : Ext.dom.Element, values : variant, returnElement : boolean) : variant;
        function overwrite (el : Ext.dom.Element, values : variant) : variant;
        function overwrite (el : Ext.dom.Element, values : variant[], returnElement : boolean) : variant;
        function overwrite (el : Ext.dom.Element, values : variant[]) : variant;
        function set (html : string, compile : boolean) : Ext.Template;
        function set (html : string) : Ext.Template;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function from (el : string, config : variant) : Ext.Template;
        static function from (el : string) : Ext.Template;
        static function from (el : HTMLElement, config : variant) : Ext.Template;
        static function from (el : HTMLElement) : Ext.Template;
        static function getName () : string;
    }

    class Title extends Ext.Component
    {
        // Methods
        function getTitle () : string;
        function setTitle (title : string) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class TitleBar extends Ext.Container
    {
        // Methods
        function getMaxButtonWidth () : string;
        function getTitle () : string;
        function getTitleAlign () : string;
        function setMaxButtonWidth (maxButtonWidth : string) : void;
        function setTitle (title : string) : void;
        function setTitleAlign (titleAlign : string) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class Toolbar extends Ext.Container
    {
        // Methods
        function getTitle () : Ext.Title;
        function hideTitle () : void;
        function setTitle (title : string) : void;
        function setTitle (title : Ext.Title) : void;
        function showTitle () : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class Version
    {
        // Methods
        function constructor (version : string);
        function constructor (version : number);
        function deprecate (packageName : string, since : string, closure : function  () : void, scope : variant) : void;
        function equals (target : string) : boolean;
        function equals (target : number) : boolean;
        function getBuild () : number;
        function getMajor () : number;
        function getMinor () : number;
        function getPatch () : number;
        function getRelease () : number;
        function getShortVersion () : string;
        function getVersion (packageName : string) : Ext.Version;
        function getVersion () : Ext.Version;
        function gt (target : string) : boolean;
        function gt (target : number) : boolean;
        function gtEq (target : string) : boolean;
        function gtEq (target : number) : boolean;
        function isGreaterThan (target : string) : boolean;
        function isGreaterThan (target : number) : boolean;
        function isGreaterThanOrEqual (target : string) : boolean;
        function isGreaterThanOrEqual (target : number) : boolean;
        function isLessThan (target : string) : boolean;
        function isLessThan (target : number) : boolean;
        function isLessThanOrEqual (target : string) : boolean;
        function isLessThanOrEqual (target : number) : boolean;
        function lt (target : string) : boolean;
        function lt (target : number) : boolean;
        function ltEq (target : string) : boolean;
        function ltEq (target : number) : boolean;
        function match (target : string) : boolean;
        function match (target : number) : boolean;
        function setVersion (packageName : string, version : string) : Ext;
        function setVersion (packageName : string, version : Ext.Version) : Ext;
        function toArray () : number[];
        function toNumber (value : number) : number;
        static function compare (current : string, target : string) : number;
        static function getComponentValue (value : variant) : variant;
    }

    class Video extends Ext.Media
    {
        // Methods
        function getPosterUrl () : string;
        function setPosterUrl (posterUrl : string) : void;
        function updatePosterUrl (newUrl : variant) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class Viewport extends Ext.viewport.Default
    {
        // Properties
        // Methods
        static function constructor (config : variant);
        static function add (newItems : variant) : Ext.Component;
        static function add (newItems : variant[]) : Ext.Component;
        static function add (newItems : Ext.Component) : Ext.Component;
        static function add (newItems : Ext.Component[]) : Ext.Component;
        static function addAfterListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function addAfterListener (eventName : string, fn : function  () : void, scope : variant) : void;
        static function addAfterListener (eventName : string, fn : function  () : void) : void;
        static function addAfterListener (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function addAfterListener (eventName : string, fn : string, scope : variant) : void;
        static function addAfterListener (eventName : string, fn : string) : void;
        static function addAfterListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function addAfterListener (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function addAfterListener (eventName : string[], fn : function  () : void) : void;
        static function addAfterListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function addAfterListener (eventName : string[], fn : string, scope : variant) : void;
        static function addAfterListener (eventName : string[], fn : string) : void;
        static function addAfterListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function addAfterListener (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function addAfterListener (eventName : variant, fn : function  () : void) : void;
        static function addAfterListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function addAfterListener (eventName : variant, fn : string, scope : variant) : void;
        static function addAfterListener (eventName : variant, fn : string) : void;
        static function addBeforeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function addBeforeListener (eventName : string, fn : function  () : void, scope : variant) : void;
        static function addBeforeListener (eventName : string, fn : function  () : void) : void;
        static function addBeforeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function addBeforeListener (eventName : string, fn : string, scope : variant) : void;
        static function addBeforeListener (eventName : string, fn : string) : void;
        static function addBeforeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function addBeforeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function addBeforeListener (eventName : string[], fn : function  () : void) : void;
        static function addBeforeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function addBeforeListener (eventName : string[], fn : string, scope : variant) : void;
        static function addBeforeListener (eventName : string[], fn : string) : void;
        static function addBeforeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function addBeforeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function addBeforeListener (eventName : variant, fn : function  () : void) : void;
        static function addBeforeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function addBeforeListener (eventName : variant, fn : string, scope : variant) : void;
        static function addBeforeListener (eventName : variant, fn : string) : void;
        static function addCls (cls : string, prefix : string, suffix : string) : void;
        static function addCls (cls : string, prefix : string) : void;
        static function addCls (cls : string) : void;
        static function addListener (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function addListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function addListener (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
        static function addListener (eventName : string, fn : function  () : void, scope : variant) : void;
        static function addListener (eventName : string, fn : function  () : void, order : string) : void;
        static function addListener (eventName : string, fn : function  () : void) : void;
        static function addListener (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
        static function addListener (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function addListener (eventName : string, fn : string, scope : variant, order : string) : void;
        static function addListener (eventName : string, fn : string, scope : variant) : void;
        static function addListener (eventName : string, fn : string, order : string) : void;
        static function addListener (eventName : string, fn : string) : void;
        static function addListener (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function addListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function addListener (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
        static function addListener (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function addListener (eventName : string[], fn : function  () : void, order : string) : void;
        static function addListener (eventName : string[], fn : function  () : void) : void;
        static function addListener (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
        static function addListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function addListener (eventName : string[], fn : string, scope : variant, order : string) : void;
        static function addListener (eventName : string[], fn : string, scope : variant) : void;
        static function addListener (eventName : string[], fn : string, order : string) : void;
        static function addListener (eventName : string[], fn : string) : void;
        static function addListener (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function addListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function addListener (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
        static function addListener (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function addListener (eventName : variant, fn : function  () : void, order : string) : void;
        static function addListener (eventName : variant, fn : function  () : void) : void;
        static function addListener (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
        static function addListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function addListener (eventName : variant, fn : string, scope : variant, order : string) : void;
        static function addListener (eventName : variant, fn : string, scope : variant) : void;
        static function addListener (eventName : variant, fn : string, order : string) : void;
        static function addListener (eventName : variant, fn : string) : void;
        static function animateActiveItem (activeItem : variant, animation : variant) : void;
        static function animateActiveItem (activeItem : variant, animation : Ext.fx.layout.Card) : void;
        static function animateActiveItem (activeItem : number, animation : variant) : void;
        static function animateActiveItem (activeItem : number, animation : Ext.fx.layout.Card) : void;
        static function applyMasked (masked : boolean) : variant;
        static function applyMasked (masked : variant) : variant;
        static function applyMasked (masked : Ext.Mask) : variant;
        static function applyMasked (masked : Ext.LoadMask) : variant;
        static function callOverridden (args : variant[]) : variant;
        static function callParent (args : variant[]) : variant;
        static function callSuper (args : variant[]) : variant;
        static function child (selector : string) : Ext.Component;
        static function clearListeners () : void;
        static function destroy () : void;
        static function disable () : void;
        static function down (selector : string) : Ext.Component;
        static function enable () : void;
        static function enableBubble (events : string) : void;
        static function enableBubble (events : string[]) : void;
        static function fireAction (eventName : string, args : variant[], fn : function  () : void, scope : variant) : variant;
        static function fireEvent (eventName : string, args : variant) : boolean;
        static function getActiveItem () : variant;
        static function getAlignmentInfo (component : variant, alignment : variant) : void;
        static function getAt (index : number) : Ext.Component;
        static function getAutoDestroy () : boolean;
        static function getAutoMaximize () : boolean;
        static function getBaseCls () : string;
        static function getBorder () : variant;
        static function getBottom () : variant;
        static function getBubbleEvents () : variant;
        static function getCentered () : boolean;
        static function getCls () : variant;
        static function getComponent (component : string) : Ext.Component;
        static function getComponent (component : number) : Ext.Component;
        static function getContentEl () : variant;
        static function getControl () : variant;
        static function getData () : variant;
        static function getDefaultType () : string;
        static function getDefaults () : variant;
        static function getDisabled () : boolean;
        static function getDisabledCls () : string;
        static function getDocked () : string;
        static function getDockedComponent (component : string) : variant;
        static function getDockedComponent (component : number) : variant;
        static function getDockedItems () : variant[];
        static function getFlex () : number;
        static function getFloatingCls () : string;
        static function getHidden () : boolean;
        static function getHiddenCls () : string;
        static function getHideAnimation () : variant;
        static function getHideOnMaskTap () : boolean;
        static function getHtml () : variant;
        static function getId () : string;
        static function getInitialConfig (name : string) : variant;
        static function getInitialConfig () : variant;
        static function getInnerItems () : variant[];
        static function getItemId () : string;
        static function getItems () : variant;
        static function getLayout () : variant;
        static function getLeft () : variant;
        static function getListeners () : variant;
        static function getMargin () : variant;
        static function getMasked () : variant;
        static function getMaxHeight () : variant;
        static function getMaxWidth () : variant;
        static function getMinHeight () : variant;
        static function getMinWidth () : variant;
        static function getModal () : boolean;
        static function getOrientation () : string;
        static function getPadding () : variant;
        static function getParent () : Ext.Component;
        static function getPlugins () : variant;
        static function getPreventPanning () : boolean;
        static function getPreventZooming () : boolean;
        static function getRecord () : Ext.data.Model;
        static function getRenderTo () : Ext.dom.Element;
        static function getRight () : variant;
        static function getScrollable () : Ext.scroll.View;
        static function getShowAnimation () : variant;
        static function getSize () : variant;
        static function getStyle () : variant;
        static function getStyleHtmlCls () : string;
        static function getStyleHtmlContent () : boolean;
        static function getTop () : variant;
        static function getTpl () : variant;
        static function getTplWriteMode () : string;
        static function getUi () : string;
        static function getUseBodyElement () : boolean;
        static function getWindowHeight () : number;
        static function getWindowWidth () : number;
        static function getXTypes () : string;
        static function getZIndex () : number;
        static function hasListener (eventName : string) : boolean;
        static function hasParent () : boolean;
        static function hide () : Ext.Component;
        static function hideAllMenus (animation : variant) : void;
        static function hideMenu (side : string) : void;
        static function hideOtherMenus (side : string, animation : string) : void;
        static function initConfig (instanceConfig : variant) : variant;
        static function initialize () : void;
        static function insert (index : number, item : variant) : void;
        static function isDisabled () : boolean;
        static function isHidden () : boolean;
        static function isXType (xtype : string, shallow : boolean) : boolean;
        static function isXType (xtype : string) : boolean;
        static function mask (mask : variant) : void;
        static function on (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function on (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function on (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
        static function on (eventName : string, fn : function  () : void, scope : variant) : void;
        static function on (eventName : string, fn : function  () : void, order : string) : void;
        static function on (eventName : string, fn : function  () : void) : void;
        static function on (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
        static function on (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function on (eventName : string, fn : string, scope : variant, order : string) : void;
        static function on (eventName : string, fn : string, scope : variant) : void;
        static function on (eventName : string, fn : string, order : string) : void;
        static function on (eventName : string, fn : string) : void;
        static function on (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function on (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function on (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
        static function on (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function on (eventName : string[], fn : function  () : void, order : string) : void;
        static function on (eventName : string[], fn : function  () : void) : void;
        static function on (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
        static function on (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function on (eventName : string[], fn : string, scope : variant, order : string) : void;
        static function on (eventName : string[], fn : string, scope : variant) : void;
        static function on (eventName : string[], fn : string, order : string) : void;
        static function on (eventName : string[], fn : string) : void;
        static function on (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function on (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function on (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
        static function on (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function on (eventName : variant, fn : function  () : void, order : string) : void;
        static function on (eventName : variant, fn : function  () : void) : void;
        static function on (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
        static function on (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function on (eventName : variant, fn : string, scope : variant, order : string) : void;
        static function on (eventName : variant, fn : string, scope : variant) : void;
        static function on (eventName : variant, fn : string, order : string) : void;
        static function on (eventName : variant, fn : string) : void;
        static function onAfter (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function onAfter (eventName : string, fn : function  () : void, scope : variant) : void;
        static function onAfter (eventName : string, fn : function  () : void) : void;
        static function onAfter (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function onAfter (eventName : string, fn : string, scope : variant) : void;
        static function onAfter (eventName : string, fn : string) : void;
        static function onAfter (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function onAfter (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function onAfter (eventName : string[], fn : function  () : void) : void;
        static function onAfter (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function onAfter (eventName : string[], fn : string, scope : variant) : void;
        static function onAfter (eventName : string[], fn : string) : void;
        static function onAfter (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function onAfter (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function onAfter (eventName : variant, fn : function  () : void) : void;
        static function onAfter (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function onAfter (eventName : variant, fn : string, scope : variant) : void;
        static function onAfter (eventName : variant, fn : string) : void;
        static function onBefore (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function onBefore (eventName : string, fn : function  () : void, scope : variant) : void;
        static function onBefore (eventName : string, fn : function  () : void) : void;
        static function onBefore (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function onBefore (eventName : string, fn : string, scope : variant) : void;
        static function onBefore (eventName : string, fn : string) : void;
        static function onBefore (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function onBefore (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function onBefore (eventName : string[], fn : function  () : void) : void;
        static function onBefore (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function onBefore (eventName : string[], fn : string, scope : variant) : void;
        static function onBefore (eventName : string[], fn : string) : void;
        static function onBefore (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function onBefore (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function onBefore (eventName : variant, fn : function  () : void) : void;
        static function onBefore (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function onBefore (eventName : variant, fn : string, scope : variant) : void;
        static function onBefore (eventName : variant, fn : string) : void;
        static function query (selector : string) : variant[];
        static function relayEvents (object : variant, events : string) : Ext.mixin.Observable;
        static function relayEvents (object : variant, events : variant[]) : Ext.mixin.Observable;
        static function relayEvents (object : variant, events : variant) : Ext.mixin.Observable;
        static function remove (item : variant, destroy : boolean) : Ext.Component;
        static function remove (item : variant) : Ext.Component;
        static function removeAfterListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function removeAfterListener (eventName : string, fn : function  () : void, scope : variant) : void;
        static function removeAfterListener (eventName : string, fn : function  () : void) : void;
        static function removeAfterListener (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function removeAfterListener (eventName : string, fn : string, scope : variant) : void;
        static function removeAfterListener (eventName : string, fn : string) : void;
        static function removeAfterListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function removeAfterListener (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function removeAfterListener (eventName : string[], fn : function  () : void) : void;
        static function removeAfterListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function removeAfterListener (eventName : string[], fn : string, scope : variant) : void;
        static function removeAfterListener (eventName : string[], fn : string) : void;
        static function removeAfterListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function removeAfterListener (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function removeAfterListener (eventName : variant, fn : function  () : void) : void;
        static function removeAfterListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function removeAfterListener (eventName : variant, fn : string, scope : variant) : void;
        static function removeAfterListener (eventName : variant, fn : string) : void;
        static function removeAll (destroy : boolean, everything : boolean) : Ext.Component;
        static function removeAt (index : number) : Ext.Container;
        static function removeBeforeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function removeBeforeListener (eventName : string, fn : function  () : void, scope : variant) : void;
        static function removeBeforeListener (eventName : string, fn : function  () : void) : void;
        static function removeBeforeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function removeBeforeListener (eventName : string, fn : string, scope : variant) : void;
        static function removeBeforeListener (eventName : string, fn : string) : void;
        static function removeBeforeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function removeBeforeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function removeBeforeListener (eventName : string[], fn : function  () : void) : void;
        static function removeBeforeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function removeBeforeListener (eventName : string[], fn : string, scope : variant) : void;
        static function removeBeforeListener (eventName : string[], fn : string) : void;
        static function removeBeforeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function removeBeforeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function removeBeforeListener (eventName : variant, fn : function  () : void) : void;
        static function removeBeforeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function removeBeforeListener (eventName : variant, fn : string, scope : variant) : void;
        static function removeBeforeListener (eventName : variant, fn : string) : void;
        static function removeCls (cls : string, prefix : string, suffix : string) : void;
        static function removeCls (cls : string, prefix : string) : void;
        static function removeCls (cls : string) : void;
        static function removeInnerAt (index : number) : Ext.Container;
        static function removeListener (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function removeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function removeListener (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
        static function removeListener (eventName : string, fn : function  () : void, scope : variant) : void;
        static function removeListener (eventName : string, fn : function  () : void, order : string) : void;
        static function removeListener (eventName : string, fn : function  () : void) : void;
        static function removeListener (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
        static function removeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function removeListener (eventName : string, fn : string, scope : variant, order : string) : void;
        static function removeListener (eventName : string, fn : string, scope : variant) : void;
        static function removeListener (eventName : string, fn : string, order : string) : void;
        static function removeListener (eventName : string, fn : string) : void;
        static function removeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function removeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function removeListener (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
        static function removeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function removeListener (eventName : string[], fn : function  () : void, order : string) : void;
        static function removeListener (eventName : string[], fn : function  () : void) : void;
        static function removeListener (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
        static function removeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function removeListener (eventName : string[], fn : string, scope : variant, order : string) : void;
        static function removeListener (eventName : string[], fn : string, scope : variant) : void;
        static function removeListener (eventName : string[], fn : string, order : string) : void;
        static function removeListener (eventName : string[], fn : string) : void;
        static function removeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function removeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function removeListener (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
        static function removeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function removeListener (eventName : variant, fn : function  () : void, order : string) : void;
        static function removeListener (eventName : variant, fn : function  () : void) : void;
        static function removeListener (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
        static function removeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function removeListener (eventName : variant, fn : string, scope : variant, order : string) : void;
        static function removeListener (eventName : variant, fn : string, scope : variant) : void;
        static function removeListener (eventName : variant, fn : string, order : string) : void;
        static function removeListener (eventName : variant, fn : string) : void;
        static function removeMenu (side : string) : void;
        static function replaceCls (oldCls : string, newCls : string, prefix : string, suffix : string) : void;
        static function replaceCls (oldCls : string, newCls : string, prefix : string) : void;
        static function replaceCls (oldCls : string, newCls : string) : void;
        static function resetFloating () : void;
        static function resumeEvents (discardQueuedEvents : boolean) : void;
        static function setActiveItem (activeItem : variant) : void;
        static function setActiveItem (activeItem : string) : void;
        static function setActiveItem (activeItem : number) : void;
        static function setAutoDestroy (autoDestroy : boolean) : void;
        static function setAutoMaximize (autoMaximize : boolean) : void;
        static function setBaseCls (baseCls : string) : void;
        static function setBorder (border : number) : void;
        static function setBorder (border : string) : void;
        static function setBottom (bottom : number) : void;
        static function setBottom (bottom : string) : void;
        static function setBubbleEvents (bubbleEvents : string) : void;
        static function setBubbleEvents (bubbleEvents : string[]) : void;
        static function setCentered (centered : boolean) : void;
        static function setCls (cls : string) : void;
        static function setCls (cls : string[]) : void;
        static function setContentEl (contentEl : Ext.dom.Element) : void;
        static function setContentEl (contentEl : HTMLElement) : void;
        static function setContentEl (contentEl : string) : void;
        static function setControl (control : variant) : void;
        static function setData (data : variant) : void;
        static function setDefaultType (defaultType : string) : void;
        static function setDefaults (defaults : variant) : void;
        static function setDisabled (disabled : boolean) : void;
        static function setDisabledCls (disabledCls : string) : void;
        static function setDocked (docked : string) : void;
        static function setDraggable (draggable : variant) : void;
        static function setFlex (flex : number) : void;
        static function setFloatingCls (floatingCls : string) : void;
        static function setHidden (hidden : boolean) : void;
        static function setHiddenCls (hiddenCls : string) : void;
        static function setHideAnimation (hideAnimation : string) : void;
        static function setHideAnimation (hideAnimation : variant) : void;
        static function setHideOnMaskTap (hideOnMaskTap : boolean) : void;
        static function setHtml (html : string) : void;
        static function setHtml (html : Ext.dom.Element) : void;
        static function setHtml (html : HTMLElement) : void;
        static function setItemId (itemId : string) : void;
        static function setItems (items : variant[]) : void;
        static function setItems (items : variant) : void;
        static function setLayout (layout : variant) : void;
        static function setLayout (layout : string) : void;
        static function setLeft (left : number) : void;
        static function setLeft (left : string) : void;
        static function setListeners (listeners : variant) : void;
        static function setMargin (margin : number) : void;
        static function setMargin (margin : string) : void;
        static function setMasked (masked : boolean) : void;
        static function setMasked (masked : variant) : void;
        static function setMasked (masked : Ext.Mask) : void;
        static function setMasked (masked : Ext.LoadMask) : void;
        static function setMaxHeight (maxHeight : number) : void;
        static function setMaxHeight (maxHeight : string) : void;
        static function setMaxWidth (maxWidth : number) : void;
        static function setMaxWidth (maxWidth : string) : void;
        static function setMenu (menu : Ext.Menu, config : variant) : void;
        static function setMinHeight (minHeight : number) : void;
        static function setMinHeight (minHeight : string) : void;
        static function setMinWidth (minWidth : number) : void;
        static function setMinWidth (minWidth : string) : void;
        static function setModal (modal : boolean) : void;
        static function setPadding (padding : number) : void;
        static function setPadding (padding : string) : void;
        static function setPlugins (plugins : variant) : void;
        static function setPlugins (plugins : variant[]) : void;
        static function setPreventPanning (preventPanning : boolean) : void;
        static function setPreventZooming (preventZooming : boolean) : void;
        static function setRecord (record : Ext.data.Model) : void;
        static function setRenderTo (renderTo : Ext.dom.Element) : void;
        static function setRight (right : number) : void;
        static function setRight (right : string) : void;
        static function setScrollable (scrollable : boolean) : Ext.scroll.View;
        static function setScrollable (scrollable : string) : Ext.scroll.View;
        static function setScrollable (scrollable : variant) : Ext.scroll.View;
        static function setShowAnimation (showAnimation : string) : void;
        static function setShowAnimation (showAnimation : variant) : void;
        static function setSize (width : number, height : number) : void;
        static function setStyle (style : string) : void;
        static function setStyle (style : variant) : void;
        static function setStyleHtmlCls (styleHtmlCls : string) : void;
        static function setStyleHtmlContent (styleHtmlContent : boolean) : void;
        static function setTop (top : number) : void;
        static function setTop (top : string) : void;
        static function setTpl (tpl : string) : void;
        static function setTpl (tpl : string[]) : void;
        static function setTpl (tpl : Ext.Template) : void;
        static function setTpl (tpl : Ext.XTemplate[]) : void;
        static function setTplWriteMode (tplWriteMode : string) : void;
        static function setUi (ui : string) : void;
        static function setUseBodyElement (useBodyElement : boolean) : void;
        static function setZIndex (zIndex : number) : void;
        static function show () : Ext.Component;
        static function showBy (component : Ext.Component, alignment : string) : void;
        static function showBy (component : Ext.Component) : void;
        static function showMenu (side : string) : void;
        static function statics () : Ext.Class;
        static function suspendEvents () : void;
        static function toggleMenu (side : string) : void;
        static function un (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function un (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function un (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
        static function un (eventName : string, fn : function  () : void, scope : variant) : void;
        static function un (eventName : string, fn : function  () : void, order : string) : void;
        static function un (eventName : string, fn : function  () : void) : void;
        static function un (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
        static function un (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function un (eventName : string, fn : string, scope : variant, order : string) : void;
        static function un (eventName : string, fn : string, scope : variant) : void;
        static function un (eventName : string, fn : string, order : string) : void;
        static function un (eventName : string, fn : string) : void;
        static function un (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function un (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function un (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
        static function un (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function un (eventName : string[], fn : function  () : void, order : string) : void;
        static function un (eventName : string[], fn : function  () : void) : void;
        static function un (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
        static function un (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function un (eventName : string[], fn : string, scope : variant, order : string) : void;
        static function un (eventName : string[], fn : string, scope : variant) : void;
        static function un (eventName : string[], fn : string, order : string) : void;
        static function un (eventName : string[], fn : string) : void;
        static function un (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
        static function un (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function un (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
        static function un (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function un (eventName : variant, fn : function  () : void, order : string) : void;
        static function un (eventName : variant, fn : function  () : void) : void;
        static function un (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
        static function un (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function un (eventName : variant, fn : string, scope : variant, order : string) : void;
        static function un (eventName : variant, fn : string, scope : variant) : void;
        static function un (eventName : variant, fn : string, order : string) : void;
        static function un (eventName : variant, fn : string) : void;
        static function unAfter (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function unAfter (eventName : string, fn : function  () : void, scope : variant) : void;
        static function unAfter (eventName : string, fn : function  () : void) : void;
        static function unAfter (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function unAfter (eventName : string, fn : string, scope : variant) : void;
        static function unAfter (eventName : string, fn : string) : void;
        static function unAfter (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function unAfter (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function unAfter (eventName : string[], fn : function  () : void) : void;
        static function unAfter (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function unAfter (eventName : string[], fn : string, scope : variant) : void;
        static function unAfter (eventName : string[], fn : string) : void;
        static function unAfter (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function unAfter (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function unAfter (eventName : variant, fn : function  () : void) : void;
        static function unAfter (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function unAfter (eventName : variant, fn : string, scope : variant) : void;
        static function unAfter (eventName : variant, fn : string) : void;
        static function unBefore (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
        static function unBefore (eventName : string, fn : function  () : void, scope : variant) : void;
        static function unBefore (eventName : string, fn : function  () : void) : void;
        static function unBefore (eventName : string, fn : string, scope : variant, options : variant) : void;
        static function unBefore (eventName : string, fn : string, scope : variant) : void;
        static function unBefore (eventName : string, fn : string) : void;
        static function unBefore (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
        static function unBefore (eventName : string[], fn : function  () : void, scope : variant) : void;
        static function unBefore (eventName : string[], fn : function  () : void) : void;
        static function unBefore (eventName : string[], fn : string, scope : variant, options : variant) : void;
        static function unBefore (eventName : string[], fn : string, scope : variant) : void;
        static function unBefore (eventName : string[], fn : string) : void;
        static function unBefore (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
        static function unBefore (eventName : variant, fn : function  () : void, scope : variant) : void;
        static function unBefore (eventName : variant, fn : function  () : void) : void;
        static function unBefore (eventName : variant, fn : string, scope : variant, options : variant) : void;
        static function unBefore (eventName : variant, fn : string, scope : variant) : void;
        static function unBefore (eventName : variant, fn : string) : void;
        static function unmask () : void;
        static function up (selector : string) : Ext.Container;
        static function up () : Ext.Container;
        static function updateStyleHtmlCls (newHtmlCls : variant, oldHtmlCls : variant) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
        // Events
        static function activate (newActiveItem : variant, this_ : Ext.Container, oldActiveItem : variant, eOpts : variant) : void;
        static function activeitemchange (this_ : Ext.Container, value : variant, oldValue : variant, eOpts : variant) : void;
        static function activeitemchange (this_ : Ext.Container, value : variant, oldValue : string, eOpts : variant) : void;
        static function activeitemchange (this_ : Ext.Container, value : variant, oldValue : number, eOpts : variant) : void;
        static function activeitemchange (this_ : Ext.Container, value : string, oldValue : variant, eOpts : variant) : void;
        static function activeitemchange (this_ : Ext.Container, value : string, oldValue : string, eOpts : variant) : void;
        static function activeitemchange (this_ : Ext.Container, value : string, oldValue : number, eOpts : variant) : void;
        static function activeitemchange (this_ : Ext.Container, value : number, oldValue : variant, eOpts : variant) : void;
        static function activeitemchange (this_ : Ext.Container, value : number, oldValue : string, eOpts : variant) : void;
        static function activeitemchange (this_ : Ext.Container, value : number, oldValue : number, eOpts : variant) : void;
        static function add (this_ : Ext.Container, item : variant, index : number, eOpts : variant) : void;
        static function beforeorientationchange (eOpts : variant) : void;
        static function bottomchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        static function bottomchange (this_ : Ext.Component, value : number, oldValue : string, eOpts : variant) : void;
        static function bottomchange (this_ : Ext.Component, value : string, oldValue : number, eOpts : variant) : void;
        static function bottomchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
        static function centeredchange (this_ : Ext.Component, value : boolean, oldValue : boolean, eOpts : variant) : void;
        static function deactivate (oldActiveItem : variant, this_ : Ext.Container, newActiveItem : variant, eOpts : variant) : void;
        static function destroy (eOpts : variant) : void;
        static function disabledchange (this_ : Ext.Component, value : boolean, oldValue : boolean, eOpts : variant) : void;
        static function dockedchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
        static function erased (this_ : Ext.Component, eOpts : variant) : void;
        static function flexchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        static function floatingchange (this_ : Ext.Component, floating : boolean, eOpts : variant) : void;
        static function fullscreen (this_ : Ext.Component, eOpts : variant) : void;
        static function heightchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        static function heightchange (this_ : Ext.Component, value : number, oldValue : string, eOpts : variant) : void;
        static function heightchange (this_ : Ext.Component, value : string, oldValue : number, eOpts : variant) : void;
        static function heightchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
        static function hiddenchange (this_ : Ext.Component, value : boolean, oldValue : boolean, eOpts : variant) : void;
        static function hide (this_ : Ext.Component, eOpts : variant) : void;
        static function initialize (this_ : Ext.Component, eOpts : variant) : void;
        static function leftchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        static function leftchange (this_ : Ext.Component, value : number, oldValue : string, eOpts : variant) : void;
        static function leftchange (this_ : Ext.Component, value : string, oldValue : number, eOpts : variant) : void;
        static function leftchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
        static function maxheightchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        static function maxheightchange (this_ : Ext.Component, value : number, oldValue : string, eOpts : variant) : void;
        static function maxheightchange (this_ : Ext.Component, value : string, oldValue : number, eOpts : variant) : void;
        static function maxheightchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
        static function maximize (this_ : Ext.Viewport, eOpts : variant) : void;
        static function maxwidthchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        static function maxwidthchange (this_ : Ext.Component, value : number, oldValue : string, eOpts : variant) : void;
        static function maxwidthchange (this_ : Ext.Component, value : string, oldValue : number, eOpts : variant) : void;
        static function maxwidthchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
        static function minheightchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        static function minheightchange (this_ : Ext.Component, value : number, oldValue : string, eOpts : variant) : void;
        static function minheightchange (this_ : Ext.Component, value : string, oldValue : number, eOpts : variant) : void;
        static function minheightchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
        static function minwidthchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        static function minwidthchange (this_ : Ext.Component, value : number, oldValue : string, eOpts : variant) : void;
        static function minwidthchange (this_ : Ext.Component, value : string, oldValue : number, eOpts : variant) : void;
        static function minwidthchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
        static function move (this_ : Ext.Container, item : variant, toIndex : number, fromIndex : number, eOpts : variant) : void;
        static function orientationchange (this_ : Ext.Viewport, newOrientation : string, width : number, height : number, eOpts : variant) : void;
        static function painted (element : Ext.dom.Element, eOpts : variant) : void;
        static function ready (this_ : Ext.Viewport, eOpts : variant) : void;
        static function remove (this_ : Ext.Container, item : variant, index : number, eOpts : variant) : void;
        static function resize (element : Ext.dom.Element, eOpts : variant) : void;
        static function rightchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        static function rightchange (this_ : Ext.Component, value : number, oldValue : string, eOpts : variant) : void;
        static function rightchange (this_ : Ext.Component, value : string, oldValue : number, eOpts : variant) : void;
        static function rightchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
        static function scrollablechange (this_ : Ext.Container, value : boolean, oldValue : boolean, eOpts : variant) : Ext.scroll.View;
        static function scrollablechange (this_ : Ext.Container, value : boolean, oldValue : string, eOpts : variant) : Ext.scroll.View;
        static function scrollablechange (this_ : Ext.Container, value : boolean, oldValue : variant, eOpts : variant) : Ext.scroll.View;
        static function scrollablechange (this_ : Ext.Container, value : string, oldValue : boolean, eOpts : variant) : Ext.scroll.View;
        static function scrollablechange (this_ : Ext.Container, value : string, oldValue : string, eOpts : variant) : Ext.scroll.View;
        static function scrollablechange (this_ : Ext.Container, value : string, oldValue : variant, eOpts : variant) : Ext.scroll.View;
        static function scrollablechange (this_ : Ext.Container, value : variant, oldValue : boolean, eOpts : variant) : Ext.scroll.View;
        static function scrollablechange (this_ : Ext.Container, value : variant, oldValue : string, eOpts : variant) : Ext.scroll.View;
        static function scrollablechange (this_ : Ext.Container, value : variant, oldValue : variant, eOpts : variant) : Ext.scroll.View;
        static function show (this_ : Ext.Component, eOpts : variant) : void;
        static function topchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        static function topchange (this_ : Ext.Component, value : number, oldValue : string, eOpts : variant) : void;
        static function topchange (this_ : Ext.Component, value : string, oldValue : number, eOpts : variant) : void;
        static function topchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
        static function updatedata (this_ : Ext.Component, newData : variant, eOpts : variant) : void;
        static function widthchange (this_ : Ext.Component, value : number, oldValue : number, eOpts : variant) : void;
        static function widthchange (this_ : Ext.Component, value : number, oldValue : string, eOpts : variant) : void;
        static function widthchange (this_ : Ext.Component, value : string, oldValue : number, eOpts : variant) : void;
        static function widthchange (this_ : Ext.Component, value : string, oldValue : string, eOpts : variant) : void;
    }

    class XTemplate extends Ext.Template
    {
        // Methods
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function from (el : string, config : variant) : Ext.Template;
        static function from (el : string) : Ext.Template;
        static function from (el : HTMLElement, config : variant) : Ext.Template;
        static function from (el : HTMLElement) : Ext.Template;
        static function getName () : string;
        static function getTpl (instance : variant, name : string) : Ext.XTemplate;
    }


    class XTemplateParser extends Ext.Base
    {
        // Properties
        var level : number;
        // Methods
        function constructor (config : variant);
        function doCase (action : string, actions : variant) : void;
        function doDefault () : void;
        function doElse () : void;
        function doElseIf (action : string, actions : variant) : void;
        function doEnd (type : string, actions : variant) : void;
        function doEval (text : string) : void;
        function doExec (action : string, actions : variant) : void;
        function doExpr (expr : string) : void;
        function doFor (action : string, actions : variant) : void;
        function doIf (action : string, actions : variant) : void;
        function doSwitch (action : string, actions : variant) : void;
        function doTag (tag : string) : void;
        function doText (text : string) : void;
        function doTpl () : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class anims
    {
        // Properties
        static var cube : variant;
        static var fade : variant;
        static var flip : variant;
        static var pop : variant;
        static var slide : variant;
        static var wipe : variant;
    }

    class app
    {

        class Action extends Ext.Base
        {
            // Methods
            function constructor (config : variant);
            function execute () : void;
            function getAction () : string;
            function getApplication () : Ext.app.Application;
            function getArgs () : variant[];
            function getBeforeFilters () : variant[];
            function getController () : Ext.app.Controller;
            function getData () : variant;
            function getScope () : variant;
            function getTitle () : variant;
            function getUrl () : string;
            function resume () : void;
            function setAction (action : string) : void;
            function setApplication (application : Ext.app.Application) : void;
            function setArgs (args : variant[]) : void;
            function setBeforeFilters (beforeFilters : variant[]) : void;
            function setController (controller : Ext.app.Controller) : void;
            function setData (data : variant) : void;
            function setScope (scope : variant) : void;
            function setTitle (title : variant) : void;
            function setUrl (url : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Application extends Ext.app.Controller
        {
            // Methods
            function dispatch (action : Ext.app.Action, addToHistory : boolean) : void;
            function dispatch (action : Ext.app.Action) : void;
            function getAppFolder () : string;
            function getControllers () : variant[];
            function getCurrentProfile () : Ext.app.Profile;
            function getHistory () : Ext.app.History;
            function getLaunch () : function () : void;
            function getName () : string;
            function getProfiles () : variant[];
            function getRequires () : string[];
            function getRouter () : Ext.app.Router;
            function setAppFolder (appFolder : string) : void;
            function setControllers (controllers : variant[]) : void;
            function setCurrentProfile (currentProfile : Ext.app.Profile) : void;
            function setHistory (history : Ext.app.History) : void;
            function setLaunch (launch : function  () : void) : void;
            function setName (name : string) : void;
            function setProfiles (profiles : variant[]) : void;
            function setRequires (requires : string[]) : void;
            function setRouter (router : Ext.app.Router) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Controller extends Ext.Base
        {
            // Methods
            function getApplication () : Ext.app.Application;
            function getBefore () : variant;
            function getControl () : variant;
            function getModels () : string[];
            function getRefs () : variant;
            function getRoutes () : variant;
            function getStores () : string[];
            function getViews () : variant[];
            function redirectTo (place : variant) : variant;
            function setApplication (application : Ext.app.Application) : void;
            function setBefore (before : variant) : void;
            function setControl (control : variant) : void;
            function setModels (models : string[]) : void;
            function setRefs (refs : variant) : void;
            function setRoutes (routes : variant) : void;
            function setStores (stores : string[]) : void;
            function setViews (views : variant[]) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class History extends Ext.Base
        {
            // Methods
            function add (action : Ext.app.Action, silent : boolean) : void;
            function back () : void;
            function getActions () : variant[];
            function getToken () : string;
            function getUpdateUrl () : boolean;
            function setActions (actions : variant[]) : void;
            function setToken (token : string) : void;
            function setUpdateUrl (updateUrl : boolean) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function change (url : string, eOpts : variant) : void;
        }

        class Profile extends Ext.Base
        {
            // Methods
            function getApplication () : Ext.app.Application;
            function getControllers () : variant[];
            function getModels () : variant[];
            function getName () : string;
            function getNamespace () : string;
            function getStores () : variant[];
            function getViews () : variant[];
            function isActive () : boolean;
            function launch () : void;
            function setApplication (application : Ext.app.Application) : void;
            function setControllers (controllers : variant[]) : void;
            function setModels (models : variant[]) : void;
            function setName (name : string) : void;
            function setNamespace (namespace : string) : void;
            function setStores (stores : variant[]) : void;
            function setViews (views : variant[]) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class Router extends Ext.Base
        {
            // Methods
            function constructor (config : variant);
            function connect (url : string, params : variant) : void;
            function connect (url : string) : void;
            function draw (fn : function  () : void) : void;
            function getDefaults () : variant;
            function getRoutes () : variant[];
            function recognize (url : string) : variant;
            function setDefaults (defaults : variant) : void;
            function setRoutes (routes : variant[]) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }
    }

    class behavior
    {

        class Behavior extends Ext.Base
        {
            // Methods
            function constructor (component : variant);
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }



    }

    class browser extends Ext.env.Browser
    {
        // Properties
        // Methods
        static function constructor (userAgent : variant);
        static function callOverridden (args : variant[]) : variant;
        static function callParent (args : variant[]) : variant;
        static function callSuper (args : variant[]) : variant;
        static function destroy () : void;
        static function getInitialConfig (name : string) : variant;
        static function getInitialConfig () : variant;
        static function initConfig (instanceConfig : variant) : variant;
        static function is (value : string) : boolean;
        static function statics () : Ext.Class;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class carousel
    {

        class Carousel extends Ext.Container
        {
            // Methods
            function getActiveIndex () : number;
            function getAnimation () : variant;
            function getBufferSize () : number;
            function getDirection () : string;
            function getDirectionLock () : boolean;
            function getIndicator () : boolean;
            function getItemConfig () : variant;
            function getItemLength () : variant;
            function next () : Ext.carousel.Carousel;
            function previous () : Ext.carousel.Carousel;
            function setAnimation (animation : variant) : void;
            function setBufferSize (bufferSize : number) : void;
            function setDirection (direction : string) : void;
            function setDirectionLock (directionLock : boolean) : void;
            function setIndicator (indicator : boolean) : void;
            function setItemConfig (itemConfig : variant) : void;
            function setItemLength (itemLength : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }



    }

    class chart
    {

        class AbstractChart extends Ext.draw.Component
        {
            // Properties
            var version : string;
            // Methods
            function bindStore (store : Ext.data.Store) : void;
            function cancelLayout () : void;
            function getAxes () : variant;
            function getColors () : variant;
            function getHighlightItem () : variant;
            function getInnerPadding () : variant;
            function getInsetPadding (top : number) : void;
            function getInteractions () : variant[];
            function getItemForPoint (x : number, y : number) : variant;
            function getItemsForPoint (x : number, y : number) : variant[];
            function getLegend () : variant;
            function getLegendStore () : Ext.data.Store;
            function getSeries () : variant;
            function getShadow () : variant;
            function getStore () : Ext.data.Store;
            function redraw () : void;
            function resumeThicknessChanged () : void;
            function scheduleLayout () : void;
            function setAnimate (animate : boolean) : void;
            function setAnimate (animate : variant) : void;
            function setAxes (axes : Ext.chart.axis.Axis) : void;
            function setAxes (axes : variant[]) : void;
            function setAxes (axes : variant) : void;
            function setColors (colors : boolean) : void;
            function setColors (colors : variant[]) : void;
            function setHighlightItem (highlightItem : variant) : void;
            function setInnerPadding (innerPadding : variant) : void;
            function setInsetPadding (insetPadding : variant, top : number) : void;
            function setInsetPadding (insetPadding : number, top : number) : void;
            function setInteractions (interactions : variant[]) : void;
            function setLegend (legend : Ext.chart.Legend) : void;
            function setLegend (legend : variant) : void;
            function setSeries (series : Ext.chart.series.Series) : void;
            function setSeries (series : variant[]) : void;
            function setShadow (shadow : boolean) : void;
            function setShadow (shadow : variant) : void;
            function setStore (store : Ext.data.Store) : void;
            function suspendThicknessChanged () : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function beforerefresh (this_ : Ext.chart.AbstractChart, eOpts : variant) : void;
            function itemclick (series : Ext.chart.series.Series, item : variant, event : Event, eOpts : variant) : void;
            function itemdoubleclick (series : Ext.chart.series.Series, item : variant, event : Event, eOpts : variant) : void;
            function itemdoubletap (series : Ext.chart.series.Series, item : variant, event : Event, eOpts : variant) : void;
            function itemdrag (series : Ext.chart.series.Series, item : variant, event : Event, eOpts : variant) : void;
            function itemdragend (series : Ext.chart.series.Series, item : variant, event : Event, eOpts : variant) : void;
            function itemdragstart (series : Ext.chart.series.Series, item : variant, event : Event, eOpts : variant) : void;
            function itemmousedown (series : Ext.chart.series.Series, item : variant, event : Event, eOpts : variant) : void;
            function itemmousemove (series : Ext.chart.series.Series, item : variant, event : Event, eOpts : variant) : void;
            function itemmouseout (series : Ext.chart.series.Series, item : variant, event : Event, eOpts : variant) : void;
            function itemmouseover (series : Ext.chart.series.Series, item : variant, event : Event, eOpts : variant) : void;
            function itemmouseup (series : Ext.chart.series.Series, item : variant, event : Event, eOpts : variant) : void;
            function itempinch (series : Ext.chart.series.Series, item : variant, event : Event, eOpts : variant) : void;
            function itempinchend (series : Ext.chart.series.Series, item : variant, event : Event, eOpts : variant) : void;
            function itempinchstart (series : Ext.chart.series.Series, item : variant, event : Event, eOpts : variant) : void;
            function itemsingletap (series : Ext.chart.series.Series, item : variant, event : Event, eOpts : variant) : void;
            function itemswipe (series : Ext.chart.series.Series, item : variant, event : Event, eOpts : variant) : void;
            function itemtap (series : Ext.chart.series.Series, item : variant, event : Event, eOpts : variant) : void;
            function itemtapcancel (series : Ext.chart.series.Series, item : variant, event : Event, eOpts : variant) : void;
            function itemtapend (series : Ext.chart.series.Series, item : variant, event : Event, eOpts : variant) : void;
            function itemtaphold (series : Ext.chart.series.Series, item : variant, event : Event, eOpts : variant) : void;
            function itemtapstart (series : Ext.chart.series.Series, item : variant, event : Event, eOpts : variant) : void;
            function itemtouchend (series : Ext.chart.series.Series, item : variant, event : Event, eOpts : variant) : void;
            function itemtouchmove (series : Ext.chart.series.Series, item : variant, event : Event, eOpts : variant) : void;
            function itemtouchstart (series : Ext.chart.series.Series, item : variant, event : Event, eOpts : variant) : void;
            function redraw (this_ : Ext.chart.AbstractChart, eOpts : variant) : void;
            function refresh (this_ : Ext.chart.AbstractChart, eOpts : variant) : void;
        }

        class CartesianChart extends Ext.chart.AbstractChart
        {
            // Methods
            function getFlipXY () : boolean;
            function getInnerRegion () : variant[];
            function setFlipXY (flipXY : boolean) : void;
            function setInnerRegion (innerRegion : variant[]) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Legend extends Ext.dataview.DataView
        {
            // Methods
            function getHorizontalHeight () : number;
            function getToggleable () : boolean;
            function getVerticalWidth () : number;
            function setHorizontalHeight (horizontalHeight : number) : void;
            function setToggleable (toggleable : boolean) : void;
            function setVerticalWidth (verticalWidth : number) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class MarkerHolder extends Ext.mixin.Mixin
        {
            // Methods
            function constructor ();
            function bindMarker (name : string, marker : Ext.chart.Markers) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Markers extends Ext.draw.sprite.Instancing
        {
            // Methods
            function clear (category : string) : void;
            function getMarkerBBoxFor (category : string, index : variant, isWithoutTransform : boolean) : void;
            function getMarkerBBoxFor (category : string, index : variant) : void;
            function putMarkerFor (category : string, markerAttr : variant, index : string, canonical : boolean, keepRevision : boolean) : void;
            function putMarkerFor (category : string, markerAttr : variant, index : string, canonical : boolean) : void;
            function putMarkerFor (category : string, markerAttr : variant, index : string) : void;
            function putMarkerFor (category : string, markerAttr : variant, index : number, canonical : boolean, keepRevision : boolean) : void;
            function putMarkerFor (category : string, markerAttr : variant, index : number, canonical : boolean) : void;
            function putMarkerFor (category : string, markerAttr : variant, index : number) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class PolarChart extends Ext.chart.AbstractChart
        {
            // Methods
            function getCenter () : variant[];
            function getRadius () : number;
            function setCenter (center : variant[]) : void;
            function setRadius (radius : number) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class SpaceFillingChart extends Ext.chart.AbstractChart
        {
            // Methods
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class axis
        {

            class Axis extends Ext.Base
            {
                // Methods
                function getBackground () : variant;
                function getChart () : Ext.chart.AbstractChart;
                function getCoordFor (value : variant, field : string, idx : number, items : Ext.util.MixedCollection) : number;
                function getCoordFor (value : variant, field : string, idx : number) : number;
                function getCoordFor (value : variant, field : string, items : Ext.util.MixedCollection) : number;
                function getCoordFor (value : variant, field : string) : number;
                function getFields () : variant[];
                function getGrid () : variant;
                function getHidden () : boolean;
                function getIncrement () : number;
                function getLabel () : variant;
                function getLabelInSpan () : boolean;
                function getLayout () : variant;
                function getMajorTickSteps () : number;
                function getMaxZoom () : number;
                function getMaximum () : number;
                function getMinZoom () : number;
                function getMinimum () : number;
                function getMinorTickSteps () : number;
                function getNeedHighPrecision () : boolean;
                function getPosition () : string;
                function getRange () : variant[];
                function getRenderer () : function () : void;
                function getSegmenter () : variant;
                function getStyle () : variant;
                function getTitle () : variant;
                function getTitleMargin () : number;
                function getVisibleRange () : variant[];
                function processData () : void;
                function renderFrame () : void;
                function setBackground (background : variant) : void;
                function setChart (chart : Ext.chart.AbstractChart) : void;
                function setFields (fields : variant[]) : void;
                function setGrid (grid : variant) : void;
                function setHidden (hidden : boolean) : void;
                function setIncrement (increment : number) : void;
                function setLabel (label : variant) : void;
                function setLabelInSpan (labelInSpan : boolean) : void;
                function setLayout (layout : variant) : void;
                function setLayout (layout : Ext.chart.axis.layout.Layout) : void;
                function setMajorTickSteps (majorTickSteps : number) : void;
                function setMaxZoom (maxZoom : number) : void;
                function setMaximum (maximum : number) : void;
                function setMinZoom (minZoom : number) : void;
                function setMinimum (minimum : number) : void;
                function setMinorTickSteps (minorTickSteps : number) : void;
                function setNeedHighPrecision (needHighPrecision : boolean) : void;
                function setPosition (position : string) : void;
                function setRenderer (renderer : function  () : void) : string;
                function setSegmenter (segmenter : variant) : void;
                function setSegmenter (segmenter : Ext.chart.axis.segmenter.Segmenter) : void;
                function setStyle (style : variant) : void;
                function setTitle (title : string) : void;
                function setTitle (title : variant) : void;
                function setTitleMargin (titleMargin : number) : void;
                function setVisibleRange (visibleRange : variant[]) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Category extends Ext.chart.axis.Axis
            {
                // Methods
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Numeric extends Ext.chart.axis.Axis
            {
                // Methods
                function getAggregator () : string;
                function setAggregator (aggregator : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Time extends Ext.chart.axis.Numeric
            {
                // Methods
                function getCalculateByLabelSize () : boolean;
                function getDateFormat () : variant;
                function getFromDate () : Date;
                function getStep () : variant[];
                function getToDate () : Date;
                function setCalculateByLabelSize (calculateByLabelSize : boolean) : void;
                function setDateFormat (dateFormat : string) : void;
                function setDateFormat (dateFormat : boolean) : void;
                function setFromDate (fromDate : Date) : void;
                function setStep (step : variant[]) : void;
                function setToDate (toDate : Date) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class layout
            {

                class CombineDuplicate extends Ext.chart.axis.layout.Discrete
                {
                    // Methods
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : Ext.Base;
                    static function callParent (args : variant) : void;
                    static function create () : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : string;
                }

                class Continuous extends Ext.chart.axis.layout.Layout
                {
                    // Methods
                    function getAdjustMaximumByMajorUnit () : boolean;
                    function getAdjustMinimumByMajorUnit () : boolean;
                    function setAdjustMaximumByMajorUnit (adjustMaximumByMajorUnit : boolean) : void;
                    function setAdjustMinimumByMajorUnit (adjustMinimumByMajorUnit : boolean) : void;
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : Ext.Base;
                    static function callParent (args : variant) : void;
                    static function create () : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : string;
                }

                class Discrete extends Ext.chart.axis.layout.Layout
                {
                    // Methods
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : Ext.Base;
                    static function callParent (args : variant) : void;
                    static function create () : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : string;
                }

                class Layout extends Ext.Base
                {
                    // Methods
                    function constructor (config : variant);
                    function calculateLayout (context : variant) : variant;
                    function calculateMajorTicks (context : variant) : void;
                    function calculateMinorTicks (context : variant) : void;
                    function getAxis () : Ext.chart.axis.Axis;
                    function processData (series : Ext.chart.series.Series) : void;
                    function setAxis (axis : Ext.chart.axis.Axis) : void;
                    function snapEnds (context : variant, min : number, max : number, estStepSize : number) : void;
                    function trimByRange (context : variant, out : variant, trimMin : number, trimMax : number) : void;
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : Ext.Base;
                    static function callParent (args : variant) : void;
                    static function create () : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : string;
                }
            }

            class segmenter
            {

                class Names extends Ext.chart.axis.segmenter.Segmenter
                {
                    // Methods
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : Ext.Base;
                    static function callParent (args : variant) : void;
                    static function create () : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : string;
                }

                class Numeric extends Ext.chart.axis.segmenter.Segmenter
                {
                    // Methods
                    function exactStep (start : variant, estStepSize : variant) : variant;
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : Ext.Base;
                    static function callParent (args : variant) : void;
                    static function create () : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : string;
                }

                class Segmenter extends Ext.Base
                {
                    // Methods
                    function constructor (config : variant);
                    function add (value : variant, step : number, unit : variant) : void;
                    function align (value : variant, step : number, unit : variant) : variant;
                    function diff (min : variant, max : variant, unit : variant) : number;
                    function from (value : variant) : variant;
                    function getAxis () : Ext.chart.axis.Axis;
                    function preferredStep (start : variant, estStepSize : variant) : variant;
                    function renderer (value : variant, context : variant) : string;
                    function setAxis (axis : Ext.chart.axis.Axis) : void;
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : Ext.Base;
                    static function callParent (args : variant) : void;
                    static function create () : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : string;
                }

                class Time extends Ext.chart.axis.segmenter.Segmenter
                {
                    // Methods
                    function getStep () : variant;
                    function setStep (step : variant) : void;
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : Ext.Base;
                    static function callParent (args : variant) : void;
                    static function create () : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : string;
                }
            }

            class sprite
            {

            }
        }

        class grid
        {

            class CircularGrid extends Ext.draw.sprite.Circle
            {
                // Methods
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class HorizontalGrid extends Ext.draw.sprite.Sprite
            {
                // Methods
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class RadialGrid extends Ext.draw.sprite.Path
            {
                // Methods
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class VerticalGrid extends Ext.draw.sprite.Sprite
            {
                // Methods
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }

        class interactions
        {

            class Abstract extends Ext.Base
            {
                // Properties
                var throttleGap : number;
                // Methods
                function constructor (config : variant);
                override function destroy () : void;
                function getChart () : Ext.chart.AbstractChart;
                function getEnabled () : boolean;
                function getGesture () : string;
                function getItemForEvent (e : Event) : variant;
                function getItemsForEvent (e : Event) : variant[];
                function initialize () : void;
                function onGesture () : void;
                function setChart (chart : Ext.chart.AbstractChart) : void;
                function setEnabled (enabled : boolean) : void;
                function setGesture (gesture : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class CrossZoom extends Ext.chart.interactions.Abstract
            {
                // Methods
                function getAxes () : variant;
                function getUndoButton () : variant;
                function setAxes (axes : variant) : void;
                function setAxes (axes : variant[]) : void;
                function setUndoButton (undoButton : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class ItemHighlight extends Ext.chart.interactions.Abstract
            {
                // Methods
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class ItemInfo extends Ext.chart.interactions.Abstract
            {
                // Methods
                function getPanel () : variant;
                function setPanel (panel : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
                // Events
                function show (this_ : Ext.chart.interactions.ItemInfo, item : variant, panel : Ext.Panel, eOpts : variant) : void;
            }

            class PanZoom extends Ext.chart.interactions.Abstract
            {
                // Methods
                function getAxes () : variant;
                function getHideLabelInGesture () : boolean;
                function getMaxZoom () : variant;
                function getMinZoom () : variant;
                function getModeToggleButton () : variant;
                function getPanGesture () : string;
                function getShowOverflowArrows () : boolean;
                function getZoomOnPanGesture () : boolean;
                function setAxes (axes : variant) : void;
                function setAxes (axes : variant[]) : void;
                function setHideLabelInGesture (hideLabelInGesture : boolean) : void;
                function setMaxZoom (maxZoom : variant) : void;
                function setMinZoom (minZoom : variant) : void;
                function setModeToggleButton (modeToggleButton : variant) : void;
                function setPanGesture (panGesture : string) : void;
                function setShowOverflowArrows (showOverflowArrows : boolean) : void;
                function setZoomOnPanGesture (zoomOnPanGesture : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Rotate extends Ext.chart.interactions.Abstract
            {
                // Methods
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
                // Events
                function rotate (this_ : Ext.chart.interactions.Rotate, angle : number, eOpts : variant) : void;
                function rotationEnd (this_ : Ext.chart.interactions.Rotate, angle : number, eOpts : variant) : void;
            }

            class RotatePie3D extends Ext.chart.interactions.Rotate
            {
                // Methods
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }

        class label
        {

            class Callout extends Ext.draw.modifier.Modifier
            {
                // Methods
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Label extends Ext.draw.sprite.Text
            {
                // Methods
                function getField () : variant;
                function getFx () : variant;
                function setField (field : variant) : void;
                function setFx (fx : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }

        class series
        {

            class Area extends Ext.chart.series.StackedCartesian
            {
                // Methods
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Bar extends Ext.chart.series.StackedCartesian
            {
                // Methods
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class CandleStick extends Ext.chart.series.Cartesian
            {
                // Methods
                function getCloseField () : string;
                function getHighField () : string;
                function getLowField () : string;
                function getOpenField () : string;
                function setCloseField (closeField : string) : void;
                function setHighField (highField : string) : void;
                function setLowField (lowField : string) : void;
                function setOpenField (openField : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Cartesian extends Ext.chart.series.Series
            {
                // Methods
                function getXAxis () : Ext.chart.axis.Axis;
                function getXField () : string;
                function getYAxis () : Ext.chart.axis.Axis;
                function getYField () : string;
                function provideLegendInfo (target : variant) : void;
                function setXAxis (xAxis : Ext.chart.axis.Axis) : void;
                function setXField (xField : string) : void;
                function setYAxis (yAxis : Ext.chart.axis.Axis) : void;
                function setYField (yField : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Gauge extends Ext.chart.series.Series
            {
                // Methods
                function getCenter () : variant[];
                function getDonut () : number;
                function getField () : string;
                function getMaximum () : number;
                function getMinimum () : number;
                function getNeedle () : boolean;
                function getNeedleLength () : number;
                function getNeedleWidth () : number;
                function getRadius () : number;
                function getRegion () : variant[];
                function getRotation () : number;
                function getSectors (start : number, end : number, label : string, color : string, style : variant) : void;
                function getTotalAngle () : variant;
                function getValue () : number;
                function getWholeDisk () : boolean;
                function setCenter (center : variant[]) : void;
                function setDonut (donut : number) : void;
                function setField (field : string) : void;
                function setMaximum (maximum : number) : void;
                function setMinimum (minimum : number) : void;
                function setNeedle (needle : boolean) : void;
                function setNeedleLength (needleLength : number) : void;
                function setNeedleWidth (needleWidth : number) : void;
                function setRadius (radius : number) : void;
                function setRegion (region : variant[]) : void;
                function setRotation (rotation : number) : void;
                function setSectors (sectors : variant[], start : number, end : number, label : string, color : string, style : variant) : void;
                function setTotalAngle (totalAngle : variant) : void;
                function setValue (value : number) : void;
                function setWholeDisk (wholeDisk : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }


            class Line extends Ext.chart.series.Cartesian
            {
                // Methods
                function getAggregator () : variant;
                function getFill () : boolean;
                function getSelectionTolerance () : number;
                function getSmooth () : variant;
                function getStep () : boolean;
                function setAggregator (aggregator : variant) : void;
                function setFill (fill : boolean) : void;
                function setSelectionTolerance (selectionTolerance : number) : void;
                function setSmooth (smooth : boolean) : void;
                function setSmooth (smooth : number) : void;
                function setStep (step : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Pie extends Ext.chart.series.Polar
            {
                // Methods
                function getDonut () : variant;
                function getItemForAngle (angle : number) : variant;
                function getTotalAngle () : number;
                function setDonut (donut : boolean) : void;
                function setDonut (donut : number) : void;
                function setTotalAngle (totalAngle : number) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Pie3D extends Ext.chart.series.Polar
            {
                // Methods
                function getDistortion () : number;
                function getDonut () : variant;
                function getField () : string;
                function getRegion () : variant[];
                function getThickness () : number;
                function setDistortion (distortion : number) : void;
                function setDonut (donut : boolean) : void;
                function setDonut (donut : number) : void;
                function setField (field : string) : void;
                function setRegion (region : variant[]) : void;
                function setThickness (thickness : number) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Polar extends Ext.chart.series.Series
            {
                // Methods
                function getCenter () : variant[];
                function getOffsetX () : number;
                function getOffsetY () : number;
                function getRadius () : number;
                function getRotation () : number;
                function getXAxis () : variant;
                function getXField () : string;
                function getYAxis () : variant;
                function getYField () : string;
                function setCenter (center : variant[]) : void;
                function setOffsetX (offsetX : number) : void;
                function setOffsetY (offsetY : number) : void;
                function setRadius (radius : number) : void;
                function setRotation (rotation : number) : void;
                function setXAxis (xAxis : variant) : void;
                function setXField (xField : string) : void;
                function setYAxis (yAxis : variant) : void;
                function setYField (yField : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Radar extends Ext.chart.series.Polar
            {
                // Methods
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Scatter extends Ext.chart.series.Cartesian
            {
                // Methods
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Series extends Ext.Base
            {
                // Properties
                var seriesType : string;
                var type : string;
                // Methods
                function getAnimate () : variant;
                function getBackground () : variant;
                function getColors () : variant[];
                function getHidden () : variant;
                function getHighlightCfg () : variant;
                function getHighlightItem () : variant;
                function getItemForPoint (x : number, y : number, target : variant) : variant;
                function getItemForPoint (x : number, y : number) : variant;
                function getItemInstancing () : variant;
                function getLabel (display : string, color : string, field : string, font : string, orientation : string, renderer : function  () : void) : void;
                function getLabel (display : string, color : string, field : string[], font : string, orientation : string, renderer : function  () : void) : void;
                function getLabelOverflowPadding () : number;
                function getMarker () : variant;
                function getMarkerSubStyle () : variant;
                function getOverlaySurface () : variant;
                function getRenderer () : function () : void;
                function getShowInLegend () : boolean;
                function getSprites () : void;
                function getStyle () : variant;
                function getSubStyle () : variant;
                function getSurface () : variant;
                function getTitle () : string;
                function provideLegendInfo (target : variant[]) : void;
                function setAnimate (animate : variant) : void;
                function setBackground (background : variant) : void;
                function setColors (colors : variant[]) : void;
                function setHidden (hidden : boolean) : void;
                function setHidden (hidden : variant[]) : void;
                function setHiddenByIndex (index : number, value : boolean) : void;
                function setHighlightCfg (highlightCfg : variant) : void;
                function setHighlightItem (highlightItem : variant) : void;
                function setItemInstancing (itemInstancing : variant) : void;
                function setLabel (label : variant, display : string, color : string, field : string, font : string, orientation : string, renderer : function  () : void) : void;
                function setLabel (label : variant, display : string, color : string, field : string[], font : string, orientation : string, renderer : function  () : void) : void;
                function setLabelOverflowPadding (labelOverflowPadding : number) : void;
                function setMarker (marker : variant) : void;
                function setMarkerSubStyle (markerSubStyle : variant) : void;
                function setOverlaySurface (overlaySurface : variant) : void;
                function setRenderer (renderer : function  () : void) : variant;
                function setShowInLegend (showInLegend : boolean) : void;
                function setStore (store : variant) : void;
                function setStyle (style : variant) : void;
                function setSubStyle (subStyle : variant) : void;
                function setSurface (surface : variant) : void;
                function setTitle (title : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
                // Events
                function chartattached (chart : Ext.chart.AbstractChart, series : Ext.chart.series.Series, eOpts : variant) : void;
                function chartdetached (chart : Ext.chart.AbstractChart, series : Ext.chart.series.Series, eOpts : variant) : void;
            }

            class StackedCartesian extends Ext.chart.series.Cartesian
            {
                // Methods
                function getItemForPoint (x : variant, y : variant) : variant;
                function getStacked () : boolean;
                function setStacked (stacked : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class sprite
            {

                class Aggregative extends Ext.chart.series.sprite.Cartesian
                {
                    // Methods
                    function constructor ();
                    function getAggregator () : variant;
                    function setAggregator (aggregator : variant) : void;
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : Ext.Base;
                    static function callParent (args : variant) : void;
                    static function create () : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : string;
                }

                class Area extends Ext.chart.series.sprite.StackedCartesian
                {
                    // Methods
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : Ext.Base;
                    static function callParent (args : variant) : void;
                    static function create () : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : string;
                }

                class Bar extends Ext.chart.series.sprite.StackedCartesian
                {
                    // Methods
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : Ext.Base;
                    static function callParent (args : variant) : void;
                    static function create () : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : string;
                }

                class CandleStick extends Ext.chart.series.sprite.Aggregative
                {
                    // Methods
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : Ext.Base;
                    static function callParent (args : variant) : void;
                    static function create () : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : string;
                }

                class Cartesian extends Ext.draw.sprite.Sprite
                {
                    // Methods
                    function binarySearch (key : string) : variant;
                    function getField () : string;
                    function getFlipXY () : boolean;
                    function getIndexNearPoint (x : number, y : number) : number;
                    function renderClipped (surface : Ext.draw.Surface, ctx : Ext.draw.engine.Canvas, clip : variant[], region : variant[]) : void;
                    function renderClipped (surface : Ext.draw.Surface, ctx : Ext.draw.engine.SvgContext, clip : variant[], region : variant[]) : void;
                    function setField (field : string) : void;
                    function setFlipXY (flipXY : boolean) : void;
                    override function updatePlainBBox (plain : variant) : void;
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : Ext.Base;
                    static function callParent (args : variant) : void;
                    static function create () : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : string;
                }

                class Line extends Ext.chart.series.sprite.Aggregative
                {
                    // Methods
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : Ext.Base;
                    static function callParent (args : variant) : void;
                    static function create () : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : string;
                }

                class Pie3DPart extends Ext.draw.sprite.Path
                {
                    // Methods
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : Ext.Base;
                    static function callParent (args : variant) : void;
                    static function create () : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : string;
                }

                class PieSlice extends Ext.draw.sprite.Sector
                {
                    // Methods
                    function getRendererIndex () : number;
                    function setRendererIndex (rendererIndex : number) : void;
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : Ext.Base;
                    static function callParent (args : variant) : void;
                    static function create () : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : string;
                }

                class Polar extends Ext.draw.sprite.Sprite
                {
                    // Methods
                    function getField () : variant;
                    function setField (field : variant) : void;
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : Ext.Base;
                    static function callParent (args : variant) : void;
                    static function create () : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : string;
                }

                class Radar extends Ext.chart.series.sprite.Polar
                {
                    // Methods
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : Ext.Base;
                    static function callParent (args : variant) : void;
                    static function create () : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : string;
                }

                class Scatter extends Ext.chart.series.sprite.Cartesian
                {
                    // Methods
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : Ext.Base;
                    static function callParent (args : variant) : void;
                    static function create () : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : string;
                }

                class StackedCartesian extends Ext.chart.series.sprite.Cartesian
                {
                    // Methods
                    function getIndexNearPoint (x : variant, y : variant) : number;
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : Ext.Base;
                    static function callParent (args : variant) : void;
                    static function create () : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : string;
                }
            }
        }
    }

    class data
    {

        class ArrayStore extends Ext.data.Store
        {
            // Methods
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Batch extends Ext.Base
        {
            // Properties
            var current : number;
            var hasException : boolean;
            var isComplete : boolean;
            var isRunning : boolean;
            var operations : Ext.data.Operation[];
            var total : number;
            // Methods
            function add (operation : variant) : void;
            function getAutoStart () : boolean;
            function getPauseOnException () : boolean;
            function getProxy () : Ext.data.proxy.Proxy;
            function pause () : void;
            function runOperation (index : number) : void;
            function setAutoStart (autoStart : boolean) : void;
            function setPauseOnException (pauseOnException : boolean) : void;
            function setProxy (proxy : Ext.data.proxy.Proxy) : void;
            function start () : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function complete (batch : Ext.data.Batch, operation : variant, eOpts : variant) : void;
            function exception (batch : Ext.data.Batch, operation : variant, eOpts : variant) : void;
            function operationcomplete (batch : Ext.data.Batch, operation : variant, eOpts : variant) : void;
        }

        class Connection extends Ext.Base
        {
            // Methods
            function abort (request : variant) : void;
            function abort () : void;
            function abortAll () : void;
            function getAsync () : boolean;
            function getAutoAbort () : boolean;
            function getDefaultHeaders () : variant;
            function getDefaultPostHeader () : string;
            function getDefaultXhrHeader () : string;
            function getDisableCaching () : boolean;
            function getDisableCachingParam () : string;
            function getExtraParams () : variant;
            function getMethod () : string;
            function getPassword () : string;
            function getTimeout () : number;
            function getUrl () : string;
            function getUseDefaultHeader () : boolean;
            function getUseDefaultXhrHeader () : boolean;
            function getUsername () : string;
            function isLoading (request : variant) : boolean;
            function parseStatus (status : number, xhr : XMLHttpRequest) : variant;
            function request (options : variant) : variant;
            function setAsync (async : boolean) : void;
            function setAutoAbort (autoAbort : boolean) : void;
            function setDefaultHeaders (defaultHeaders : variant) : void;
            function setDefaultPostHeader (defaultPostHeader : string) : void;
            function setDefaultXhrHeader (defaultXhrHeader : string) : void;
            function setDisableCaching (disableCaching : boolean) : void;
            function setDisableCachingParam (disableCachingParam : string) : void;
            function setExtraParams (extraParams : variant) : void;
            function setMethod (method : string) : void;
            function setOptions (options : variant, scope : variant) : variant;
            function setPassword (password : string) : void;
            function setTimeout (timeout : number) : void;
            function setUrl (url : string) : void;
            function setUseDefaultHeader (useDefaultHeader : boolean) : void;
            function setUseDefaultXhrHeader (useDefaultXhrHeader : boolean) : void;
            function setUsername (username : string) : void;
            function upload (form : string, url : string, params : string, options : variant) : void;
            function upload (form : HTMLElement, url : string, params : string, options : variant) : void;
            function upload (form : Ext.dom.Element, url : string, params : string, options : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function beforerequest (conn : Ext.data.Connection, options : variant, eOpts : variant) : void;
            function requestcomplete (conn : Ext.data.Connection, response : variant, options : variant, eOpts : variant) : void;
            function requestexception (conn : Ext.data.Connection, response : variant, options : variant, eOpts : variant) : void;
        }

        class DirectStore extends Ext.data.Store
        {
            // Methods
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Error extends Ext.Base
        {
            // Methods
            function constructor (config : variant);
            function getField () : string;
            function getMessage () : string;
            function setField (field : string) : void;
            function setMessage (message : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Errors extends Ext.util.Collection
        {
            // Methods
            function getByField (fieldName : string) : variant[];
            function isValid () : boolean;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Field extends Ext.Base
        {
            // Methods
            function constructor (config : variant);
            function getAllowNull () : boolean;
            function getBubbleEvents () : string;
            function getConvert () : function () : void;
            function getDateFormat () : string;
            function getDecode () : variant;
            function getDefaultValue () : variant;
            function getEncode () : variant;
            function getMapping () : variant;
            function getName () : string;
            function getPersist () : boolean;
            function getSortDir () : string;
            function getSortType () : function () : void;
            function getType () : variant;
            function setAllowNull (allowNull : boolean) : void;
            function setBubbleEvents (bubbleEvents : string) : void;
            function setConvert (convert : function  () : void) : void;
            function setDateFormat (dateFormat : string) : void;
            function setDecode (decode : variant) : void;
            function setDefaultValue (defaultValue : variant) : void;
            function setEncode (encode : variant) : void;
            function setMapping (mapping : string) : void;
            function setMapping (mapping : number) : void;
            function setName (name : string) : void;
            function setPersist (persist : boolean) : void;
            function setSortDir (sortDir : string) : void;
            function setSortType (sortType : function  () : void) : void;
            function setType (type : string) : void;
            function setType (type : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class JsonP extends Ext.Base
        {
            // Properties
            static var callbackKey : string;
            static var disableCaching : boolean;
            static var disableCachingParam : string;
            static var timeout : number;
            // Methods
            static function abort (request : variant) : void;
            static function abort (request : string) : void;
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function destroy () : void;
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function initConfig (instanceConfig : variant) : variant;
            static function request (options : variant) : variant;
            static function statics () : Ext.Class;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class Model extends Ext.Base
        {
            // Properties
            var associations : Ext.util.Collection;
            var dirty : boolean;
            var editing : boolean;
            var fields : Ext.util.MixedCollection;
            var modified : variant;
            var phantom : boolean;
            var raw : variant;
            var stores : variant[];
            var validations : Ext.util.Collection;
            // Methods
            function beginEdit () : void;
            function cancelEdit () : void;
            function commit (silent : boolean) : void;
            function commit () : void;
            function copy (id : string) : Ext.data.Model;
            function endEdit (silent : boolean, modifiedFieldNames : string[]) : void;
            function erase (options : variant, scope : variant) : Ext.data.Model;
            function erase (options : function  () : void, scope : variant) : Ext.data.Model;
            function get (fieldName : string) : variant;
            function getAssociatedData () : variant;
            function getAssociations () : variant[];
            function getBelongsTo () : variant;
            function getChanges () : variant;
            function getClientIdProperty () : string;
            function getData (includeAssociated : boolean) : variant;
            function getFields () : variant;
            function getHasMany () : variant;
            function getHasOne () : variant;
            function getIdProperty () : string;
            function getIdentifier () : variant;
            function getIsErased () : void;
            function getProxy () : variant;
            function getUseCache () : boolean;
            function getValidations () : variant[];
            function isModified (fieldName : string) : boolean;
            function isValid () : boolean;
            function join (store : Ext.data.Store) : void;
            function reject (silent : boolean) : void;
            function reject () : void;
            function save (options : variant, scope : variant) : Ext.data.Model;
            function save (options : variant) : Ext.data.Model;
            function save (options : function  () : void, scope : variant) : Ext.data.Model;
            function save (options : function  () : void) : Ext.data.Model;
            function save () : Ext.data.Model;
            function set (fieldName : string, value : variant) : void;
            function set (fieldName : variant, value : variant) : void;
            function setAssociations (associations : variant[]) : void;
            function setBelongsTo (belongsTo : string) : void;
            function setBelongsTo (belongsTo : variant) : void;
            function setBelongsTo (belongsTo : string[]) : void;
            function setBelongsTo (belongsTo : variant[]) : void;
            function setClientIdProperty (clientIdProperty : string) : void;
            function setConvertedData (data : variant) : Ext.data.Model;
            function setData (rawData : variant) : Ext.data.Model;
            function setDirty () : void;
            function setFields () : variant[];
            function setHasMany (hasMany : string) : void;
            function setHasMany (hasMany : variant) : void;
            function setHasMany (hasMany : string[]) : void;
            function setHasMany (hasMany : variant[]) : void;
            function setHasOne (hasOne : string) : void;
            function setHasOne (hasOne : variant) : void;
            function setHasOne (hasOne : string[]) : void;
            function setHasOne (hasOne : variant[]) : void;
            function setIdProperty (idProperty : string) : void;
            function setIdentifier (identifier : variant) : void;
            function setIdentifier (identifier : string) : void;
            function setProxy (proxy : variant) : void;
            function setProxy (proxy : Ext.data.proxy.Proxy) : void;
            function setUseCache (useCache : boolean) : void;
            function setValidations (validations : variant[]) : void;
            function toUrl () : string;
            function unjoin (store : Ext.data.Store) : void;
            function validate () : Ext.data.Errors;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            static function load (id : number, config : variant, scope : variant) : void;
            static function load (id : number, config : variant) : void;
            static function load (id : number) : void;
            // Extra definitions
            function constructor (data : variant);
            function constructor (data : variant, id : int);
            function constructor (data : variant, id : int, raw : variant);
            function constructor (data : variant, id : int, raw : variant, convertedData : variant);
        }

        class ModelManager extends Ext.AbstractManager
        {
            // Properties
            static var associationStack : variant;
            static var defaultProxyType : variant;
            // Methods
            static function constructor (config : variant);
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function create (data : variant, name : string, id : number) : variant;
            static function create (data : variant, name : string) : variant;
            static function destroy () : void;
            static function each (fn : function  (key : string, value : number, length : number, return_ : boolean) : void, scope : variant) : void;
            static function each (fn : function  (key : string, value : number, length : number, return_ : boolean) : void) : void;
            static function get (id : string) : variant;
            static function getCount () : number;
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function getModel (id : string) : Ext.data.Model;
            static function getModel (id : variant) : Ext.data.Model;
            static function initConfig (instanceConfig : variant) : variant;
            static function isRegistered (type : string) : boolean;
            static function onAvailable (id : string, fn : function  () : void, scope : variant) : void;
            static function register (item : variant) : void;
            static function registerType (name : string, config : variant) : variant;
            static function statics () : Ext.Class;
            static function unregister (item : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class NodeInterface extends Ext.Base
        {
            // Properties
            var childNodes : variant;
            var firstChild : variant;
            var lastChild : variant;
            var nextSibling : variant;
            var parentNode : variant;
            var previousSibling : variant;
            // Methods
            function appendChild (node : Ext.data.NodeInterface) : Ext.data.NodeInterface;
            function appendChild (node : Ext.data.NodeInterface[]) : Ext.data.NodeInterface;
            function bubble (fn : function  () : void, scope : variant, args : variant[]) : void;
            function bubble (fn : function  () : void, scope : variant) : void;
            function bubble (fn : function  () : void, args : variant[]) : void;
            function bubble (fn : function  () : void) : void;
            function cascadeBy (fn : function  () : void, scope : variant, args : variant[]) : void;
            function cascadeBy (fn : function  () : void, scope : variant) : void;
            function cascadeBy (fn : function  () : void, args : variant[]) : void;
            function cascadeBy (fn : function  () : void) : void;
            function collapse (recursive : function  () : void, callback : function  () : void, scope : variant) : void;
            function collapse (recursive : function  () : void, callback : function  () : void) : void;
            function collapse (recursive : function  () : void, scope : variant) : void;
            function collapse (recursive : function  () : void) : void;
            function collapse (scope : variant) : void;
            function collapse () : void;
            function contains (node : Ext.data.NodeInterface) : boolean;
            function copy (newId : string, deep : boolean) : Ext.data.NodeInterface;
            function copy (newId : string) : Ext.data.NodeInterface;
            function copy (deep : boolean) : Ext.data.NodeInterface;
            function copy () : Ext.data.NodeInterface;
            function eachChild (fn : function  () : void, scope : variant, args : variant[]) : void;
            function eachChild (fn : function  () : void, scope : variant) : void;
            function eachChild (fn : function  () : void, args : variant[]) : void;
            function eachChild (fn : function  () : void) : void;
            function expand (recursive : function  () : void, callback : function  () : void, scope : variant) : void;
            function expand (recursive : function  () : void, callback : function  () : void) : void;
            function expand (recursive : function  () : void, scope : variant) : void;
            function expand (recursive : function  () : void) : void;
            function expand (scope : variant) : void;
            function expand () : void;
            function findChild (attribute : string, value : variant, deep : boolean) : Ext.data.NodeInterface;
            function findChild (attribute : string, value : variant) : Ext.data.NodeInterface;
            function findChildBy (fn : function  () : void, scope : variant, deep : boolean) : Ext.data.NodeInterface;
            function findChildBy (fn : function  () : void, scope : variant) : Ext.data.NodeInterface;
            function findChildBy (fn : function  () : void, deep : boolean) : Ext.data.NodeInterface;
            function findChildBy (fn : function  () : void) : Ext.data.NodeInterface;
            function getChildAt (index : number) : Ext.data.NodeInterface;
            function getDepth () : number;
            function getPath (field : string, separator : string) : string;
            function getPath (field : string) : string;
            function getPath () : string;
            function hasChildNodes () : boolean;
            function indexOf (child : Ext.data.NodeInterface) : number;
            function insertBefore (node : Ext.data.NodeInterface, refNode : Ext.data.NodeInterface) : Ext.data.NodeInterface;
            function insertChild (index : number, node : Ext.data.Model) : Ext.data.Model;
            function isAncestor (node : Ext.data.NodeInterface) : boolean;
            function isExpandable () : boolean;
            function isExpanded () : boolean;
            function isFirst () : boolean;
            function isLast () : boolean;
            function isLeaf () : boolean;
            function isLoaded () : boolean;
            function isLoading () : boolean;
            function isRoot () : boolean;
            function isVisible () : boolean;
            function remove (destroy : boolean) : Ext.data.NodeInterface;
            function remove () : Ext.data.NodeInterface;
            function removeAll (destroy : boolean) : Ext.data.NodeInterface;
            function removeAll () : Ext.data.NodeInterface;
            function removeChild (node : Ext.data.NodeInterface, destroy : boolean) : Ext.data.NodeInterface;
            function removeChild (node : Ext.data.NodeInterface) : Ext.data.NodeInterface;
            function replaceChild (newChild : Ext.data.NodeInterface, oldChild : Ext.data.NodeInterface) : Ext.data.NodeInterface;
            function sort (sortFn : function  () : void, recursive : boolean, suppressEvent : boolean) : void;
            function updateInfo (silent : variant) : boolean;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function decorate (record : Ext.data.Model) : void;
            static function getName () : string;
            // Events
            function append (this_ : Ext.data.NodeInterface, node : Ext.data.NodeInterface, index : number, eOpts : variant) : void;
            function beforeappend (this_ : Ext.data.NodeInterface, node : Ext.data.NodeInterface, eOpts : variant) : void;
            function beforecollapse (this_ : Ext.data.NodeInterface, eOpts : variant) : void;
            function beforeexpand (this_ : Ext.data.NodeInterface, eOpts : variant) : void;
            function beforeinsert (this_ : Ext.data.NodeInterface, node : Ext.data.NodeInterface, refNode : Ext.data.NodeInterface, eOpts : variant) : void;
            function beforemove (this_ : Ext.data.NodeInterface, oldParent : Ext.data.NodeInterface, newParent : Ext.data.NodeInterface, index : number, eOpts : variant) : void;
            function beforeremove (this_ : Ext.data.NodeInterface, node : Ext.data.NodeInterface, eOpts : variant) : void;
            function collapse (this_ : Ext.data.NodeInterface, eOpts : variant) : void;
            function expand (this_ : Ext.data.NodeInterface, eOpts : variant) : void;
            function insert (this_ : Ext.data.NodeInterface, node : Ext.data.NodeInterface, refNode : Ext.data.NodeInterface, eOpts : variant) : void;
            function move (this_ : Ext.data.NodeInterface, oldParent : Ext.data.NodeInterface, newParent : Ext.data.NodeInterface, index : number, eOpts : variant) : void;
            function remove (this_ : Ext.data.NodeInterface, node : Ext.data.NodeInterface, eOpts : variant) : void;
            function sort (this_ : Ext.data.NodeInterface, childNodes : Ext.data.NodeInterface[], eOpts : variant) : void;
        }

        class NodeStore extends Ext.data.Store
        {
            // Methods
            function getFolderSort () : boolean;
            function getNode () : Ext.data.Model;
            function getRecursive () : boolean;
            function getRootVisible () : boolean;
            function isVisible (node : variant) : boolean;
            function setFolderSort (folderSort : boolean) : void;
            function setNode (node : Ext.data.Model) : void;
            function setRecursive (recursive : boolean) : void;
            function setRootVisible (rootVisible : boolean) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Operation extends Ext.Base
        {
            // Methods
            function constructor (config : variant);
            function constructor ();
            function allowWrite () : boolean;
            function getAction () : string;
            function getAddRecords () : boolean;
            function getBatch () : Ext.data.Batch;
            function getCallback (records : Ext.data.Model[], operation : Ext.data.Operation) : void;
            function getError () : variant;
            function getFilters () : Ext.util.Filter[];
            function getGrouper () : Ext.util.Grouper;
            function getLimit () : number;
            function getModel () : Ext.data.Model;
            function getNode () : variant;
            function getPage () : variant;
            function getParams () : variant;
            function getRequest () : Ext.data.Request;
            function getResponse () : variant;
            function getResultSet () : Ext.data.ResultSet;
            function getScope () : variant;
            function getSorters () : Ext.util.Sorter[];
            function getStart () : number;
            function getSynchronous () : boolean;
            function getUrl () : variant;
            function getWithCredentials () : boolean;
            function hasException () : boolean;
            function isComplete () : boolean;
            function isRunning () : boolean;
            function isStarted () : boolean;
            function setAction (action : string) : void;
            function setAddRecords (addRecords : boolean) : void;
            function setBatch (batch : Ext.data.Batch) : void;
            function setCallback (callback : function  () : void, records : Ext.data.Model[], operation : Ext.data.Operation) : void;
            function setCompleted () : void;
            function setException (error : string) : void;
            function setException (error : variant) : void;
            function setException () : void;
            function setFilters (filters : Ext.util.Filter[]) : void;
            function setGrouper (grouper : Ext.util.Grouper) : void;
            function setLimit (limit : number) : void;
            function setModel (model : Ext.data.Model) : void;
            function setNode (node : variant) : void;
            function setPage (page : variant) : void;
            function setParams (params : variant) : void;
            function setRecords (records : variant[]) : void;
            function setRequest (request : Ext.data.Request) : void;
            function setResponse (response : variant) : void;
            function setResultSet (resultSet : Ext.data.ResultSet) : void;
            function setScope (scope : variant) : void;
            function setSorters (sorters : Ext.util.Sorter[]) : void;
            function setStart (start : number) : void;
            function setStarted () : void;
            function setSuccessful () : void;
            function setSynchronous (synchronous : boolean) : void;
            function setUrl (url : variant) : void;
            function setWithCredentials (withCredentials : boolean) : void;
            function wasSuccessful () : boolean;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Request extends Ext.Base
        {
            // Methods
            function constructor (config : variant);
            function constructor ();
            function getAction () : string;
            function getArgs () : variant;
            function getCallback () : variant;
            function getCallbackKey () : string;
            function getDirectFn () : variant;
            function getDisableCaching () : boolean;
            function getHeaders () : variant;
            function getJsonData () : variant;
            function getMethod () : string;
            function getOperation () : Ext.data.Operation;
            function getParams () : variant;
            function getPassword () : string;
            function getProxy () : Ext.data.proxy.Proxy;
            function getRecords () : variant;
            function getScope () : variant;
            function getTimeout () : number;
            function getUrl () : string;
            function getUseDefaultXhrHeader () : variant;
            function getUsername () : string;
            function getWithCredentials () : boolean;
            function getXmlData () : variant;
            function setAction (action : string) : void;
            function setArgs (args : variant) : void;
            function setCallback (callback : variant) : void;
            function setCallbackKey (callbackKey : string) : void;
            function setDirectFn (directFn : variant) : void;
            function setDisableCaching (disableCaching : boolean) : void;
            function setHeaders (headers : variant) : void;
            function setJsonData (jsonData : variant) : void;
            function setMethod (method : string) : void;
            function setOperation (operation : Ext.data.Operation) : void;
            function setParams (params : variant) : void;
            function setPassword (password : string) : void;
            function setProxy (proxy : Ext.data.proxy.Proxy) : void;
            function setRecords (records : variant) : void;
            function setScope (scope : variant) : void;
            function setTimeout (timeout : number) : void;
            function setUrl (url : string) : void;
            function setUseDefaultXhrHeader (useDefaultXhrHeader : variant) : void;
            function setUsername (username : string) : void;
            function setWithCredentials (withCredentials : boolean) : void;
            function setXmlData (xmlData : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class ResultSet extends Ext.Base
        {
            // Methods
            function constructor (config : variant);
            function constructor ();
            function getCount () : number;
            function getLoaded () : boolean;
            function getMessage () : string;
            function getRecords () : Ext.data.Model[];
            function getSuccess () : boolean;
            function getTotal () : number;
            function setCount (count : number) : void;
            function setLoaded (loaded : boolean) : void;
            function setMessage (message : string) : void;
            function setRecords (records : Ext.data.Model[]) : void;
            function setSuccess (success : boolean) : void;
            function setTotal (total : number) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class SortTypes extends Ext.Base
        {
            // Properties
            static var stripTagsRE : RegExp;
            // Methods
            static function asDate (value : variant) : number;
            static function asFloat (value : variant) : number;
            static function asInt (value : variant) : number;
            static function asText (value : variant) : string;
            static function asUCString (value : variant) : string;
            static function asUCText (value : variant) : string;
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function destroy () : void;
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function initConfig (instanceConfig : variant) : variant;
            static function none (value : variant) : variant;
            static function statics () : Ext.Class;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Store extends Ext.Evented
        {
            // Properties
            var currentPage : number;
            // Methods
            function add (model : Ext.data.Model[]) : Ext.data.Model[];
            function add (model : Ext.data.Model) : Ext.data.Model[];
            function addData (data : variant[]) : void;
            function applyData (data : variant[]) : void;
            function applyData (data : variant) : void;
            function average (field : string) : number;
            function clearFilter (suppressEvent : boolean) : void;
            function clearFilter () : void;
            function each (fn : function  (item : Ext.data.Model, index : number, length : number) : void, scope : variant) : void;
            function each (fn : function  (item : Ext.data.Model, index : number, length : number) : void) : void;
            function filter (filters : variant[], value : string, anyMatch : boolean, caseSensitive : boolean) : void;
            function filter (filters : variant[], value : string, anyMatch : boolean) : void;
            function filter (filters : variant[], value : string) : void;
            function filter (filters : variant[], anyMatch : boolean, caseSensitive : boolean) : void;
            function filter (filters : variant[], anyMatch : boolean) : void;
            function filter (filters : variant[]) : void;
            function filter (filters : Ext.util.Filter[], value : string, anyMatch : boolean, caseSensitive : boolean) : void;
            function filter (filters : Ext.util.Filter[], value : string, anyMatch : boolean) : void;
            function filter (filters : Ext.util.Filter[], value : string) : void;
            function filter (filters : Ext.util.Filter[], anyMatch : boolean, caseSensitive : boolean) : void;
            function filter (filters : Ext.util.Filter[], anyMatch : boolean) : void;
            function filter (filters : Ext.util.Filter[]) : void;
            function filter (filters : string, value : string, anyMatch : boolean, caseSensitive : boolean) : void;
            function filter (filters : string, value : string, anyMatch : boolean) : void;
            function filter (filters : string, value : string) : void;
            function filter (filters : string, anyMatch : boolean, caseSensitive : boolean) : void;
            function filter (filters : string, anyMatch : boolean) : void;
            function filter (filters : string) : void;
            function filterBy (fn : function  (record : Ext.data.Model, id : variant) : void, scope : variant) : void;
            function filterBy (fn : function  (record : Ext.data.Model, id : variant) : void) : void;
            function find (fieldName : string, value : string, startIndex : number, anyMatch : boolean, caseSensitive : boolean, exactMatch : boolean) : number;
            function find (fieldName : string, value : string, startIndex : number, anyMatch : boolean, caseSensitive : boolean) : number;
            function find (fieldName : string, value : string, startIndex : number, anyMatch : boolean) : number;
            function find (fieldName : string, value : string, startIndex : number) : number;
            function find (fieldName : string, value : string, anyMatch : boolean, caseSensitive : boolean, exactMatch : boolean) : number;
            function find (fieldName : string, value : string, anyMatch : boolean, caseSensitive : boolean) : number;
            function find (fieldName : string, value : string, anyMatch : boolean) : number;
            function find (fieldName : string, value : string) : number;
            function find (fieldName : string, value : RegExp, startIndex : number, anyMatch : boolean, caseSensitive : boolean, exactMatch : boolean) : number;
            function find (fieldName : string, value : RegExp, startIndex : number, anyMatch : boolean, caseSensitive : boolean) : number;
            function find (fieldName : string, value : RegExp, startIndex : number, anyMatch : boolean) : number;
            function find (fieldName : string, value : RegExp, startIndex : number) : number;
            function find (fieldName : string, value : RegExp, anyMatch : boolean, caseSensitive : boolean, exactMatch : boolean) : number;
            function find (fieldName : string, value : RegExp, anyMatch : boolean, caseSensitive : boolean) : number;
            function find (fieldName : string, value : RegExp, anyMatch : boolean) : number;
            function find (fieldName : string, value : RegExp) : number;
            function findBy (fn : function  (record : Ext.data.Model, id : variant) : void, scope : variant, startIndex : number) : number;
            function findBy (fn : function  (record : Ext.data.Model, id : variant) : void, scope : variant) : number;
            function findBy (fn : function  (record : Ext.data.Model, id : variant) : void, startIndex : number) : number;
            function findBy (fn : function  (record : Ext.data.Model, id : variant) : void) : number;
            function findExact (fieldName : string, value : variant, startIndex : number) : number;
            function findExact (fieldName : string, value : variant) : number;
            function findRecord (fieldName : string, value : string, startIndex : number, anyMatch : boolean, caseSensitive : boolean, exactMatch : boolean) : Ext.data.Model;
            function findRecord (fieldName : string, value : string, startIndex : number, anyMatch : boolean, caseSensitive : boolean) : Ext.data.Model;
            function findRecord (fieldName : string, value : string, startIndex : number, anyMatch : boolean) : Ext.data.Model;
            function findRecord (fieldName : string, value : string, startIndex : number) : Ext.data.Model;
            function findRecord (fieldName : string, value : string, anyMatch : boolean, caseSensitive : boolean, exactMatch : boolean) : Ext.data.Model;
            function findRecord (fieldName : string, value : string, anyMatch : boolean, caseSensitive : boolean) : Ext.data.Model;
            function findRecord (fieldName : string, value : string, anyMatch : boolean) : Ext.data.Model;
            function findRecord (fieldName : string, value : string) : Ext.data.Model;
            function findRecord (fieldName : string, value : RegExp, startIndex : number, anyMatch : boolean, caseSensitive : boolean, exactMatch : boolean) : Ext.data.Model;
            function findRecord (fieldName : string, value : RegExp, startIndex : number, anyMatch : boolean, caseSensitive : boolean) : Ext.data.Model;
            function findRecord (fieldName : string, value : RegExp, startIndex : number, anyMatch : boolean) : Ext.data.Model;
            function findRecord (fieldName : string, value : RegExp, startIndex : number) : Ext.data.Model;
            function findRecord (fieldName : string, value : RegExp, anyMatch : boolean, caseSensitive : boolean, exactMatch : boolean) : Ext.data.Model;
            function findRecord (fieldName : string, value : RegExp, anyMatch : boolean, caseSensitive : boolean) : Ext.data.Model;
            function findRecord (fieldName : string, value : RegExp, anyMatch : boolean) : Ext.data.Model;
            function findRecord (fieldName : string, value : RegExp) : Ext.data.Model;
            function first () : variant;
            function getAllCount () : number;
            function getAt (index : number) : variant;
            function getAutoLoad () : variant;
            function getAutoSync () : boolean;
            function getBuffered () : boolean;
            function getById (id : string) : variant;
            function getClearOnPageLoad () : boolean;
            function getCount () : number;
            function getData () : variant;
            function getDestroyRemovedRecords () : boolean;
            function getFields () : variant[];
            function getGroupDir () : string;
            function getGroupField () : string;
            function getGroupString (record : Ext.data.Model) : void;
            function getGrouper () : variant;
            function getGroups (groupName : string) : variant;
            function getGroups () : variant;
            function getModel () : string;
            function getModelDefaults () : variant;
            function getNewRecords () : Ext.data.Model[];
            function getPageSize () : number;
            function getParams () : variant;
            function getPlugins () : variant;
            function getProxy () : variant;
            function getRange (startIndex : number, endIndex : number) : Ext.data.Model[];
            function getRange (startIndex : number) : Ext.data.Model[];
            function getRange () : Ext.data.Model[];
            function getRemoteFilter () : boolean;
            function getRemoteGroup () : boolean;
            function getRemoteSort () : boolean;
            function getRemovedRecords () : Ext.data.Model[];
            function getStoreId () : string;
            function getSyncRemovedRecords () : boolean;
            function getTotalCount () : number;
            function getUpdatedRecords () : Ext.data.Model[];
            function indexOf (record : Ext.data.Model) : number;
            function indexOfId (id : string) : number;
            function insert (index : number, records : Ext.data.Model[]) : variant;
            function isAutoLoading () : boolean;
            function isFiltered () : boolean;
            function isGrouped () : boolean;
            function isLoaded () : boolean;
            function isLoading () : boolean;
            function isSorted () : boolean;
            function last () : variant;
            function load (options : variant, scope : variant) : variant;
            function load (options : variant) : variant;
            function load (options : function  () : void, scope : variant) : variant;
            function load (options : function  () : void) : variant;
            function load () : variant;
            function loadPage (page : number, options : variant, scope : variant) : void;
            function max (field : string) : variant;
            function min (field : string) : variant;
            function nextPage (options : variant) : void;
            function previousPage (options : variant) : void;
            function queryBy (fn : function  (record : Ext.data.Model, id : variant) : void, scope : variant) : Ext.util.MixedCollection;
            function queryBy (fn : function  (record : Ext.data.Model, id : variant) : void) : Ext.util.MixedCollection;
            function remove (records : Ext.data.Model) : void;
            function remove (records : Ext.data.Model[]) : void;
            function removeAll (silent : boolean) : void;
            function removeAll () : void;
            function removeAt (index : number) : void;
            function setAutoLoad (autoLoad : boolean) : void;
            function setAutoLoad (autoLoad : variant) : void;
            function setAutoSync (autoSync : boolean) : void;
            function setBuffered (buffered : boolean) : void;
            function setClearOnPageLoad (clearOnPageLoad : boolean) : void;
            function setData (data : variant[]) : void;
            function setData (data : Ext.data.Model[]) : void;
            function setDestroyRemovedRecords (destroyRemovedRecords : boolean) : void;
            function setFields (fields : variant[]) : variant;
            function setFilters (filters : variant[]) : void;
            function setGroupDir (groupDir : string) : void;
            function setGroupField (groupField : string) : void;
            function setGrouper (grouper : variant) : void;
            function setModel (model : string) : void;
            function setModelDefaults (modelDefaults : variant) : void;
            function setPageSize (pageSize : number) : void;
            function setParams (params : variant) : void;
            function setPlugins (plugins : variant) : void;
            function setPlugins (plugins : variant[]) : void;
            function setProxy (proxy : string) : void;
            function setProxy (proxy : Ext.data.proxy.Proxy) : void;
            function setProxy (proxy : variant) : void;
            function setRemoteFilter (remoteFilter : boolean) : void;
            function setRemoteGroup (remoteGroup : boolean) : void;
            function setRemoteSort (remoteSort : boolean) : void;
            function setSorters (sorters : variant[]) : void;
            function setStoreId (storeId : string) : void;
            function setSyncRemovedRecords (syncRemovedRecords : boolean) : void;
            function setTotalCount (totalCount : number) : void;
            function sort (sorters : string, defaultDirection : string, where : string) : void;
            function sort (sorters : string, defaultDirection : string) : void;
            function sort (sorters : string) : void;
            function sort (sorters : Ext.util.Sorter[], defaultDirection : string, where : string) : void;
            function sort (sorters : Ext.util.Sorter[], defaultDirection : string) : void;
            function sort (sorters : Ext.util.Sorter[]) : void;
            function sum (field : string) : number;
            function sync (options : variant) : variant;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function addrecords (store : Ext.data.Store, records : Ext.data.Model[], eOpts : variant) : void;
            function beforeload (store : Ext.data.Store, operation : Ext.data.Operation, eOpts : variant) : void;
            function beforesync (options : variant, eOpts : variant) : void;
            function clear (this_ : Ext.data.Store, eOpts : variant) : Ext.data.Store;
            function load (this_ : Ext.data.Store, records : Ext.data.Model[], successful : boolean, operation : Ext.data.Operation, eOpts : variant) : void;
            function metachange (this_ : Ext.data.Store, data : variant, eOpts : variant) : void;
            function refresh (this_ : Ext.data.Store, data : Ext.util.Collection, eOpts : variant) : void;
            function removerecords (store : Ext.data.Store, records : Ext.data.Model[], indices : number[], eOpts : variant) : void;
            function update (this_ : Ext.data.Store, record : Ext.data.Model, newIndex : number, oldIndex : number, modifiedFieldNames : variant[], modifiedValues : variant, eOpts : variant) : void;
            function updaterecord (this_ : Ext.data.Store, record : Ext.data.Model, newIndex : number, oldIndex : number, modifiedFieldNames : variant[], modifiedValues : variant, eOpts : variant) : void;
            function write (store : Ext.data.Store, operation : Ext.data.Operation, eOpts : variant) : void;
        }

        class StoreManager extends Ext.util.Collection
        {
            // Properties
            static var currentSortFn : variant;
            static var dirtyFilterFn : boolean;
            static var dirtySortFn : boolean;
            static var filtered : boolean;
            static var sorted : boolean;
            // Methods
            static function constructor (keyFn : variant, config : variant);
            static function add (key : string, item : variant) : variant;
            static function addAll (addItems : variant) : void;
            static function addAll (addItems : variant[]) : void;
            static function addFilter (filter : Ext.util.Sorter) : void;
            static function addFilter (filter : function  () : void) : void;
            static function addFilter (filter : variant) : void;
            static function addFilters (filters : variant) : variant;
            static function addSorter (sorter : Ext.util.Sorter, defaultDirection : string) : void;
            static function addSorter (sorter : string, defaultDirection : string) : void;
            static function addSorter (sorter : function  () : void, defaultDirection : string) : void;
            static function addSorter (sorter : variant, defaultDirection : string) : void;
            static function addSorters (sorters : variant[], defaultDirection : string) : void;
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function clear () : void;
            static function clone () : Ext.util.MixedCollection;
            static function contains (item : variant) : boolean;
            static function containsKey (key : string) : boolean;
            static function destroy () : void;
            static function each (fn : function  (item : variant, index : number, length : number) : void, scope : variant) : void;
            static function eachKey (fn : function  () : void, scope : variant) : void;
            static function filter (property : variant, value : variant, anyMatch : variant, caseSensitive : variant) : variant[];
            static function filterBy (fn : function  (o : variant, k : string) : void, scope : variant) : Ext.util.MixedCollection;
            static function findBy (fn : function  () : void, scope : variant) : variant;
            static function findIndexBy (fn : function  (o : variant, k : string) : void, scope : variant, start : number) : number;
            static function findIndexBy (fn : function  (o : variant, k : string) : void, scope : variant) : number;
            static function findInsertionIndex (items : variant[], item : variant) : number;
            static function first () : variant;
            static function get (key : string) : variant;
            static function get (key : number) : variant;
            static function getAt (index : number) : variant;
            static function getAutoFilter () : boolean;
            static function getAutoSort () : boolean;
            static function getByKey (key : string) : variant;
            static function getByKey (key : number) : variant;
            static function getCount () : number;
            static function getDefaultSortDirection () : string;
            static function getFilterFn () : function () : void;
            static function getFilterRoot () : string;
            static function getFilters () : variant[];
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function getKey (o : variant) : variant;
            static function getRange (start : number, end : number) : variant[];
            static function getRange (start : number) : variant[];
            static function getRange () : variant[];
            static function getSortFn () : function () : void;
            static function getSortRoot () : string;
            static function getSorters () : variant[];
            static function indexOf (item : variant) : number;
            static function indexOfKey (key : string) : number;
            static function initConfig (instanceConfig : variant) : variant;
            static function insert (index : number, key : string, item : variant) : variant;
            static function insertFilter (index : number, filter : Ext.util.Sorter) : variant;
            static function insertFilter (index : number, filter : function  () : void) : variant;
            static function insertFilter (index : number, filter : variant) : variant;
            static function insertFilters (index : number, filters : variant[]) : variant[];
            static function insertSorter (index : number, sorter : Ext.util.Sorter, defaultDirection : string) : void;
            static function insertSorter (index : number, sorter : string, defaultDirection : string) : void;
            static function insertSorter (index : number, sorter : function  () : void, defaultDirection : string) : void;
            static function insertSorter (index : number, sorter : variant, defaultDirection : string) : void;
            static function insertSorters () : Ext.util.Collection;
            static function last () : variant;
            static function lookup (store : string) : Ext.data.Store;
            static function lookup (store : variant) : Ext.data.Store;
            static function register (stores : Ext.data.Store) : void;
            static function remove (item : variant) : variant;
            static function removeAll (items : variant[]) : Ext.util.MixedCollection;
            static function removeAt (index : number) : variant;
            static function removeAtKey (key : string) : variant;
            static function removeFilters (filters : variant) : Ext.util.Collection;
            static function removeSorter (sorter : Ext.util.Sorter) : void;
            static function removeSorter (sorter : string) : void;
            static function removeSorter (sorter : function  () : void) : void;
            static function removeSorter (sorter : variant) : void;
            static function removeSorters (sorters : variant) : Ext.util.Collection;
            static function replace (oldKey : string, item : variant) : variant;
            static function setAutoFilter (autoFilter : boolean) : void;
            static function setAutoSort (autoSort : boolean) : void;
            static function setDefaultSortDirection (defaultSortDirection : string) : void;
            static function setFilterRoot (filterRoot : string) : void;
            static function setFilters (filters : variant[]) : void;
            static function setSortRoot (sortRoot : string) : void;
            static function setSorters (sorters : variant[]) : void;
            static function sort (sorters : variant, defaultDirection : variant) : variant[];
            static function statics () : Ext.Class;
            static function unregister (stores : string) : void;
            static function unregister (stores : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class TreeStore extends Ext.data.NodeStore
        {
            // Methods
            function getClearOnLoad () : boolean;
            function getDefaultRootId () : string;
            function getDefaultRootProperty () : string;
            function getNodeById (id : variant) : Ext.data.NodeInterface;
            function getNodeParam () : string;
            function getRoot () : variant;
            function setClearOnLoad (clearOnLoad : boolean) : void;
            function setDefaultRootId (defaultRootId : string) : void;
            function setDefaultRootProperty (defaultRootProperty : string) : void;
            function setNodeParam (nodeParam : string) : void;
            function setRoot (root : Ext.data.Model) : void;
            function setRoot (root : Ext.data.NodeInterface) : void;
            function setRoot (root : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function rootchange (store : Ext.data.TreeStore, newRoot : Ext.data.Model, oldRoot : Ext.data.Model, eOpts : variant) : void;
        }

        class Types extends Ext.Base
        {
            // Properties
            static var AUTO : variant;
            static var BOOL : variant;
            static var BOOLEAN : variant;
            static var DATE : variant;
            static var FLOAT : variant;
            static var INT : variant;
            static var INTEGER : variant;
            static var NUMBER : variant;
            static var STRING : variant;
            static var stripRe : RegExp;
            // Methods
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function destroy () : void;
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function initConfig (instanceConfig : variant) : variant;
            static function statics () : Ext.Class;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Validations extends Ext.Base
        {
            // Properties
            static var emailMessage : string;
            static var emailRe : RegExp;
            static var exclusionMessage : string;
            static var formatMessage : string;
            static var inclusionMessage : string;
            static var lengthMessage : string;
            static var presenceMessage : string;
            // Methods
            static function constructor (config : variant);
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function destroy () : void;
            static function email (config : variant, email : string) : boolean;
            static function exclusion (config : variant, value : string) : boolean;
            static function format (config : variant, value : string) : boolean;
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function getMessage (type : string) : variant;
            static function inclusion (config : variant, value : string) : boolean;
            static function initConfig (instanceConfig : variant) : variant;
            static function length (config : variant, value : string) : boolean;
            static function presence (config : variant, value : variant) : boolean;
            static function statics () : Ext.Class;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class association
        {

            class Association extends Ext.Base
            {
                // Methods
                function constructor (config : variant);
                function constructor ();
                function getAssociatedModel () : string;
                function getAssociatedName () : string;
                function getAssociationKey () : string;
                function getName () : string;
                function getOwnerModel () : variant;
                function getOwnerName () : string;
                function getPrimaryKey () : string;
                function getReader () : Ext.data.reader.Reader;
                function getType () : string;
                function setAssociatedModel (associatedModel : string) : void;
                function setAssociatedName (associatedName : string) : void;
                function setAssociationKey (associationKey : string) : void;
                function setName (name : variant) : void;
                function setOwnerModel (ownerModel : Ext.data.Model) : void;
                function setOwnerModel (ownerModel : string) : void;
                function setOwnerName (ownerName : string) : void;
                function setPrimaryKey (primaryKey : string) : void;
                function setReader (reader : Ext.data.reader.Reader) : void;
                function setType (type : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class BelongsTo extends Ext.data.association.Association
            {
                // Methods
                function getForeignKey () : string;
                function getGetterName () : string;
                function getInstanceName () : variant;
                function getSetterName () : string;
                function setForeignKey (foreignKey : string) : void;
                function setGetterName (getterName : string) : void;
                function setInstanceName (instanceName : variant) : void;
                function setSetterName (setterName : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class HasMany extends Ext.data.association.Association
            {
                // Methods
                function getAutoLoad () : boolean;
                function getAutoSync () : boolean;
                function getFilterProperty () : string;
                function getForeignKey () : string;
                function getStore () : variant;
                function getStoreName () : string;
                function setAutoLoad (autoLoad : boolean) : void;
                function setAutoSync (autoSync : boolean) : void;
                function setFilterProperty (filterProperty : string) : void;
                function setForeignKey (foreignKey : string) : void;
                function setStore (store : variant) : void;
                function setStoreName (storeName : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class HasOne extends Ext.data.association.Association
            {
                // Methods
                function getForeignKey () : string;
                function getGetterName () : string;
                function getInstanceName () : variant;
                function getSetterName () : string;
                function setForeignKey (foreignKey : string) : void;
                function setGetterName (getterName : string) : void;
                function setInstanceName (instanceName : variant) : void;
                function setSetterName (setterName : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }

        class identifier
        {

            class Sequential extends Ext.data.identifier.Simple
            {
                // Methods
                function getSeed () : number;
                function setSeed (seed : number) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Simple extends Ext.Base
            {
                // Methods
                function constructor (config : variant);
                function getPrefix () : string;
                function setPrefix (prefix : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Uuid extends Ext.data.identifier.Simple
            {
                // Properties
                var salt : variant;
                var timestamp : variant;
                // Methods
                function getId () : variant;
                function getVersion () : number;
                function reconfigure (config : variant) : void;
                function setId (id : variant) : void;
                function setVersion (version : number) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }

        class plugin
        {

            class Buffered extends Ext.Evented
            {
                // Methods
                function getBufferedCollection () : variant;
                function getLeadingBufferZone () : number;
                function getPageFromRecordIndex (index : number) : number;
                function getPurgePageCount () : number;
                function getStore () : variant;
                function getTrailingBufferZone () : number;
                function getViewSize () : number;
                function prefetch (options : variant) : void;
                function prefetch () : void;
                function prefetchPage (page : number, options : variant) : void;
                function prefetchPage (page : number) : void;
                function setBufferedCollection (bufferedCollection : variant) : void;
                function setLeadingBufferZone (leadingBufferZone : number) : void;
                function setPurgePageCount (purgePageCount : number) : void;
                function setStore (store : variant) : void;
                function setTrailingBufferZone (trailingBufferZone : number) : void;
                function setViewSize (viewSize : number) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }

        class proxy
        {

            class Ajax extends Ext.data.proxy.Server
            {
                // Properties
                var actionMethods : variant;
                // Methods
                function getHeaders () : variant;
                function getMethod (request : Ext.data.Request) : string;
                function getPassword () : string;
                function getUseDefaultXhrHeader () : boolean;
                function getUsername () : string;
                function getWithCredentials () : boolean;
                function setHeaders (headers : variant) : void;
                function setPassword (password : string) : void;
                function setUseDefaultXhrHeader (useDefaultXhrHeader : boolean) : void;
                function setUsername (username : string) : void;
                function setWithCredentials (withCredentials : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Client extends Ext.data.proxy.Proxy
            {
                // Methods
                function clear () : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Direct extends Ext.data.proxy.Server
            {
                // Methods
                function getDirectFn () : variant;
                function getParamOrder () : variant;
                function getParamsAsHash () : boolean;
                function setDirectFn (directFn : function  () : void) : void;
                function setDirectFn (directFn : string) : void;
                function setParamOrder (paramOrder : string) : void;
                function setParamOrder (paramOrder : string[]) : void;
                function setParamsAsHash (paramsAsHash : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class JsonP extends Ext.data.proxy.Server
            {
                // Methods
                function abort () : void;
                function getAutoAppendParams () : boolean;
                function getCallbackKey () : string;
                function getDefaultWriterType () : string;
                function getRecordParam () : string;
                function setAutoAppendParams (autoAppendParams : boolean) : void;
                function setCallbackKey (callbackKey : string) : void;
                function setDefaultWriterType (defaultWriterType : string) : void;
                function setRecordParam (recordParam : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class LocalStorage extends Ext.data.proxy.WebStorage
            {
                // Methods
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Memory extends Ext.data.proxy.Client
            {
                // Methods
                function getData () : variant;
                function setData (data : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Proxy extends Ext.Evented
            {
                // Methods
                function batch (options : variant) : Ext.data.Batch;
                function create (operation : Ext.data.Operation, callback : function  () : void, scope : variant) : void;
                function destroy (operation : Ext.data.Operation, callback : function  () : void, scope : variant) : void;
                function getBatchActions () : boolean;
                function getBatchOrder () : string;
                function getModel () : variant;
                function getReader () : variant;
                function getWriter () : variant;
                function read (operation : Ext.data.Operation, callback : function  () : void, scope : variant) : void;
                function setBatchActions (batchActions : boolean) : void;
                function setBatchOrder (batchOrder : string) : void;
                function setModel (model : string) : void;
                function setModel (model : Ext.data.Model) : void;
                function setReader (reader : variant) : void;
                function setReader (reader : string) : void;
                function setReader (reader : Ext.data.reader.Reader) : void;
                function setWriter (writer : variant) : void;
                function setWriter (writer : string) : void;
                function setWriter (writer : Ext.data.writer.Writer) : void;
                function update (operation : Ext.data.Operation, callback : function  () : void, scope : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
                // Events
                function metachange (this_ : Ext.data.proxy.Proxy, data : variant, eOpts : variant) : void;
            }

            class Rest extends Ext.data.proxy.Ajax
            {
                // Methods
                function getActionMethods () : variant;
                function getAppendId () : boolean;
                function getFormat () : string;
                function setActionMethods (actionMethods : variant) : void;
                function setAppendId (appendId : boolean) : void;
                function setFormat (format : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Server extends Ext.data.proxy.Proxy
            {
                // Methods
                function afterRequest (request : Ext.data.Request, success : boolean) : void;
                function buildRequest (operation : Ext.data.Operation) : Ext.data.Request;
                function buildUrl (request : Ext.data.Request) : string;
                function doRequest (operation : Ext.data.Operation, callback : function  () : void, scope : variant) : void;
                function encodeFilters (filters : Ext.util.Filter[]) : string;
                function encodeSorters (sorters : Ext.util.Sorter[]) : string;
                function getApi () : variant;
                function getCacheString () : string;
                function getDirectionParam () : string;
                function getEnablePagingParams () : boolean;
                function getExtraParams () : variant;
                function getFilterParam () : string;
                function getGroupParam () : string;
                function getLimitParam () : string;
                function getNoCache () : boolean;
                function getPageParam () : string;
                function getSimpleSortMode () : boolean;
                function getSortParam () : string;
                function getStartParam () : string;
                function getTimeout () : number;
                function processResponse (success : boolean, operation : Ext.data.Operation, request : Ext.data.Request, response : variant, callback : function  () : void, scope : variant) : void;
                function setApi (api : variant) : void;
                function setCacheString (cacheString : string) : void;
                function setDirectionParam (directionParam : string) : void;
                function setEnablePagingParams (enablePagingParams : boolean) : void;
                function setExtraParam (name : string, value : variant) : void;
                function setExtraParams (extraParams : variant) : void;
                function setFilterParam (filterParam : string) : void;
                function setGroupParam (groupParam : string) : void;
                function setLimitParam (limitParam : string) : void;
                function setNoCache (noCache : boolean) : void;
                function setPageParam (pageParam : string) : void;
                function setSimpleSortMode (simpleSortMode : boolean) : void;
                function setSortParam (sortParam : string) : void;
                function setStartParam (startParam : string) : void;
                function setTimeout (timeout : number) : void;
                function setUrl (url : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
                // Events
                function exception (this_ : Ext.data.proxy.Proxy, response : variant, operation : Ext.data.Operation, eOpts : variant) : void;
            }

            class SessionStorage extends Ext.data.proxy.WebStorage
            {
                // Methods
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Sql extends Ext.data.proxy.Client
            {
                // Methods
                function getColumns () : string;
                function getDatabase () : string;
                function getDefaultDateFormat () : string;
                function getRecordData (record : variant) : variant;
                function getTable () : string;
                function getTableExists () : boolean;
                function getUniqueIdStrategy () : boolean;
                function setColumns (columns : string) : void;
                function setDatabase (database : string) : void;
                function setDefaultDateFormat (defaultDateFormat : string) : void;
                function setTable (table : string) : void;
                function setTableExists (tableExists : boolean) : void;
                function setUniqueIdStrategy (uniqueIdStrategy : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class WebStorage extends Ext.data.proxy.Client
            {
                // Properties
                var cache : variant;
                // Methods
                function getDefaultDateFormat () : string;
                function getEnablePagingParams () : boolean;
                function setDefaultDateFormat (defaultDateFormat : string) : void;
                function setEnablePagingParams (enablePagingParams : boolean) : void;
                function setRecord (record : Ext.data.Model, id : string) : void;
                function setRecord (record : Ext.data.Model) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }

        class reader
        {

            class Array extends Ext.data.reader.Json
            {
                // Methods
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Json extends Ext.data.reader.Reader
            {
                // Methods
                function getRecord () : string;
                function getUseSimpleAccessors () : boolean;
                function setRecord (record : string) : void;
                function setUseSimpleAccessors (useSimpleAccessors : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
                // Events
                function exception (reader : Ext.data.reader.Xml, response : XMLHttpRequest, error : string, eOpts : variant) : void;
            }

            class Reader extends Ext.Base
            {
                // Properties
                var metaData : variant;
                var rawData : variant;
                // Methods
                function getClientIdProperty () : string;
                function getIdProperty () : string;
                function getImplicitIncludes () : boolean;
                function getMessageProperty () : string;
                function getModel () : variant;
                function getResponseData (response : variant) : variant;
                function getRootProperty () : string;
                function getSuccessProperty () : string;
                function getTotalProperty () : string;
                function read (response : variant) : Ext.data.ResultSet;
                function readRecords (data : variant) : Ext.data.ResultSet;
                function setClientIdProperty (clientIdProperty : string) : void;
                function setIdProperty (idProperty : string) : void;
                function setImplicitIncludes (implicitIncludes : boolean) : void;
                function setMessageProperty (messageProperty : string) : void;
                function setModel (model : variant) : void;
                function setRootProperty (rootProperty : string) : void;
                function setSuccessProperty (successProperty : string) : void;
                function setTotalProperty (totalProperty : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Xml extends Ext.data.reader.Reader
            {
                // Methods
                function getRecord () : string;
                function setRecord (record : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
                // Events
                function exception (reader : Ext.data.reader.Xml, response : XMLHttpRequest, error : string, eOpts : variant) : void;
            }
        }

        class writer
        {

            class Json extends Ext.data.writer.Writer
            {
                // Methods
                function getAllowSingle () : boolean;
                function getEncode () : boolean;
                function getEncodeRequest () : boolean;
                function getRootProperty () : string;
                function setAllowSingle (allowSingle : boolean) : void;
                function setEncode (encode : boolean) : void;
                function setEncodeRequest (encodeRequest : boolean) : void;
                function setRootProperty (rootProperty : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Writer extends Ext.Base
            {
                // Methods
                function constructor (config : variant);
                function constructor ();
                function getNameProperty () : string;
                function getRecordData (record : variant) : variant;
                function getWriteAllFields () : boolean;
                function setNameProperty (nameProperty : string) : void;
                function setWriteAllFields (writeAllFields : boolean) : void;
                function write (request : Ext.data.Request) : Ext.data.Request;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Xml extends Ext.data.writer.Writer
            {
                // Methods
                function getDefaultDocumentRoot () : string;
                function getDocumentRoot () : string;
                function getHeader () : string;
                function getRecord () : string;
                function setDefaultDocumentRoot (defaultDocumentRoot : string) : void;
                function setDocumentRoot (documentRoot : string) : void;
                function setHeader (header : string) : void;
                function setRecord (record : string) : void;
                function writeRecords (request : variant, data : variant[]) : variant;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }
    }

    class dataview
    {

        class DataView extends Ext.Container
        {
            // Methods
            function constructor (config : variant);
            function collectData () : void;
            function findItemByChild () : void;
            function findTargetByEvent () : void;
            function getDeferEmptyText () : boolean;
            function getEmptyText () : string;
            function getInline () : variant;
            function getItemAt (index : number) : variant;
            function getItemCls () : string;
            function getItemConfig () : variant;
            function getItemIndex (item : number) : number;
            function getItemTpl () : variant;
            function getLoadingText () : variant;
            function getMaxItemCache () : number;
            function getNode () : void;
            function getNodes () : void;
            function getPressedCls () : string;
            function getPressedDelay () : number;
            function getRecords () : void;
            function getScrollToTopOnRefresh () : boolean;
            function getSelectedCls () : string;
            function getSelectedNodes () : void;
            function getSelectedRecords () : void;
            function getStore () : variant;
            function getTriggerCtEvent () : string;
            function getTriggerEvent () : string;
            function getUseComponents () : boolean;
            function getViewItems () : variant;
            function handleException () : void;
            override function initialize () : void;
            function prepareData (data : variant, index : number, record : Ext.data.Model) : variant;
            function prepareData (data : variant[], index : number, record : Ext.data.Model) : variant;
            function refresh () : void;
            function refreshNode () : void;
            function setDeferEmptyText (deferEmptyText : boolean) : void;
            function setEmptyText (emptyText : string) : void;
            function setInline (inline : boolean) : void;
            function setInline (inline : variant) : void;
            function setItemCls (itemCls : string) : void;
            function setItemConfig (itemConfig : variant) : void;
            function setItemTpl (itemTpl : string) : void;
            function setItemTpl (itemTpl : string[]) : void;
            function setItemTpl (itemTpl : Ext.XTemplate) : void;
            function setLoadingText (loadingText : string) : void;
            function setLoadingText (loadingText : boolean) : void;
            function setMaxItemCache (maxItemCache : number) : void;
            function setPressedCls (pressedCls : string) : void;
            function setPressedDelay (pressedDelay : number) : void;
            function setScrollToTopOnRefresh (scrollToTopOnRefresh : boolean) : void;
            function setScrollable (scrollable : boolean) : void;
            function setSelectedCls (selectedCls : string) : void;
            function setStore (store : Ext.data.Store) : void;
            function setStore (store : variant) : void;
            function setTriggerCtEvent (triggerCtEvent : string) : void;
            function setTriggerEvent (triggerEvent : string) : void;
            function setUseComponents (useComponents : boolean) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function containertap (eOpts : variant) : void;
            function deselect (this_ : Ext.dataview.DataView, record : Ext.data.Model, supressed : boolean, eOpts : variant) : void;
            function itemdoubletap (this_ : Ext.dataview.DataView, index : number, target : Ext.dom.Element, record : Ext.data.Model, e : Ext.event.Event, eOpts : variant) : void;
            function itemdoubletap (this_ : Ext.dataview.DataView, index : number, target : Ext.dataview.component.DataItem, record : Ext.data.Model, e : Ext.event.Event, eOpts : variant) : void;
            function itemsingletap (this_ : Ext.dataview.DataView, index : number, target : Ext.dom.Element, record : Ext.data.Model, e : Ext.event.Event, eOpts : variant) : void;
            function itemsingletap (this_ : Ext.dataview.DataView, index : number, target : Ext.dataview.component.DataItem, record : Ext.data.Model, e : Ext.event.Event, eOpts : variant) : void;
            function itemswipe (this_ : Ext.dataview.DataView, index : number, target : Ext.dom.Element, record : Ext.data.Model, e : Ext.event.Event, eOpts : variant) : void;
            function itemswipe (this_ : Ext.dataview.DataView, index : number, target : Ext.dataview.component.DataItem, record : Ext.data.Model, e : Ext.event.Event, eOpts : variant) : void;
            function itemtap (this_ : Ext.dataview.DataView, index : number, target : Ext.dom.Element, record : Ext.data.Model, e : Ext.event.Event, eOpts : variant) : void;
            function itemtap (this_ : Ext.dataview.DataView, index : number, target : Ext.dataview.component.DataItem, record : Ext.data.Model, e : Ext.event.Event, eOpts : variant) : void;
            function itemtaphold (this_ : Ext.dataview.DataView, index : number, target : Ext.dom.Element, record : Ext.data.Model, e : Ext.event.Event, eOpts : variant) : void;
            function itemtaphold (this_ : Ext.dataview.DataView, index : number, target : Ext.dataview.component.DataItem, record : Ext.data.Model, e : Ext.event.Event, eOpts : variant) : void;
            function itemtouchend (this_ : Ext.dataview.DataView, index : number, target : Ext.dom.Element, record : Ext.data.Model, e : Ext.event.Event, eOpts : variant) : void;
            function itemtouchend (this_ : Ext.dataview.DataView, index : number, target : Ext.dataview.component.DataItem, record : Ext.data.Model, e : Ext.event.Event, eOpts : variant) : void;
            function itemtouchmove (this_ : Ext.dataview.DataView, index : number, target : Ext.dom.Element, record : Ext.data.Model, e : Ext.event.Event, eOpts : variant) : void;
            function itemtouchmove (this_ : Ext.dataview.DataView, index : number, target : Ext.dataview.component.DataItem, record : Ext.data.Model, e : Ext.event.Event, eOpts : variant) : void;
            function itemtouchstart (this_ : Ext.dataview.DataView, index : number, target : Ext.dom.Element, record : Ext.data.Model, e : Ext.event.Event, eOpts : variant) : void;
            function itemtouchstart (this_ : Ext.dataview.DataView, index : number, target : Ext.dataview.component.DataItem, record : Ext.data.Model, e : Ext.event.Event, eOpts : variant) : void;
            function refresh (this_ : Ext.dataview.DataView, eOpts : variant) : void;
            function select (this_ : Ext.dataview.DataView, record : Ext.data.Model, eOpts : variant) : void;
        }

        class IndexBar extends Ext.Component
        {
            // Methods
            function getDirection () : string;
            function getLetters () : variant[];
            function getListPrefix () : string;
            function isHorizontal () : void;
            function isVertical () : void;
            function refresh () : void;
            function setDirection (direction : string) : void;
            function setLetters (letters : variant[]) : void;
            function setListPrefix (listPrefix : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function index (this_ : Ext.dataview.IndexBar, html : string, target : Ext.dom.Element, eOpts : variant) : void;
        }

        class List extends Ext.dataview.DataView
        {
            // Properties
            var bufferSize : number;
            // Methods
            function getDisclosureProperty () : string;
            function getGrouped () : boolean;
            function getIcon () : variant;
            function getIndexBar () : variant;
            function getInfinite () : boolean;
            function getItemHeight () : number;
            function getMinimumBufferDistance () : number;
            function getOnItemDisclosure () : variant;
            function getPinHeaders () : boolean;
            function getPreventSelectionOnDisclose () : boolean;
            function getRefreshHeightOnUpdate () : boolean;
            function getScrollDockedItems () : variant[];
            function getStriped () : boolean;
            function getUseHeaders () : boolean;
            function getUseSimpleItems () : boolean;
            function getVariableHeights () : boolean;
            function setDisclosureProperty (disclosureProperty : string) : void;
            function setGrouped (grouped : boolean) : void;
            function setIcon (icon : variant) : void;
            function setIndexBar (indexBar : boolean) : void;
            function setIndexBar (indexBar : variant) : void;
            function setInfinite (infinite : boolean) : void;
            function setItemHeight (itemHeight : number) : void;
            function setMinimumBufferDistance (minimumBufferDistance : number) : void;
            function setOnItemDisclosure (onItemDisclosure : boolean) : void;
            function setOnItemDisclosure (onItemDisclosure : function  () : void) : void;
            function setOnItemDisclosure (onItemDisclosure : variant) : void;
            function setPinHeaders (pinHeaders : boolean) : void;
            function setPreventSelectionOnDisclose (preventSelectionOnDisclose : boolean) : void;
            function setRefreshHeightOnUpdate (refreshHeightOnUpdate : boolean) : void;
            function setStriped (striped : boolean) : void;
            function setUseHeaders (useHeaders : boolean) : void;
            function setUseSimpleItems (useSimpleItems : boolean) : void;
            function setVariableHeights (variableHeights : boolean) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function disclose (this_ : Ext.dataview.List, record : Ext.data.Model, target : HTMLElement, index : number, e : Ext.event.Event, eOpts : variant) : void;
        }


        class NestedList extends Ext.Container
        {
            // Methods
            function getAllowDeselect () : boolean;
            function getBackButton () : variant;
            function getBackText () : string;
            function getClearSelectionOnListChange () : boolean;
            function getDetailCard () : Ext.Component;
            function getDetailContainer () : Ext.Container;
            function getDisplayField () : string;
            function getEmptyText () : string;
            function getItemHeight () : number;
            function getItemTextTpl (node : Ext.data.Model) : string;
            function getListConfig () : variant;
            function getLoadingText () : string;
            function getOnItemDisclosure () : variant;
            function getStore () : variant;
            function getSubList () : void;
            function getTitle () : string;
            function getTitleTextTpl (node : Ext.data.Model) : string;
            function getToolbar () : variant;
            function getUpdateTitleText () : boolean;
            function getUseSimpleItems () : boolean;
            function getUseTitleAsBackText () : boolean;
            function getVariableHeights () : boolean;
            function goToLeaf (node : Ext.data.NodeInterface) : void;
            function goToNode (node : Ext.data.NodeInterface) : void;
            function onBackTap () : void;
            function onItemTap (list : Ext.dataview.List, index : number, target : Ext.dom.Element, record : Ext.data.Model, e : Ext.event.Event) : void;
            function setAllowDeselect (allowDeselect : boolean) : void;
            function setBackButton (backButton : variant) : void;
            function setBackText (backText : string) : void;
            function setClearSelectionOnListChange (clearSelectionOnListChange : boolean) : void;
            function setDetailCard (detailCard : Ext.Component) : void;
            function setDetailContainer (detailContainer : Ext.Container) : void;
            function setDisplayField (displayField : string) : void;
            function setEmptyText (emptyText : string) : void;
            function setItemHeight (itemHeight : number) : void;
            function setListConfig (listConfig : variant) : void;
            function setLoadingText (loadingText : string) : void;
            function setOnItemDisclosure (onItemDisclosure : boolean) : void;
            function setOnItemDisclosure (onItemDisclosure : function  () : void) : void;
            function setStore (store : Ext.data.TreeStore) : void;
            function setStore (store : string) : void;
            function setTitle (title : string) : void;
            function setToolbar (toolbar : Ext.Toolbar) : void;
            function setToolbar (toolbar : variant) : void;
            function setToolbar (toolbar : boolean) : void;
            function setUpdateTitleText (updateTitleText : boolean) : void;
            function setUseSimpleItems (useSimpleItems : boolean) : void;
            function setUseTitleAsBackText (useTitleAsBackText : boolean) : void;
            function setVariableHeights (variableHeights : boolean) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function back (this_ : Ext.dataview.NestedList, node : HTMLElement, lastActiveList : Ext.dataview.List, detailCardActive : boolean, eOpts : variant) : void;
            function beforeload (this_ : Ext.dataview.NestedList, store : Ext.data.Store, operation : Ext.data.Operation, eOpts : variant) : void;
            function containertap (this_ : Ext.dataview.NestedList, list : Ext.dataview.List, e : Ext.event.Event, eOpts : variant) : void;
            function itemdoubletap (this_ : Ext.dataview.NestedList, list : Ext.dataview.List, index : number, target : Ext.dom.Element, record : Ext.data.Model, e : Ext.event.Event, eOpts : variant) : void;
            function itemtap (this_ : Ext.dataview.NestedList, list : Ext.dataview.List, index : number, target : Ext.dom.Element, record : Ext.data.Model, e : Ext.event.Event, eOpts : variant) : void;
            function leafitemtap (this_ : Ext.dataview.NestedList, list : Ext.dataview.List, index : number, target : Ext.dom.Element, record : Ext.data.Model, e : Ext.event.Event, eOpts : variant) : void;
            function listchange (this_ : Ext.dataview.NestedList, listitem : variant, eOpts : variant) : void;
            function load (this_ : Ext.dataview.NestedList, store : Ext.data.Store, records : Ext.util.Grouper[], successful : boolean, operation : Ext.data.Operation, eOpts : variant) : void;
            function selectionchange (this_ : Ext.dataview.NestedList, list : Ext.dataview.List, selections : variant[], eOpts : variant) : void;
        }

        class component
        {


            class DataItem extends Ext.Container
            {
                // Methods
                function getDataMap () : variant;
                function getItemCls () : string;
                function setDataMap (dataMap : variant) : void;
                function setItemCls (itemCls : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class ListItem extends Ext.dataview.component.DataItem
            {
                // Methods
                function getBody () : variant;
                function getDisclosure () : variant;
                function getHeader () : variant;
                function setBody (body : variant) : void;
                function setDisclosure (disclosure : variant) : void;
                function setHeader (header : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class SimpleListItem extends Ext.Component
            {
                // Methods
                function getDisclosure () : variant;
                function getHeader () : variant;
                function setDisclosure (disclosure : variant) : void;
                function setHeader (header : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }

        class element
        {

            class Container extends Ext.Component
            {
                // Methods
                override function destroy () : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
                // Events
                function itemdoubletap (this_ : Ext.dataview.element.Container, item : Ext.dom.Element, index : number, e : Ext.event.Event, eOpts : variant) : void;
                function itemsingletap (this_ : Ext.dataview.element.Container, item : Ext.dom.Element, index : number, e : Ext.event.Event, eOpts : variant) : void;
                function itemswipe (this_ : Ext.dataview.element.Container, item : Ext.dom.Element, index : number, e : Ext.event.Event, eOpts : variant) : void;
                function itemtap (this_ : Ext.dataview.element.Container, item : Ext.dom.Element, index : number, e : Ext.event.Event, eOpts : variant) : void;
                function itemtaphold (this_ : Ext.dataview.element.Container, item : Ext.dom.Element, index : number, e : Ext.event.Event, eOpts : variant) : void;
                function itemtouchend (this_ : Ext.dataview.element.Container, item : Ext.dom.Element, index : number, e : Ext.event.Event, eOpts : variant) : void;
                function itemtouchmove (this_ : Ext.dataview.element.Container, item : Ext.dom.Element, index : number, e : Ext.event.Event, eOpts : variant) : void;
                function itemtouchstart (this_ : Ext.dataview.element.Container, item : Ext.dom.Element, index : number, e : Ext.event.Event, eOpts : variant) : void;
            }

        }
    }

    class device
    {

        class Accelerometer extends Ext.Base
        {
            // Properties
            // Methods
            static function constructor ();
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function destroy () : void;
            static function getFrequency () : number;
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function initConfig (instanceConfig : variant) : variant;
            static function setFrequency (frequency : number) : void;
            static function statics () : Ext.Class;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Browser extends Ext.Base
        {
            // Properties
            // Methods
            static function constructor ();
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function close () : void;
            static function destroy () : void;
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function initConfig (instanceConfig : variant) : variant;
            static function open (options : variant) : void;
            static function statics () : Ext.Class;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Camera extends Ext.Base
        {
            // Properties
            // Methods
            static function constructor ();
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function capture (options : variant, scope : variant, destination : string, encoding : string, width : number, height : number) : void;
            static function destroy () : void;
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function initConfig (instanceConfig : variant) : variant;
            static function statics () : Ext.Class;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Capture extends Ext.Base
        {
            // Properties
            // Methods
            static function constructor ();
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function captureAudio (config : variant) : void;
            static function captureVideo (config : variant) : void;
            static function destroy () : void;
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function initConfig (instanceConfig : variant) : variant;
            static function statics () : Ext.Class;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class Compass extends Ext.Base
        {
            // Properties
            // Methods
            static function constructor ();
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function destroy () : void;
            static function getFrequency () : number;
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function initConfig (instanceConfig : variant) : variant;
            static function setFrequency (frequency : number) : void;
            static function statics () : Ext.Class;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Connection extends Ext.Base
        {
            // Properties
            static var CELL_2G : string;
            static var CELL_3G : string;
            static var CELL_4G : string;
            static var ETHERNET : string;
            static var NONE : string;
            static var UNKNOWN : string;
            static var WIFI : string;
            // Methods
            static function constructor (config : variant);
            static function addAfterListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function addAfterListener (eventName : string, fn : function  () : void) : void;
            static function addAfterListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : string, fn : string, scope : variant) : void;
            static function addAfterListener (eventName : string, fn : string) : void;
            static function addAfterListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function addAfterListener (eventName : string[], fn : function  () : void) : void;
            static function addAfterListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : string[], fn : string, scope : variant) : void;
            static function addAfterListener (eventName : string[], fn : string) : void;
            static function addAfterListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function addAfterListener (eventName : variant, fn : function  () : void) : void;
            static function addAfterListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : variant, fn : string, scope : variant) : void;
            static function addAfterListener (eventName : variant, fn : string) : void;
            static function addBeforeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function addBeforeListener (eventName : string, fn : function  () : void) : void;
            static function addBeforeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : string, fn : string, scope : variant) : void;
            static function addBeforeListener (eventName : string, fn : string) : void;
            static function addBeforeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function addBeforeListener (eventName : string[], fn : function  () : void) : void;
            static function addBeforeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : string[], fn : string, scope : variant) : void;
            static function addBeforeListener (eventName : string[], fn : string) : void;
            static function addBeforeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function addBeforeListener (eventName : variant, fn : function  () : void) : void;
            static function addBeforeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : variant, fn : string, scope : variant) : void;
            static function addBeforeListener (eventName : variant, fn : string) : void;
            static function addListener (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function addListener (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            static function addListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function addListener (eventName : string, fn : function  () : void, order : string) : void;
            static function addListener (eventName : string, fn : function  () : void) : void;
            static function addListener (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function addListener (eventName : string, fn : string, scope : variant, order : string) : void;
            static function addListener (eventName : string, fn : string, scope : variant) : void;
            static function addListener (eventName : string, fn : string, order : string) : void;
            static function addListener (eventName : string, fn : string) : void;
            static function addListener (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function addListener (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            static function addListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function addListener (eventName : string[], fn : function  () : void, order : string) : void;
            static function addListener (eventName : string[], fn : function  () : void) : void;
            static function addListener (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function addListener (eventName : string[], fn : string, scope : variant, order : string) : void;
            static function addListener (eventName : string[], fn : string, scope : variant) : void;
            static function addListener (eventName : string[], fn : string, order : string) : void;
            static function addListener (eventName : string[], fn : string) : void;
            static function addListener (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function addListener (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            static function addListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function addListener (eventName : variant, fn : function  () : void, order : string) : void;
            static function addListener (eventName : variant, fn : function  () : void) : void;
            static function addListener (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function addListener (eventName : variant, fn : string, scope : variant, order : string) : void;
            static function addListener (eventName : variant, fn : string, scope : variant) : void;
            static function addListener (eventName : variant, fn : string, order : string) : void;
            static function addListener (eventName : variant, fn : string) : void;
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function clearListeners () : void;
            static function destroy () : void;
            static function enableBubble (events : string) : void;
            static function enableBubble (events : string[]) : void;
            static function fireAction (eventName : string, args : variant[], fn : function  () : void, scope : variant) : variant;
            static function fireEvent (eventName : string, args : variant) : boolean;
            static function getBubbleEvents () : variant;
            static function getId () : string;
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function getListeners () : variant;
            static function getOnline () : boolean;
            static function getType () : string;
            static function hasListener (eventName : string) : boolean;
            static function initConfig (instanceConfig : variant) : variant;
            static function isOnline () : boolean;
            static function on (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function on (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function on (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            static function on (eventName : string, fn : function  () : void, scope : variant) : void;
            static function on (eventName : string, fn : function  () : void, order : string) : void;
            static function on (eventName : string, fn : function  () : void) : void;
            static function on (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            static function on (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function on (eventName : string, fn : string, scope : variant, order : string) : void;
            static function on (eventName : string, fn : string, scope : variant) : void;
            static function on (eventName : string, fn : string, order : string) : void;
            static function on (eventName : string, fn : string) : void;
            static function on (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function on (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function on (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            static function on (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function on (eventName : string[], fn : function  () : void, order : string) : void;
            static function on (eventName : string[], fn : function  () : void) : void;
            static function on (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            static function on (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function on (eventName : string[], fn : string, scope : variant, order : string) : void;
            static function on (eventName : string[], fn : string, scope : variant) : void;
            static function on (eventName : string[], fn : string, order : string) : void;
            static function on (eventName : string[], fn : string) : void;
            static function on (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function on (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function on (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            static function on (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function on (eventName : variant, fn : function  () : void, order : string) : void;
            static function on (eventName : variant, fn : function  () : void) : void;
            static function on (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            static function on (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function on (eventName : variant, fn : string, scope : variant, order : string) : void;
            static function on (eventName : variant, fn : string, scope : variant) : void;
            static function on (eventName : variant, fn : string, order : string) : void;
            static function on (eventName : variant, fn : string) : void;
            static function onAfter (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function onAfter (eventName : string, fn : function  () : void, scope : variant) : void;
            static function onAfter (eventName : string, fn : function  () : void) : void;
            static function onAfter (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function onAfter (eventName : string, fn : string, scope : variant) : void;
            static function onAfter (eventName : string, fn : string) : void;
            static function onAfter (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function onAfter (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function onAfter (eventName : string[], fn : function  () : void) : void;
            static function onAfter (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function onAfter (eventName : string[], fn : string, scope : variant) : void;
            static function onAfter (eventName : string[], fn : string) : void;
            static function onAfter (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function onAfter (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function onAfter (eventName : variant, fn : function  () : void) : void;
            static function onAfter (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function onAfter (eventName : variant, fn : string, scope : variant) : void;
            static function onAfter (eventName : variant, fn : string) : void;
            static function onBefore (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function onBefore (eventName : string, fn : function  () : void, scope : variant) : void;
            static function onBefore (eventName : string, fn : function  () : void) : void;
            static function onBefore (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function onBefore (eventName : string, fn : string, scope : variant) : void;
            static function onBefore (eventName : string, fn : string) : void;
            static function onBefore (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function onBefore (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function onBefore (eventName : string[], fn : function  () : void) : void;
            static function onBefore (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function onBefore (eventName : string[], fn : string, scope : variant) : void;
            static function onBefore (eventName : string[], fn : string) : void;
            static function onBefore (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function onBefore (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function onBefore (eventName : variant, fn : function  () : void) : void;
            static function onBefore (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function onBefore (eventName : variant, fn : string, scope : variant) : void;
            static function onBefore (eventName : variant, fn : string) : void;
            static function relayEvents (object : variant, events : string) : Ext.mixin.Observable;
            static function relayEvents (object : variant, events : variant[]) : Ext.mixin.Observable;
            static function relayEvents (object : variant, events : variant) : Ext.mixin.Observable;
            static function removeAfterListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function removeAfterListener (eventName : string, fn : function  () : void) : void;
            static function removeAfterListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : string, fn : string, scope : variant) : void;
            static function removeAfterListener (eventName : string, fn : string) : void;
            static function removeAfterListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function removeAfterListener (eventName : string[], fn : function  () : void) : void;
            static function removeAfterListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : string[], fn : string, scope : variant) : void;
            static function removeAfterListener (eventName : string[], fn : string) : void;
            static function removeAfterListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function removeAfterListener (eventName : variant, fn : function  () : void) : void;
            static function removeAfterListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : variant, fn : string, scope : variant) : void;
            static function removeAfterListener (eventName : variant, fn : string) : void;
            static function removeBeforeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function removeBeforeListener (eventName : string, fn : function  () : void) : void;
            static function removeBeforeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : string, fn : string, scope : variant) : void;
            static function removeBeforeListener (eventName : string, fn : string) : void;
            static function removeBeforeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function removeBeforeListener (eventName : string[], fn : function  () : void) : void;
            static function removeBeforeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : string[], fn : string, scope : variant) : void;
            static function removeBeforeListener (eventName : string[], fn : string) : void;
            static function removeBeforeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function removeBeforeListener (eventName : variant, fn : function  () : void) : void;
            static function removeBeforeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : variant, fn : string, scope : variant) : void;
            static function removeBeforeListener (eventName : variant, fn : string) : void;
            static function removeListener (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeListener (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            static function removeListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function removeListener (eventName : string, fn : function  () : void, order : string) : void;
            static function removeListener (eventName : string, fn : function  () : void) : void;
            static function removeListener (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function removeListener (eventName : string, fn : string, scope : variant, order : string) : void;
            static function removeListener (eventName : string, fn : string, scope : variant) : void;
            static function removeListener (eventName : string, fn : string, order : string) : void;
            static function removeListener (eventName : string, fn : string) : void;
            static function removeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function removeListener (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            static function removeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function removeListener (eventName : string[], fn : function  () : void, order : string) : void;
            static function removeListener (eventName : string[], fn : function  () : void) : void;
            static function removeListener (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function removeListener (eventName : string[], fn : string, scope : variant, order : string) : void;
            static function removeListener (eventName : string[], fn : string, scope : variant) : void;
            static function removeListener (eventName : string[], fn : string, order : string) : void;
            static function removeListener (eventName : string[], fn : string) : void;
            static function removeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeListener (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            static function removeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function removeListener (eventName : variant, fn : function  () : void, order : string) : void;
            static function removeListener (eventName : variant, fn : function  () : void) : void;
            static function removeListener (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function removeListener (eventName : variant, fn : string, scope : variant, order : string) : void;
            static function removeListener (eventName : variant, fn : string, scope : variant) : void;
            static function removeListener (eventName : variant, fn : string, order : string) : void;
            static function removeListener (eventName : variant, fn : string) : void;
            static function resumeEvents (discardQueuedEvents : boolean) : void;
            static function setBubbleEvents (bubbleEvents : string) : void;
            static function setBubbleEvents (bubbleEvents : string[]) : void;
            static function setListeners (listeners : variant) : void;
            static function setOnline (online : boolean) : void;
            static function setType (type : variant) : void;
            static function statics () : Ext.Class;
            static function suspendEvents () : void;
            static function un (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function un (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function un (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            static function un (eventName : string, fn : function  () : void, scope : variant) : void;
            static function un (eventName : string, fn : function  () : void, order : string) : void;
            static function un (eventName : string, fn : function  () : void) : void;
            static function un (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            static function un (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function un (eventName : string, fn : string, scope : variant, order : string) : void;
            static function un (eventName : string, fn : string, scope : variant) : void;
            static function un (eventName : string, fn : string, order : string) : void;
            static function un (eventName : string, fn : string) : void;
            static function un (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function un (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function un (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            static function un (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function un (eventName : string[], fn : function  () : void, order : string) : void;
            static function un (eventName : string[], fn : function  () : void) : void;
            static function un (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            static function un (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function un (eventName : string[], fn : string, scope : variant, order : string) : void;
            static function un (eventName : string[], fn : string, scope : variant) : void;
            static function un (eventName : string[], fn : string, order : string) : void;
            static function un (eventName : string[], fn : string) : void;
            static function un (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function un (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function un (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            static function un (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function un (eventName : variant, fn : function  () : void, order : string) : void;
            static function un (eventName : variant, fn : function  () : void) : void;
            static function un (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            static function un (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function un (eventName : variant, fn : string, scope : variant, order : string) : void;
            static function un (eventName : variant, fn : string, scope : variant) : void;
            static function un (eventName : variant, fn : string, order : string) : void;
            static function un (eventName : variant, fn : string) : void;
            static function unAfter (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function unAfter (eventName : string, fn : function  () : void, scope : variant) : void;
            static function unAfter (eventName : string, fn : function  () : void) : void;
            static function unAfter (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function unAfter (eventName : string, fn : string, scope : variant) : void;
            static function unAfter (eventName : string, fn : string) : void;
            static function unAfter (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function unAfter (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function unAfter (eventName : string[], fn : function  () : void) : void;
            static function unAfter (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function unAfter (eventName : string[], fn : string, scope : variant) : void;
            static function unAfter (eventName : string[], fn : string) : void;
            static function unAfter (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function unAfter (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function unAfter (eventName : variant, fn : function  () : void) : void;
            static function unAfter (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function unAfter (eventName : variant, fn : string, scope : variant) : void;
            static function unAfter (eventName : variant, fn : string) : void;
            static function unBefore (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function unBefore (eventName : string, fn : function  () : void, scope : variant) : void;
            static function unBefore (eventName : string, fn : function  () : void) : void;
            static function unBefore (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function unBefore (eventName : string, fn : string, scope : variant) : void;
            static function unBefore (eventName : string, fn : string) : void;
            static function unBefore (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function unBefore (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function unBefore (eventName : string[], fn : function  () : void) : void;
            static function unBefore (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function unBefore (eventName : string[], fn : string, scope : variant) : void;
            static function unBefore (eventName : string[], fn : string) : void;
            static function unBefore (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function unBefore (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function unBefore (eventName : variant, fn : function  () : void) : void;
            static function unBefore (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function unBefore (eventName : variant, fn : string, scope : variant) : void;
            static function unBefore (eventName : variant, fn : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            static function offline (eOpts : variant) : void;
            static function online (eOpts : variant) : void;
            static function onlinechange (online : boolean, type : string, eOpts : variant) : void;
        }

        class Contacts extends Ext.Base
        {
            // Properties
            // Methods
            static function constructor ();
            static function addAfterListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function addAfterListener (eventName : string, fn : function  () : void) : void;
            static function addAfterListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : string, fn : string, scope : variant) : void;
            static function addAfterListener (eventName : string, fn : string) : void;
            static function addAfterListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function addAfterListener (eventName : string[], fn : function  () : void) : void;
            static function addAfterListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : string[], fn : string, scope : variant) : void;
            static function addAfterListener (eventName : string[], fn : string) : void;
            static function addAfterListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function addAfterListener (eventName : variant, fn : function  () : void) : void;
            static function addAfterListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : variant, fn : string, scope : variant) : void;
            static function addAfterListener (eventName : variant, fn : string) : void;
            static function addBeforeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function addBeforeListener (eventName : string, fn : function  () : void) : void;
            static function addBeforeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : string, fn : string, scope : variant) : void;
            static function addBeforeListener (eventName : string, fn : string) : void;
            static function addBeforeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function addBeforeListener (eventName : string[], fn : function  () : void) : void;
            static function addBeforeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : string[], fn : string, scope : variant) : void;
            static function addBeforeListener (eventName : string[], fn : string) : void;
            static function addBeforeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function addBeforeListener (eventName : variant, fn : function  () : void) : void;
            static function addBeforeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : variant, fn : string, scope : variant) : void;
            static function addBeforeListener (eventName : variant, fn : string) : void;
            static function addListener (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function addListener (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            static function addListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function addListener (eventName : string, fn : function  () : void, order : string) : void;
            static function addListener (eventName : string, fn : function  () : void) : void;
            static function addListener (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function addListener (eventName : string, fn : string, scope : variant, order : string) : void;
            static function addListener (eventName : string, fn : string, scope : variant) : void;
            static function addListener (eventName : string, fn : string, order : string) : void;
            static function addListener (eventName : string, fn : string) : void;
            static function addListener (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function addListener (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            static function addListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function addListener (eventName : string[], fn : function  () : void, order : string) : void;
            static function addListener (eventName : string[], fn : function  () : void) : void;
            static function addListener (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function addListener (eventName : string[], fn : string, scope : variant, order : string) : void;
            static function addListener (eventName : string[], fn : string, scope : variant) : void;
            static function addListener (eventName : string[], fn : string, order : string) : void;
            static function addListener (eventName : string[], fn : string) : void;
            static function addListener (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function addListener (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            static function addListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function addListener (eventName : variant, fn : function  () : void, order : string) : void;
            static function addListener (eventName : variant, fn : function  () : void) : void;
            static function addListener (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function addListener (eventName : variant, fn : string, scope : variant, order : string) : void;
            static function addListener (eventName : variant, fn : string, scope : variant) : void;
            static function addListener (eventName : variant, fn : string, order : string) : void;
            static function addListener (eventName : variant, fn : string) : void;
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function clearListeners () : void;
            static function destroy () : void;
            static function enableBubble (events : string) : void;
            static function enableBubble (events : string[]) : void;
            static function fireAction (eventName : string, args : variant[], fn : function  () : void, scope : variant) : variant;
            static function fireEvent (eventName : string, args : variant) : boolean;
            static function getBubbleEvents () : variant;
            static function getContacts (config : variant) : variant[];
            static function getId () : string;
            static function getIncludeImages () : boolean;
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function getListeners () : variant;
            static function getLocalizedLabel (config : variant) : string;
            static function getThumbnail (config : variant) : string;
            static function hasListener (eventName : string) : boolean;
            static function initConfig (instanceConfig : variant) : variant;
            static function on (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function on (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function on (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            static function on (eventName : string, fn : function  () : void, scope : variant) : void;
            static function on (eventName : string, fn : function  () : void, order : string) : void;
            static function on (eventName : string, fn : function  () : void) : void;
            static function on (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            static function on (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function on (eventName : string, fn : string, scope : variant, order : string) : void;
            static function on (eventName : string, fn : string, scope : variant) : void;
            static function on (eventName : string, fn : string, order : string) : void;
            static function on (eventName : string, fn : string) : void;
            static function on (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function on (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function on (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            static function on (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function on (eventName : string[], fn : function  () : void, order : string) : void;
            static function on (eventName : string[], fn : function  () : void) : void;
            static function on (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            static function on (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function on (eventName : string[], fn : string, scope : variant, order : string) : void;
            static function on (eventName : string[], fn : string, scope : variant) : void;
            static function on (eventName : string[], fn : string, order : string) : void;
            static function on (eventName : string[], fn : string) : void;
            static function on (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function on (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function on (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            static function on (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function on (eventName : variant, fn : function  () : void, order : string) : void;
            static function on (eventName : variant, fn : function  () : void) : void;
            static function on (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            static function on (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function on (eventName : variant, fn : string, scope : variant, order : string) : void;
            static function on (eventName : variant, fn : string, scope : variant) : void;
            static function on (eventName : variant, fn : string, order : string) : void;
            static function on (eventName : variant, fn : string) : void;
            static function onAfter (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function onAfter (eventName : string, fn : function  () : void, scope : variant) : void;
            static function onAfter (eventName : string, fn : function  () : void) : void;
            static function onAfter (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function onAfter (eventName : string, fn : string, scope : variant) : void;
            static function onAfter (eventName : string, fn : string) : void;
            static function onAfter (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function onAfter (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function onAfter (eventName : string[], fn : function  () : void) : void;
            static function onAfter (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function onAfter (eventName : string[], fn : string, scope : variant) : void;
            static function onAfter (eventName : string[], fn : string) : void;
            static function onAfter (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function onAfter (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function onAfter (eventName : variant, fn : function  () : void) : void;
            static function onAfter (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function onAfter (eventName : variant, fn : string, scope : variant) : void;
            static function onAfter (eventName : variant, fn : string) : void;
            static function onBefore (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function onBefore (eventName : string, fn : function  () : void, scope : variant) : void;
            static function onBefore (eventName : string, fn : function  () : void) : void;
            static function onBefore (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function onBefore (eventName : string, fn : string, scope : variant) : void;
            static function onBefore (eventName : string, fn : string) : void;
            static function onBefore (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function onBefore (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function onBefore (eventName : string[], fn : function  () : void) : void;
            static function onBefore (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function onBefore (eventName : string[], fn : string, scope : variant) : void;
            static function onBefore (eventName : string[], fn : string) : void;
            static function onBefore (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function onBefore (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function onBefore (eventName : variant, fn : function  () : void) : void;
            static function onBefore (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function onBefore (eventName : variant, fn : string, scope : variant) : void;
            static function onBefore (eventName : variant, fn : string) : void;
            static function relayEvents (object : variant, events : string) : Ext.mixin.Observable;
            static function relayEvents (object : variant, events : variant[]) : Ext.mixin.Observable;
            static function relayEvents (object : variant, events : variant) : Ext.mixin.Observable;
            static function removeAfterListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function removeAfterListener (eventName : string, fn : function  () : void) : void;
            static function removeAfterListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : string, fn : string, scope : variant) : void;
            static function removeAfterListener (eventName : string, fn : string) : void;
            static function removeAfterListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function removeAfterListener (eventName : string[], fn : function  () : void) : void;
            static function removeAfterListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : string[], fn : string, scope : variant) : void;
            static function removeAfterListener (eventName : string[], fn : string) : void;
            static function removeAfterListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function removeAfterListener (eventName : variant, fn : function  () : void) : void;
            static function removeAfterListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : variant, fn : string, scope : variant) : void;
            static function removeAfterListener (eventName : variant, fn : string) : void;
            static function removeBeforeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function removeBeforeListener (eventName : string, fn : function  () : void) : void;
            static function removeBeforeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : string, fn : string, scope : variant) : void;
            static function removeBeforeListener (eventName : string, fn : string) : void;
            static function removeBeforeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function removeBeforeListener (eventName : string[], fn : function  () : void) : void;
            static function removeBeforeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : string[], fn : string, scope : variant) : void;
            static function removeBeforeListener (eventName : string[], fn : string) : void;
            static function removeBeforeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function removeBeforeListener (eventName : variant, fn : function  () : void) : void;
            static function removeBeforeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : variant, fn : string, scope : variant) : void;
            static function removeBeforeListener (eventName : variant, fn : string) : void;
            static function removeListener (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeListener (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            static function removeListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function removeListener (eventName : string, fn : function  () : void, order : string) : void;
            static function removeListener (eventName : string, fn : function  () : void) : void;
            static function removeListener (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function removeListener (eventName : string, fn : string, scope : variant, order : string) : void;
            static function removeListener (eventName : string, fn : string, scope : variant) : void;
            static function removeListener (eventName : string, fn : string, order : string) : void;
            static function removeListener (eventName : string, fn : string) : void;
            static function removeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function removeListener (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            static function removeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function removeListener (eventName : string[], fn : function  () : void, order : string) : void;
            static function removeListener (eventName : string[], fn : function  () : void) : void;
            static function removeListener (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function removeListener (eventName : string[], fn : string, scope : variant, order : string) : void;
            static function removeListener (eventName : string[], fn : string, scope : variant) : void;
            static function removeListener (eventName : string[], fn : string, order : string) : void;
            static function removeListener (eventName : string[], fn : string) : void;
            static function removeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeListener (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            static function removeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function removeListener (eventName : variant, fn : function  () : void, order : string) : void;
            static function removeListener (eventName : variant, fn : function  () : void) : void;
            static function removeListener (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function removeListener (eventName : variant, fn : string, scope : variant, order : string) : void;
            static function removeListener (eventName : variant, fn : string, scope : variant) : void;
            static function removeListener (eventName : variant, fn : string, order : string) : void;
            static function removeListener (eventName : variant, fn : string) : void;
            static function resumeEvents (discardQueuedEvents : boolean) : void;
            static function setBubbleEvents (bubbleEvents : string) : void;
            static function setBubbleEvents (bubbleEvents : string[]) : void;
            static function setIncludeImages (includeImages : boolean) : void;
            static function setListeners (listeners : variant) : void;
            static function statics () : Ext.Class;
            static function suspendEvents () : void;
            static function un (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function un (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function un (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            static function un (eventName : string, fn : function  () : void, scope : variant) : void;
            static function un (eventName : string, fn : function  () : void, order : string) : void;
            static function un (eventName : string, fn : function  () : void) : void;
            static function un (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            static function un (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function un (eventName : string, fn : string, scope : variant, order : string) : void;
            static function un (eventName : string, fn : string, scope : variant) : void;
            static function un (eventName : string, fn : string, order : string) : void;
            static function un (eventName : string, fn : string) : void;
            static function un (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function un (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function un (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            static function un (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function un (eventName : string[], fn : function  () : void, order : string) : void;
            static function un (eventName : string[], fn : function  () : void) : void;
            static function un (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            static function un (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function un (eventName : string[], fn : string, scope : variant, order : string) : void;
            static function un (eventName : string[], fn : string, scope : variant) : void;
            static function un (eventName : string[], fn : string, order : string) : void;
            static function un (eventName : string[], fn : string) : void;
            static function un (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function un (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function un (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            static function un (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function un (eventName : variant, fn : function  () : void, order : string) : void;
            static function un (eventName : variant, fn : function  () : void) : void;
            static function un (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            static function un (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function un (eventName : variant, fn : string, scope : variant, order : string) : void;
            static function un (eventName : variant, fn : string, scope : variant) : void;
            static function un (eventName : variant, fn : string, order : string) : void;
            static function un (eventName : variant, fn : string) : void;
            static function unAfter (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function unAfter (eventName : string, fn : function  () : void, scope : variant) : void;
            static function unAfter (eventName : string, fn : function  () : void) : void;
            static function unAfter (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function unAfter (eventName : string, fn : string, scope : variant) : void;
            static function unAfter (eventName : string, fn : string) : void;
            static function unAfter (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function unAfter (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function unAfter (eventName : string[], fn : function  () : void) : void;
            static function unAfter (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function unAfter (eventName : string[], fn : string, scope : variant) : void;
            static function unAfter (eventName : string[], fn : string) : void;
            static function unAfter (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function unAfter (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function unAfter (eventName : variant, fn : function  () : void) : void;
            static function unAfter (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function unAfter (eventName : variant, fn : string, scope : variant) : void;
            static function unAfter (eventName : variant, fn : string) : void;
            static function unBefore (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function unBefore (eventName : string, fn : function  () : void, scope : variant) : void;
            static function unBefore (eventName : string, fn : function  () : void) : void;
            static function unBefore (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function unBefore (eventName : string, fn : string, scope : variant) : void;
            static function unBefore (eventName : string, fn : string) : void;
            static function unBefore (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function unBefore (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function unBefore (eventName : string[], fn : function  () : void) : void;
            static function unBefore (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function unBefore (eventName : string[], fn : string, scope : variant) : void;
            static function unBefore (eventName : string[], fn : string) : void;
            static function unBefore (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function unBefore (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function unBefore (eventName : variant, fn : function  () : void) : void;
            static function unBefore (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function unBefore (eventName : variant, fn : string, scope : variant) : void;
            static function unBefore (eventName : variant, fn : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Device extends Ext.Base
        {
            // Properties
            static var name : string;
            static var platform : string;
            static var scheme : variant;
            static var uuid : string;
            // Methods
            static function constructor ();
            static function addAfterListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function addAfterListener (eventName : string, fn : function  () : void) : void;
            static function addAfterListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : string, fn : string, scope : variant) : void;
            static function addAfterListener (eventName : string, fn : string) : void;
            static function addAfterListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function addAfterListener (eventName : string[], fn : function  () : void) : void;
            static function addAfterListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : string[], fn : string, scope : variant) : void;
            static function addAfterListener (eventName : string[], fn : string) : void;
            static function addAfterListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function addAfterListener (eventName : variant, fn : function  () : void) : void;
            static function addAfterListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : variant, fn : string, scope : variant) : void;
            static function addAfterListener (eventName : variant, fn : string) : void;
            static function addBeforeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function addBeforeListener (eventName : string, fn : function  () : void) : void;
            static function addBeforeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : string, fn : string, scope : variant) : void;
            static function addBeforeListener (eventName : string, fn : string) : void;
            static function addBeforeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function addBeforeListener (eventName : string[], fn : function  () : void) : void;
            static function addBeforeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : string[], fn : string, scope : variant) : void;
            static function addBeforeListener (eventName : string[], fn : string) : void;
            static function addBeforeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function addBeforeListener (eventName : variant, fn : function  () : void) : void;
            static function addBeforeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : variant, fn : string, scope : variant) : void;
            static function addBeforeListener (eventName : variant, fn : string) : void;
            static function addListener (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function addListener (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            static function addListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function addListener (eventName : string, fn : function  () : void, order : string) : void;
            static function addListener (eventName : string, fn : function  () : void) : void;
            static function addListener (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function addListener (eventName : string, fn : string, scope : variant, order : string) : void;
            static function addListener (eventName : string, fn : string, scope : variant) : void;
            static function addListener (eventName : string, fn : string, order : string) : void;
            static function addListener (eventName : string, fn : string) : void;
            static function addListener (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function addListener (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            static function addListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function addListener (eventName : string[], fn : function  () : void, order : string) : void;
            static function addListener (eventName : string[], fn : function  () : void) : void;
            static function addListener (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function addListener (eventName : string[], fn : string, scope : variant, order : string) : void;
            static function addListener (eventName : string[], fn : string, scope : variant) : void;
            static function addListener (eventName : string[], fn : string, order : string) : void;
            static function addListener (eventName : string[], fn : string) : void;
            static function addListener (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function addListener (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            static function addListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function addListener (eventName : variant, fn : function  () : void, order : string) : void;
            static function addListener (eventName : variant, fn : function  () : void) : void;
            static function addListener (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function addListener (eventName : variant, fn : string, scope : variant, order : string) : void;
            static function addListener (eventName : variant, fn : string, scope : variant) : void;
            static function addListener (eventName : variant, fn : string, order : string) : void;
            static function addListener (eventName : variant, fn : string) : void;
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function clearListeners () : void;
            static function destroy () : void;
            static function enableBubble (events : string) : void;
            static function enableBubble (events : string[]) : void;
            static function fireAction (eventName : string, args : variant[], fn : function  () : void, scope : variant) : variant;
            static function fireEvent (eventName : string, args : variant) : boolean;
            static function getBubbleEvents () : variant;
            static function getId () : string;
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function getListeners () : variant;
            static function hasListener (eventName : string) : boolean;
            static function initConfig (instanceConfig : variant) : variant;
            static function on (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function on (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function on (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            static function on (eventName : string, fn : function  () : void, scope : variant) : void;
            static function on (eventName : string, fn : function  () : void, order : string) : void;
            static function on (eventName : string, fn : function  () : void) : void;
            static function on (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            static function on (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function on (eventName : string, fn : string, scope : variant, order : string) : void;
            static function on (eventName : string, fn : string, scope : variant) : void;
            static function on (eventName : string, fn : string, order : string) : void;
            static function on (eventName : string, fn : string) : void;
            static function on (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function on (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function on (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            static function on (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function on (eventName : string[], fn : function  () : void, order : string) : void;
            static function on (eventName : string[], fn : function  () : void) : void;
            static function on (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            static function on (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function on (eventName : string[], fn : string, scope : variant, order : string) : void;
            static function on (eventName : string[], fn : string, scope : variant) : void;
            static function on (eventName : string[], fn : string, order : string) : void;
            static function on (eventName : string[], fn : string) : void;
            static function on (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function on (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function on (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            static function on (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function on (eventName : variant, fn : function  () : void, order : string) : void;
            static function on (eventName : variant, fn : function  () : void) : void;
            static function on (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            static function on (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function on (eventName : variant, fn : string, scope : variant, order : string) : void;
            static function on (eventName : variant, fn : string, scope : variant) : void;
            static function on (eventName : variant, fn : string, order : string) : void;
            static function on (eventName : variant, fn : string) : void;
            static function onAfter (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function onAfter (eventName : string, fn : function  () : void, scope : variant) : void;
            static function onAfter (eventName : string, fn : function  () : void) : void;
            static function onAfter (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function onAfter (eventName : string, fn : string, scope : variant) : void;
            static function onAfter (eventName : string, fn : string) : void;
            static function onAfter (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function onAfter (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function onAfter (eventName : string[], fn : function  () : void) : void;
            static function onAfter (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function onAfter (eventName : string[], fn : string, scope : variant) : void;
            static function onAfter (eventName : string[], fn : string) : void;
            static function onAfter (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function onAfter (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function onAfter (eventName : variant, fn : function  () : void) : void;
            static function onAfter (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function onAfter (eventName : variant, fn : string, scope : variant) : void;
            static function onAfter (eventName : variant, fn : string) : void;
            static function onBefore (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function onBefore (eventName : string, fn : function  () : void, scope : variant) : void;
            static function onBefore (eventName : string, fn : function  () : void) : void;
            static function onBefore (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function onBefore (eventName : string, fn : string, scope : variant) : void;
            static function onBefore (eventName : string, fn : string) : void;
            static function onBefore (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function onBefore (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function onBefore (eventName : string[], fn : function  () : void) : void;
            static function onBefore (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function onBefore (eventName : string[], fn : string, scope : variant) : void;
            static function onBefore (eventName : string[], fn : string) : void;
            static function onBefore (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function onBefore (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function onBefore (eventName : variant, fn : function  () : void) : void;
            static function onBefore (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function onBefore (eventName : variant, fn : string, scope : variant) : void;
            static function onBefore (eventName : variant, fn : string) : void;
            static function openURL (url : string) : void;
            static function relayEvents (object : variant, events : string) : Ext.mixin.Observable;
            static function relayEvents (object : variant, events : variant[]) : Ext.mixin.Observable;
            static function relayEvents (object : variant, events : variant) : Ext.mixin.Observable;
            static function removeAfterListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function removeAfterListener (eventName : string, fn : function  () : void) : void;
            static function removeAfterListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : string, fn : string, scope : variant) : void;
            static function removeAfterListener (eventName : string, fn : string) : void;
            static function removeAfterListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function removeAfterListener (eventName : string[], fn : function  () : void) : void;
            static function removeAfterListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : string[], fn : string, scope : variant) : void;
            static function removeAfterListener (eventName : string[], fn : string) : void;
            static function removeAfterListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function removeAfterListener (eventName : variant, fn : function  () : void) : void;
            static function removeAfterListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : variant, fn : string, scope : variant) : void;
            static function removeAfterListener (eventName : variant, fn : string) : void;
            static function removeBeforeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function removeBeforeListener (eventName : string, fn : function  () : void) : void;
            static function removeBeforeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : string, fn : string, scope : variant) : void;
            static function removeBeforeListener (eventName : string, fn : string) : void;
            static function removeBeforeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function removeBeforeListener (eventName : string[], fn : function  () : void) : void;
            static function removeBeforeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : string[], fn : string, scope : variant) : void;
            static function removeBeforeListener (eventName : string[], fn : string) : void;
            static function removeBeforeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function removeBeforeListener (eventName : variant, fn : function  () : void) : void;
            static function removeBeforeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : variant, fn : string, scope : variant) : void;
            static function removeBeforeListener (eventName : variant, fn : string) : void;
            static function removeListener (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeListener (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            static function removeListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function removeListener (eventName : string, fn : function  () : void, order : string) : void;
            static function removeListener (eventName : string, fn : function  () : void) : void;
            static function removeListener (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function removeListener (eventName : string, fn : string, scope : variant, order : string) : void;
            static function removeListener (eventName : string, fn : string, scope : variant) : void;
            static function removeListener (eventName : string, fn : string, order : string) : void;
            static function removeListener (eventName : string, fn : string) : void;
            static function removeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function removeListener (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            static function removeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function removeListener (eventName : string[], fn : function  () : void, order : string) : void;
            static function removeListener (eventName : string[], fn : function  () : void) : void;
            static function removeListener (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function removeListener (eventName : string[], fn : string, scope : variant, order : string) : void;
            static function removeListener (eventName : string[], fn : string, scope : variant) : void;
            static function removeListener (eventName : string[], fn : string, order : string) : void;
            static function removeListener (eventName : string[], fn : string) : void;
            static function removeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeListener (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            static function removeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function removeListener (eventName : variant, fn : function  () : void, order : string) : void;
            static function removeListener (eventName : variant, fn : function  () : void) : void;
            static function removeListener (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function removeListener (eventName : variant, fn : string, scope : variant, order : string) : void;
            static function removeListener (eventName : variant, fn : string, scope : variant) : void;
            static function removeListener (eventName : variant, fn : string, order : string) : void;
            static function removeListener (eventName : variant, fn : string) : void;
            static function resumeEvents (discardQueuedEvents : boolean) : void;
            static function setBubbleEvents (bubbleEvents : string) : void;
            static function setBubbleEvents (bubbleEvents : string[]) : void;
            static function setListeners (listeners : variant) : void;
            static function statics () : Ext.Class;
            static function suspendEvents () : void;
            static function un (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function un (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function un (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            static function un (eventName : string, fn : function  () : void, scope : variant) : void;
            static function un (eventName : string, fn : function  () : void, order : string) : void;
            static function un (eventName : string, fn : function  () : void) : void;
            static function un (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            static function un (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function un (eventName : string, fn : string, scope : variant, order : string) : void;
            static function un (eventName : string, fn : string, scope : variant) : void;
            static function un (eventName : string, fn : string, order : string) : void;
            static function un (eventName : string, fn : string) : void;
            static function un (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function un (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function un (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            static function un (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function un (eventName : string[], fn : function  () : void, order : string) : void;
            static function un (eventName : string[], fn : function  () : void) : void;
            static function un (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            static function un (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function un (eventName : string[], fn : string, scope : variant, order : string) : void;
            static function un (eventName : string[], fn : string, scope : variant) : void;
            static function un (eventName : string[], fn : string, order : string) : void;
            static function un (eventName : string[], fn : string) : void;
            static function un (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function un (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function un (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            static function un (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function un (eventName : variant, fn : function  () : void, order : string) : void;
            static function un (eventName : variant, fn : function  () : void) : void;
            static function un (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            static function un (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function un (eventName : variant, fn : string, scope : variant, order : string) : void;
            static function un (eventName : variant, fn : string, scope : variant) : void;
            static function un (eventName : variant, fn : string, order : string) : void;
            static function un (eventName : variant, fn : string) : void;
            static function unAfter (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function unAfter (eventName : string, fn : function  () : void, scope : variant) : void;
            static function unAfter (eventName : string, fn : function  () : void) : void;
            static function unAfter (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function unAfter (eventName : string, fn : string, scope : variant) : void;
            static function unAfter (eventName : string, fn : string) : void;
            static function unAfter (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function unAfter (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function unAfter (eventName : string[], fn : function  () : void) : void;
            static function unAfter (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function unAfter (eventName : string[], fn : string, scope : variant) : void;
            static function unAfter (eventName : string[], fn : string) : void;
            static function unAfter (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function unAfter (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function unAfter (eventName : variant, fn : function  () : void) : void;
            static function unAfter (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function unAfter (eventName : variant, fn : string, scope : variant) : void;
            static function unAfter (eventName : variant, fn : string) : void;
            static function unBefore (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function unBefore (eventName : string, fn : function  () : void, scope : variant) : void;
            static function unBefore (eventName : string, fn : function  () : void) : void;
            static function unBefore (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function unBefore (eventName : string, fn : string, scope : variant) : void;
            static function unBefore (eventName : string, fn : string) : void;
            static function unBefore (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function unBefore (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function unBefore (eventName : string[], fn : function  () : void) : void;
            static function unBefore (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function unBefore (eventName : string[], fn : string, scope : variant) : void;
            static function unBefore (eventName : string[], fn : string) : void;
            static function unBefore (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function unBefore (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function unBefore (eventName : variant, fn : function  () : void) : void;
            static function unBefore (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function unBefore (eventName : variant, fn : string, scope : variant) : void;
            static function unBefore (eventName : variant, fn : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            static function schemeupdate (this_ : Ext.device.Device, scheme : variant, eOpts : variant) : void;
            static function schemeupdate (this_ : Ext.device.Device, scheme : boolean, eOpts : variant) : void;
        }

        class FileSystem extends Ext.Base
        {
            // Properties
            // Methods
            static function constructor ();
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function destroy () : void;
            static function getFileSystemSize () : number;
            static function getFileSystemType () : number;
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function getReaderType () : string;
            static function getStringEncoding () : string;
            static function initConfig (instanceConfig : variant) : variant;
            static function requestFileSystem (config : variant) : void;
            static function setFileSystemSize (fileSystemSize : number) : void;
            static function setFileSystemType (fileSystemType : number) : void;
            static function setReaderType (readerType : string) : void;
            static function setStringEncoding (stringEncoding : string) : void;
            static function statics () : Ext.Class;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Geolocation extends Ext.Base
        {
            // Properties
            // Methods
            static function constructor ();
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function clearWatch () : void;
            static function destroy () : void;
            static function getAllowHighAccuracy () : boolean;
            static function getCurrentPosition (config : variant) : void;
            static function getFrequency () : number;
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function getMaximumAge () : number;
            static function getTimeout () : number;
            static function initConfig (instanceConfig : variant) : variant;
            static function setAllowHighAccuracy (allowHighAccuracy : boolean) : void;
            static function setFrequency (frequency : number) : void;
            static function setMaximumAge (maximumAge : number) : void;
            static function setTimeout (timeout : number) : void;
            static function statics () : Ext.Class;
            static function watchPosition (config : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Globalization extends Ext.Base
        {
            // Properties
            // Methods
            static function constructor ();
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function destroy () : void;
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function initConfig (instanceConfig : variant) : variant;
            static function statics () : Ext.Class;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Media extends Ext.Base
        {
            // Properties
            // Methods
            static function constructor ();
            static function addAfterListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function addAfterListener (eventName : string, fn : function  () : void) : void;
            static function addAfterListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : string, fn : string, scope : variant) : void;
            static function addAfterListener (eventName : string, fn : string) : void;
            static function addAfterListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function addAfterListener (eventName : string[], fn : function  () : void) : void;
            static function addAfterListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : string[], fn : string, scope : variant) : void;
            static function addAfterListener (eventName : string[], fn : string) : void;
            static function addAfterListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function addAfterListener (eventName : variant, fn : function  () : void) : void;
            static function addAfterListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : variant, fn : string, scope : variant) : void;
            static function addAfterListener (eventName : variant, fn : string) : void;
            static function addBeforeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function addBeforeListener (eventName : string, fn : function  () : void) : void;
            static function addBeforeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : string, fn : string, scope : variant) : void;
            static function addBeforeListener (eventName : string, fn : string) : void;
            static function addBeforeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function addBeforeListener (eventName : string[], fn : function  () : void) : void;
            static function addBeforeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : string[], fn : string, scope : variant) : void;
            static function addBeforeListener (eventName : string[], fn : string) : void;
            static function addBeforeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function addBeforeListener (eventName : variant, fn : function  () : void) : void;
            static function addBeforeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : variant, fn : string, scope : variant) : void;
            static function addBeforeListener (eventName : variant, fn : string) : void;
            static function addListener (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function addListener (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            static function addListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function addListener (eventName : string, fn : function  () : void, order : string) : void;
            static function addListener (eventName : string, fn : function  () : void) : void;
            static function addListener (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function addListener (eventName : string, fn : string, scope : variant, order : string) : void;
            static function addListener (eventName : string, fn : string, scope : variant) : void;
            static function addListener (eventName : string, fn : string, order : string) : void;
            static function addListener (eventName : string, fn : string) : void;
            static function addListener (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function addListener (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            static function addListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function addListener (eventName : string[], fn : function  () : void, order : string) : void;
            static function addListener (eventName : string[], fn : function  () : void) : void;
            static function addListener (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function addListener (eventName : string[], fn : string, scope : variant, order : string) : void;
            static function addListener (eventName : string[], fn : string, scope : variant) : void;
            static function addListener (eventName : string[], fn : string, order : string) : void;
            static function addListener (eventName : string[], fn : string) : void;
            static function addListener (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function addListener (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            static function addListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function addListener (eventName : variant, fn : function  () : void, order : string) : void;
            static function addListener (eventName : variant, fn : function  () : void) : void;
            static function addListener (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function addListener (eventName : variant, fn : string, scope : variant, order : string) : void;
            static function addListener (eventName : variant, fn : string, scope : variant) : void;
            static function addListener (eventName : variant, fn : string, order : string) : void;
            static function addListener (eventName : variant, fn : string) : void;
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function clearListeners () : void;
            static function destroy () : void;
            static function enableBubble (events : string) : void;
            static function enableBubble (events : string[]) : void;
            static function fireAction (eventName : string, args : variant[], fn : function  () : void, scope : variant) : variant;
            static function fireEvent (eventName : string, args : variant) : boolean;
            static function getBubbleEvents () : variant;
            static function getId () : string;
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function getListeners () : variant;
            static function getSrc () : variant;
            static function hasListener (eventName : string) : boolean;
            static function initConfig (instanceConfig : variant) : variant;
            static function on (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function on (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function on (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            static function on (eventName : string, fn : function  () : void, scope : variant) : void;
            static function on (eventName : string, fn : function  () : void, order : string) : void;
            static function on (eventName : string, fn : function  () : void) : void;
            static function on (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            static function on (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function on (eventName : string, fn : string, scope : variant, order : string) : void;
            static function on (eventName : string, fn : string, scope : variant) : void;
            static function on (eventName : string, fn : string, order : string) : void;
            static function on (eventName : string, fn : string) : void;
            static function on (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function on (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function on (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            static function on (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function on (eventName : string[], fn : function  () : void, order : string) : void;
            static function on (eventName : string[], fn : function  () : void) : void;
            static function on (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            static function on (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function on (eventName : string[], fn : string, scope : variant, order : string) : void;
            static function on (eventName : string[], fn : string, scope : variant) : void;
            static function on (eventName : string[], fn : string, order : string) : void;
            static function on (eventName : string[], fn : string) : void;
            static function on (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function on (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function on (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            static function on (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function on (eventName : variant, fn : function  () : void, order : string) : void;
            static function on (eventName : variant, fn : function  () : void) : void;
            static function on (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            static function on (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function on (eventName : variant, fn : string, scope : variant, order : string) : void;
            static function on (eventName : variant, fn : string, scope : variant) : void;
            static function on (eventName : variant, fn : string, order : string) : void;
            static function on (eventName : variant, fn : string) : void;
            static function onAfter (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function onAfter (eventName : string, fn : function  () : void, scope : variant) : void;
            static function onAfter (eventName : string, fn : function  () : void) : void;
            static function onAfter (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function onAfter (eventName : string, fn : string, scope : variant) : void;
            static function onAfter (eventName : string, fn : string) : void;
            static function onAfter (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function onAfter (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function onAfter (eventName : string[], fn : function  () : void) : void;
            static function onAfter (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function onAfter (eventName : string[], fn : string, scope : variant) : void;
            static function onAfter (eventName : string[], fn : string) : void;
            static function onAfter (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function onAfter (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function onAfter (eventName : variant, fn : function  () : void) : void;
            static function onAfter (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function onAfter (eventName : variant, fn : string, scope : variant) : void;
            static function onAfter (eventName : variant, fn : string) : void;
            static function onBefore (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function onBefore (eventName : string, fn : function  () : void, scope : variant) : void;
            static function onBefore (eventName : string, fn : function  () : void) : void;
            static function onBefore (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function onBefore (eventName : string, fn : string, scope : variant) : void;
            static function onBefore (eventName : string, fn : string) : void;
            static function onBefore (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function onBefore (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function onBefore (eventName : string[], fn : function  () : void) : void;
            static function onBefore (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function onBefore (eventName : string[], fn : string, scope : variant) : void;
            static function onBefore (eventName : string[], fn : string) : void;
            static function onBefore (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function onBefore (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function onBefore (eventName : variant, fn : function  () : void) : void;
            static function onBefore (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function onBefore (eventName : variant, fn : string, scope : variant) : void;
            static function onBefore (eventName : variant, fn : string) : void;
            static function relayEvents (object : variant, events : string) : Ext.mixin.Observable;
            static function relayEvents (object : variant, events : variant[]) : Ext.mixin.Observable;
            static function relayEvents (object : variant, events : variant) : Ext.mixin.Observable;
            static function removeAfterListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function removeAfterListener (eventName : string, fn : function  () : void) : void;
            static function removeAfterListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : string, fn : string, scope : variant) : void;
            static function removeAfterListener (eventName : string, fn : string) : void;
            static function removeAfterListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function removeAfterListener (eventName : string[], fn : function  () : void) : void;
            static function removeAfterListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : string[], fn : string, scope : variant) : void;
            static function removeAfterListener (eventName : string[], fn : string) : void;
            static function removeAfterListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function removeAfterListener (eventName : variant, fn : function  () : void) : void;
            static function removeAfterListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : variant, fn : string, scope : variant) : void;
            static function removeAfterListener (eventName : variant, fn : string) : void;
            static function removeBeforeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function removeBeforeListener (eventName : string, fn : function  () : void) : void;
            static function removeBeforeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : string, fn : string, scope : variant) : void;
            static function removeBeforeListener (eventName : string, fn : string) : void;
            static function removeBeforeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function removeBeforeListener (eventName : string[], fn : function  () : void) : void;
            static function removeBeforeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : string[], fn : string, scope : variant) : void;
            static function removeBeforeListener (eventName : string[], fn : string) : void;
            static function removeBeforeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function removeBeforeListener (eventName : variant, fn : function  () : void) : void;
            static function removeBeforeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : variant, fn : string, scope : variant) : void;
            static function removeBeforeListener (eventName : variant, fn : string) : void;
            static function removeListener (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeListener (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            static function removeListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function removeListener (eventName : string, fn : function  () : void, order : string) : void;
            static function removeListener (eventName : string, fn : function  () : void) : void;
            static function removeListener (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function removeListener (eventName : string, fn : string, scope : variant, order : string) : void;
            static function removeListener (eventName : string, fn : string, scope : variant) : void;
            static function removeListener (eventName : string, fn : string, order : string) : void;
            static function removeListener (eventName : string, fn : string) : void;
            static function removeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function removeListener (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            static function removeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function removeListener (eventName : string[], fn : function  () : void, order : string) : void;
            static function removeListener (eventName : string[], fn : function  () : void) : void;
            static function removeListener (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function removeListener (eventName : string[], fn : string, scope : variant, order : string) : void;
            static function removeListener (eventName : string[], fn : string, scope : variant) : void;
            static function removeListener (eventName : string[], fn : string, order : string) : void;
            static function removeListener (eventName : string[], fn : string) : void;
            static function removeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeListener (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            static function removeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function removeListener (eventName : variant, fn : function  () : void, order : string) : void;
            static function removeListener (eventName : variant, fn : function  () : void) : void;
            static function removeListener (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function removeListener (eventName : variant, fn : string, scope : variant, order : string) : void;
            static function removeListener (eventName : variant, fn : string, scope : variant) : void;
            static function removeListener (eventName : variant, fn : string, order : string) : void;
            static function removeListener (eventName : variant, fn : string) : void;
            static function resumeEvents (discardQueuedEvents : boolean) : void;
            static function setBubbleEvents (bubbleEvents : string) : void;
            static function setBubbleEvents (bubbleEvents : string[]) : void;
            static function setListeners (listeners : variant) : void;
            static function setSrc (src : variant) : void;
            static function statics () : Ext.Class;
            static function suspendEvents () : void;
            static function un (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function un (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function un (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            static function un (eventName : string, fn : function  () : void, scope : variant) : void;
            static function un (eventName : string, fn : function  () : void, order : string) : void;
            static function un (eventName : string, fn : function  () : void) : void;
            static function un (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            static function un (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function un (eventName : string, fn : string, scope : variant, order : string) : void;
            static function un (eventName : string, fn : string, scope : variant) : void;
            static function un (eventName : string, fn : string, order : string) : void;
            static function un (eventName : string, fn : string) : void;
            static function un (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function un (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function un (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            static function un (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function un (eventName : string[], fn : function  () : void, order : string) : void;
            static function un (eventName : string[], fn : function  () : void) : void;
            static function un (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            static function un (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function un (eventName : string[], fn : string, scope : variant, order : string) : void;
            static function un (eventName : string[], fn : string, scope : variant) : void;
            static function un (eventName : string[], fn : string, order : string) : void;
            static function un (eventName : string[], fn : string) : void;
            static function un (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function un (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function un (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            static function un (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function un (eventName : variant, fn : function  () : void, order : string) : void;
            static function un (eventName : variant, fn : function  () : void) : void;
            static function un (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            static function un (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function un (eventName : variant, fn : string, scope : variant, order : string) : void;
            static function un (eventName : variant, fn : string, scope : variant) : void;
            static function un (eventName : variant, fn : string, order : string) : void;
            static function un (eventName : variant, fn : string) : void;
            static function unAfter (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function unAfter (eventName : string, fn : function  () : void, scope : variant) : void;
            static function unAfter (eventName : string, fn : function  () : void) : void;
            static function unAfter (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function unAfter (eventName : string, fn : string, scope : variant) : void;
            static function unAfter (eventName : string, fn : string) : void;
            static function unAfter (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function unAfter (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function unAfter (eventName : string[], fn : function  () : void) : void;
            static function unAfter (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function unAfter (eventName : string[], fn : string, scope : variant) : void;
            static function unAfter (eventName : string[], fn : string) : void;
            static function unAfter (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function unAfter (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function unAfter (eventName : variant, fn : function  () : void) : void;
            static function unAfter (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function unAfter (eventName : variant, fn : string, scope : variant) : void;
            static function unAfter (eventName : variant, fn : string) : void;
            static function unBefore (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function unBefore (eventName : string, fn : function  () : void, scope : variant) : void;
            static function unBefore (eventName : string, fn : function  () : void) : void;
            static function unBefore (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function unBefore (eventName : string, fn : string, scope : variant) : void;
            static function unBefore (eventName : string, fn : string) : void;
            static function unBefore (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function unBefore (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function unBefore (eventName : string[], fn : function  () : void) : void;
            static function unBefore (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function unBefore (eventName : string[], fn : string, scope : variant) : void;
            static function unBefore (eventName : string[], fn : string) : void;
            static function unBefore (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function unBefore (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function unBefore (eventName : variant, fn : function  () : void) : void;
            static function unBefore (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function unBefore (eventName : variant, fn : string, scope : variant) : void;
            static function unBefore (eventName : variant, fn : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Notification extends Ext.Base
        {
            // Properties
            // Methods
            static function constructor ();
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function destroy () : void;
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function initConfig (instanceConfig : variant) : variant;
            static function show (config : variant) : void;
            static function statics () : Ext.Class;
            static function vibrate () : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Orientation extends Ext.Base
        {
            // Properties
            // Methods
            static function constructor ();
            static function addAfterListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function addAfterListener (eventName : string, fn : function  () : void) : void;
            static function addAfterListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : string, fn : string, scope : variant) : void;
            static function addAfterListener (eventName : string, fn : string) : void;
            static function addAfterListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function addAfterListener (eventName : string[], fn : function  () : void) : void;
            static function addAfterListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : string[], fn : string, scope : variant) : void;
            static function addAfterListener (eventName : string[], fn : string) : void;
            static function addAfterListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function addAfterListener (eventName : variant, fn : function  () : void) : void;
            static function addAfterListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : variant, fn : string, scope : variant) : void;
            static function addAfterListener (eventName : variant, fn : string) : void;
            static function addBeforeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function addBeforeListener (eventName : string, fn : function  () : void) : void;
            static function addBeforeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : string, fn : string, scope : variant) : void;
            static function addBeforeListener (eventName : string, fn : string) : void;
            static function addBeforeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function addBeforeListener (eventName : string[], fn : function  () : void) : void;
            static function addBeforeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : string[], fn : string, scope : variant) : void;
            static function addBeforeListener (eventName : string[], fn : string) : void;
            static function addBeforeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function addBeforeListener (eventName : variant, fn : function  () : void) : void;
            static function addBeforeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : variant, fn : string, scope : variant) : void;
            static function addBeforeListener (eventName : variant, fn : string) : void;
            static function addListener (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function addListener (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            static function addListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function addListener (eventName : string, fn : function  () : void, order : string) : void;
            static function addListener (eventName : string, fn : function  () : void) : void;
            static function addListener (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function addListener (eventName : string, fn : string, scope : variant, order : string) : void;
            static function addListener (eventName : string, fn : string, scope : variant) : void;
            static function addListener (eventName : string, fn : string, order : string) : void;
            static function addListener (eventName : string, fn : string) : void;
            static function addListener (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function addListener (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            static function addListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function addListener (eventName : string[], fn : function  () : void, order : string) : void;
            static function addListener (eventName : string[], fn : function  () : void) : void;
            static function addListener (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function addListener (eventName : string[], fn : string, scope : variant, order : string) : void;
            static function addListener (eventName : string[], fn : string, scope : variant) : void;
            static function addListener (eventName : string[], fn : string, order : string) : void;
            static function addListener (eventName : string[], fn : string) : void;
            static function addListener (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function addListener (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            static function addListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function addListener (eventName : variant, fn : function  () : void, order : string) : void;
            static function addListener (eventName : variant, fn : function  () : void) : void;
            static function addListener (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function addListener (eventName : variant, fn : string, scope : variant, order : string) : void;
            static function addListener (eventName : variant, fn : string, scope : variant) : void;
            static function addListener (eventName : variant, fn : string, order : string) : void;
            static function addListener (eventName : variant, fn : string) : void;
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function clearListeners () : void;
            static function destroy () : void;
            static function enableBubble (events : string) : void;
            static function enableBubble (events : string[]) : void;
            static function fireAction (eventName : string, args : variant[], fn : function  () : void, scope : variant) : variant;
            static function fireEvent (eventName : string, args : variant) : boolean;
            static function getBubbleEvents () : variant;
            static function getId () : string;
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function getListeners () : variant;
            static function hasListener (eventName : string) : boolean;
            static function initConfig (instanceConfig : variant) : variant;
            static function on (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function on (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function on (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            static function on (eventName : string, fn : function  () : void, scope : variant) : void;
            static function on (eventName : string, fn : function  () : void, order : string) : void;
            static function on (eventName : string, fn : function  () : void) : void;
            static function on (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            static function on (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function on (eventName : string, fn : string, scope : variant, order : string) : void;
            static function on (eventName : string, fn : string, scope : variant) : void;
            static function on (eventName : string, fn : string, order : string) : void;
            static function on (eventName : string, fn : string) : void;
            static function on (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function on (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function on (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            static function on (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function on (eventName : string[], fn : function  () : void, order : string) : void;
            static function on (eventName : string[], fn : function  () : void) : void;
            static function on (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            static function on (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function on (eventName : string[], fn : string, scope : variant, order : string) : void;
            static function on (eventName : string[], fn : string, scope : variant) : void;
            static function on (eventName : string[], fn : string, order : string) : void;
            static function on (eventName : string[], fn : string) : void;
            static function on (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function on (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function on (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            static function on (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function on (eventName : variant, fn : function  () : void, order : string) : void;
            static function on (eventName : variant, fn : function  () : void) : void;
            static function on (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            static function on (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function on (eventName : variant, fn : string, scope : variant, order : string) : void;
            static function on (eventName : variant, fn : string, scope : variant) : void;
            static function on (eventName : variant, fn : string, order : string) : void;
            static function on (eventName : variant, fn : string) : void;
            static function onAfter (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function onAfter (eventName : string, fn : function  () : void, scope : variant) : void;
            static function onAfter (eventName : string, fn : function  () : void) : void;
            static function onAfter (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function onAfter (eventName : string, fn : string, scope : variant) : void;
            static function onAfter (eventName : string, fn : string) : void;
            static function onAfter (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function onAfter (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function onAfter (eventName : string[], fn : function  () : void) : void;
            static function onAfter (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function onAfter (eventName : string[], fn : string, scope : variant) : void;
            static function onAfter (eventName : string[], fn : string) : void;
            static function onAfter (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function onAfter (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function onAfter (eventName : variant, fn : function  () : void) : void;
            static function onAfter (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function onAfter (eventName : variant, fn : string, scope : variant) : void;
            static function onAfter (eventName : variant, fn : string) : void;
            static function onBefore (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function onBefore (eventName : string, fn : function  () : void, scope : variant) : void;
            static function onBefore (eventName : string, fn : function  () : void) : void;
            static function onBefore (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function onBefore (eventName : string, fn : string, scope : variant) : void;
            static function onBefore (eventName : string, fn : string) : void;
            static function onBefore (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function onBefore (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function onBefore (eventName : string[], fn : function  () : void) : void;
            static function onBefore (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function onBefore (eventName : string[], fn : string, scope : variant) : void;
            static function onBefore (eventName : string[], fn : string) : void;
            static function onBefore (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function onBefore (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function onBefore (eventName : variant, fn : function  () : void) : void;
            static function onBefore (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function onBefore (eventName : variant, fn : string, scope : variant) : void;
            static function onBefore (eventName : variant, fn : string) : void;
            static function relayEvents (object : variant, events : string) : Ext.mixin.Observable;
            static function relayEvents (object : variant, events : variant[]) : Ext.mixin.Observable;
            static function relayEvents (object : variant, events : variant) : Ext.mixin.Observable;
            static function removeAfterListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function removeAfterListener (eventName : string, fn : function  () : void) : void;
            static function removeAfterListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : string, fn : string, scope : variant) : void;
            static function removeAfterListener (eventName : string, fn : string) : void;
            static function removeAfterListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function removeAfterListener (eventName : string[], fn : function  () : void) : void;
            static function removeAfterListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : string[], fn : string, scope : variant) : void;
            static function removeAfterListener (eventName : string[], fn : string) : void;
            static function removeAfterListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function removeAfterListener (eventName : variant, fn : function  () : void) : void;
            static function removeAfterListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : variant, fn : string, scope : variant) : void;
            static function removeAfterListener (eventName : variant, fn : string) : void;
            static function removeBeforeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function removeBeforeListener (eventName : string, fn : function  () : void) : void;
            static function removeBeforeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : string, fn : string, scope : variant) : void;
            static function removeBeforeListener (eventName : string, fn : string) : void;
            static function removeBeforeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function removeBeforeListener (eventName : string[], fn : function  () : void) : void;
            static function removeBeforeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : string[], fn : string, scope : variant) : void;
            static function removeBeforeListener (eventName : string[], fn : string) : void;
            static function removeBeforeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function removeBeforeListener (eventName : variant, fn : function  () : void) : void;
            static function removeBeforeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : variant, fn : string, scope : variant) : void;
            static function removeBeforeListener (eventName : variant, fn : string) : void;
            static function removeListener (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeListener (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            static function removeListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function removeListener (eventName : string, fn : function  () : void, order : string) : void;
            static function removeListener (eventName : string, fn : function  () : void) : void;
            static function removeListener (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function removeListener (eventName : string, fn : string, scope : variant, order : string) : void;
            static function removeListener (eventName : string, fn : string, scope : variant) : void;
            static function removeListener (eventName : string, fn : string, order : string) : void;
            static function removeListener (eventName : string, fn : string) : void;
            static function removeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function removeListener (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            static function removeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function removeListener (eventName : string[], fn : function  () : void, order : string) : void;
            static function removeListener (eventName : string[], fn : function  () : void) : void;
            static function removeListener (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function removeListener (eventName : string[], fn : string, scope : variant, order : string) : void;
            static function removeListener (eventName : string[], fn : string, scope : variant) : void;
            static function removeListener (eventName : string[], fn : string, order : string) : void;
            static function removeListener (eventName : string[], fn : string) : void;
            static function removeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeListener (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            static function removeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function removeListener (eventName : variant, fn : function  () : void, order : string) : void;
            static function removeListener (eventName : variant, fn : function  () : void) : void;
            static function removeListener (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function removeListener (eventName : variant, fn : string, scope : variant, order : string) : void;
            static function removeListener (eventName : variant, fn : string, scope : variant) : void;
            static function removeListener (eventName : variant, fn : string, order : string) : void;
            static function removeListener (eventName : variant, fn : string) : void;
            static function resumeEvents (discardQueuedEvents : boolean) : void;
            static function setBubbleEvents (bubbleEvents : string) : void;
            static function setBubbleEvents (bubbleEvents : string[]) : void;
            static function setListeners (listeners : variant) : void;
            static function statics () : Ext.Class;
            static function suspendEvents () : void;
            static function un (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function un (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function un (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            static function un (eventName : string, fn : function  () : void, scope : variant) : void;
            static function un (eventName : string, fn : function  () : void, order : string) : void;
            static function un (eventName : string, fn : function  () : void) : void;
            static function un (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            static function un (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function un (eventName : string, fn : string, scope : variant, order : string) : void;
            static function un (eventName : string, fn : string, scope : variant) : void;
            static function un (eventName : string, fn : string, order : string) : void;
            static function un (eventName : string, fn : string) : void;
            static function un (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function un (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function un (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            static function un (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function un (eventName : string[], fn : function  () : void, order : string) : void;
            static function un (eventName : string[], fn : function  () : void) : void;
            static function un (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            static function un (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function un (eventName : string[], fn : string, scope : variant, order : string) : void;
            static function un (eventName : string[], fn : string, scope : variant) : void;
            static function un (eventName : string[], fn : string, order : string) : void;
            static function un (eventName : string[], fn : string) : void;
            static function un (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function un (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function un (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            static function un (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function un (eventName : variant, fn : function  () : void, order : string) : void;
            static function un (eventName : variant, fn : function  () : void) : void;
            static function un (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            static function un (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function un (eventName : variant, fn : string, scope : variant, order : string) : void;
            static function un (eventName : variant, fn : string, scope : variant) : void;
            static function un (eventName : variant, fn : string, order : string) : void;
            static function un (eventName : variant, fn : string) : void;
            static function unAfter (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function unAfter (eventName : string, fn : function  () : void, scope : variant) : void;
            static function unAfter (eventName : string, fn : function  () : void) : void;
            static function unAfter (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function unAfter (eventName : string, fn : string, scope : variant) : void;
            static function unAfter (eventName : string, fn : string) : void;
            static function unAfter (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function unAfter (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function unAfter (eventName : string[], fn : function  () : void) : void;
            static function unAfter (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function unAfter (eventName : string[], fn : string, scope : variant) : void;
            static function unAfter (eventName : string[], fn : string) : void;
            static function unAfter (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function unAfter (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function unAfter (eventName : variant, fn : function  () : void) : void;
            static function unAfter (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function unAfter (eventName : variant, fn : string, scope : variant) : void;
            static function unAfter (eventName : variant, fn : string) : void;
            static function unBefore (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function unBefore (eventName : string, fn : function  () : void, scope : variant) : void;
            static function unBefore (eventName : string, fn : function  () : void) : void;
            static function unBefore (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function unBefore (eventName : string, fn : string, scope : variant) : void;
            static function unBefore (eventName : string, fn : string) : void;
            static function unBefore (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function unBefore (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function unBefore (eventName : string[], fn : function  () : void) : void;
            static function unBefore (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function unBefore (eventName : string[], fn : string, scope : variant) : void;
            static function unBefore (eventName : string[], fn : string) : void;
            static function unBefore (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function unBefore (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function unBefore (eventName : variant, fn : function  () : void) : void;
            static function unBefore (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function unBefore (eventName : variant, fn : string, scope : variant) : void;
            static function unBefore (eventName : variant, fn : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            static function orientationchange (event : variant, eOpts : variant) : void;
        }

        class Purchases extends Ext.Base
        {
            // Properties
            // Methods
            static function constructor ();
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function canMakePayments (config : variant) : void;
            static function destroy () : void;
            static function getCompletedPurchases (config : variant) : void;
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function getProducts (config : variant) : void;
            static function getPurchases (config : variant) : void;
            static function initConfig (instanceConfig : variant) : variant;
            static function statics () : Ext.Class;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;

            class Product extends Ext.data.Model
            {
                // Methods
                function purchase (config : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
                static function load (id : number, config : variant, scope : variant) : void;
                static function load (id : number, config : variant) : void;
                static function load (id : number) : void;
            }
        }

        class Push extends Ext.Base
        {
            // Properties
            static var ALERT : number;
            static var BADGE : number;
            static var SOUND : number;
            // Methods
            static function constructor ();
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function destroy () : void;
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function initConfig (instanceConfig : variant) : variant;
            static function register (config : variant) : void;
            static function statics () : Ext.Class;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class SQLite extends Ext.Base
        {
            // Properties
            // Methods
            static function constructor ();
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function destroy () : void;
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function initConfig (instanceConfig : variant) : variant;
            static function openDatabase (config : variant) : Ext.device.sqlite.Database;
            static function statics () : Ext.Class;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Splashscreen extends Ext.Base
        {
            // Properties
            // Methods
            static function constructor ();
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function destroy () : void;
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function initConfig (instanceConfig : variant) : variant;
            static function statics () : Ext.Class;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class accelerometer
        {

            class Abstract extends Ext.Base
            {
                // Methods
                function getFrequency () : number;
                function setFrequency (frequency : number) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }


        }

        class browser
        {

            class Abstract extends Ext.Base
            {
                // Methods
                function close () : void;
                function open (options : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }



        }

        class camera
        {

            class Abstract extends Ext.Base
            {
                // Methods
                function capture (options : variant, scope : variant, destination : string, encoding : string, width : number, height : number) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }



        }

        class capture
        {


        }

        class communicator
        {


            class Default extends Ext.Base
            {
                // Methods
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }

        class compass
        {

            class Abstract extends Ext.Base
            {
                // Methods
                function getFrequency () : number;
                function setFrequency (frequency : number) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }


        }

        class connection
        {

            class Abstract extends Ext.Evented
            {
                // Properties
                var CELL_2G : string;
                var CELL_3G : string;
                var CELL_4G : string;
                var ETHERNET : string;
                var NONE : string;
                var UNKNOWN : string;
                var WIFI : string;
                // Methods
                function getOnline () : boolean;
                function getType () : string;
                function isOnline () : boolean;
                function setOnline (online : boolean) : void;
                function setType (type : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
                // Events
                function offline (eOpts : variant) : void;
                function online (eOpts : variant) : void;
            }



        }

        class contacts
        {

            class Abstract extends Ext.Base
            {
                // Methods
                function getContacts (config : variant) : variant[];
                function getIncludeImages () : boolean;
                function setIncludeImages (includeImages : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }


        }

        class device
        {

            class Abstract extends Ext.Base
            {
                // Properties
                var name : string;
                var platform : string;
                var scheme : variant;
                var uuid : string;
                // Methods
                function openURL (url : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
                // Events
                function schemeupdate (this_ : Ext.device.Device, scheme : variant, eOpts : variant) : void;
                function schemeupdate (this_ : Ext.device.Device, scheme : boolean, eOpts : variant) : void;
            }



        }

        class filesystem
        {

            class Abstract extends Ext.Base
            {
                // Methods
                function getFileSystemSize () : number;
                function getFileSystemType () : number;
                function getReaderType () : string;
                function getStringEncoding () : string;
                function setFileSystemSize (fileSystemSize : number) : void;
                function setFileSystemType (fileSystemType : number) : void;
                function setReaderType (readerType : string) : void;
                function setStringEncoding (stringEncoding : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }


            class Cordova extends Ext.device.filesystem.HTML5
            {
                // Methods
                function constructor ();
                function download (config : variant) : variant;
                function readMetadata (config : variant) : void;
                function upload (config : variant) : variant;
                function writeMetadata (config : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class DirectoryEntry extends Ext.device.filesystem.Entry
            {
                // Methods
                function getDirectory (config : variant) : void;
                function getFile (config : variant) : void;
                function readEntries (config : variant) : void;
                function removeRecursively (config : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Entry extends Ext.Base
            {
                // Methods
                function constructor (directory : variant, path : variant, fileSystem : variant);
                function copyTo (config : variant) : void;
                function getFileSystem () : Ext.device.filesystem.FileSystem;
                function getFullPath () : string;
                function getName () : string;
                function getParent (config : variant) : void;
                function isDirectory () : boolean;
                function isFile () : boolean;
                function moveTo (config : variant) : void;
                function remove (config : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class FileEntry extends Ext.device.filesystem.Entry
            {
                // Methods
                function getOffset () : number;
                function read (config : variant) : void;
                function seek (config : variant) : void;
                function truncate (config : variant) : void;
                function write (config : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class FileSystem extends Ext.Base
            {
                // Methods
                function constructor (id : variant);
                function getRoot () : Ext.device.filesystem.DirectoryEntry;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class HTML5 extends Ext.device.filesystem.Abstract
            {
                // Methods
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }


        }

        class geolocation
        {

            class Abstract extends Ext.Base
            {
                // Methods
                function clearWatch () : void;
                function getAllowHighAccuracy () : boolean;
                function getCurrentPosition (config : variant) : void;
                function getFrequency () : number;
                function getMaximumAge () : number;
                function getTimeout () : number;
                function setAllowHighAccuracy (allowHighAccuracy : boolean) : void;
                function setFrequency (frequency : number) : void;
                function setMaximumAge (maximumAge : number) : void;
                function setTimeout (timeout : number) : void;
                function watchPosition (config : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }



        }

        class globalization
        {

            class Abstract extends Ext.Base
            {
                // Methods
                function getCurrencyCode () : string;
                function getDateType () : string;
                function getFormatLength () : string;
                function getItems () : string;
                function getNumberType () : string;
                function getSelector () : string;
                function setCurrencyCode (currencyCode : string) : void;
                function setDateType (dateType : string) : void;
                function setFormatLength (formatLength : string) : void;
                function setItems (items : string) : void;
                function setNumberType (numberType : string) : void;
                function setSelector (selector : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }


        }

        class media
        {

            class Abstract extends Ext.Base
            {
                // Methods
                function getSrc () : variant;
                function setSrc (src : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

        }

        class notification
        {

            class Abstract extends Ext.Base
            {
                // Methods
                function show (config : variant) : void;
                function vibrate () : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }



        }

        class orientation
        {

            class Abstract extends Ext.Base
            {
                // Methods
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
                // Events
                function orientationchange (event : variant, eOpts : variant) : void;
            }


        }

        class purchases
        {

            class Purchase extends Ext.data.Model
            {
                // Methods
                function complete (config : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
                static function load (id : number, config : variant, scope : variant) : void;
                static function load (id : number, config : variant) : void;
                static function load (id : number) : void;
            }

        }

        class push
        {

            class Abstract extends Ext.Base
            {
                // Properties
                var ALERT : number;
                var BADGE : number;
                var SOUND : number;
                // Methods
                function register (config : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }


        }

        class splashscreen
        {

            class Abstract extends Ext.Base
            {
                // Methods
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }


        }

        class sqlite
        {

            class Database extends Ext.Base
            {
                // Methods
                function constructor (id : variant, version : variant);
                function changeVersion (config : variant) : void;
                function getVersion () : string;
                function readTransaction (config : variant) : void;
                function transaction (config : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class SQLResultSet extends Ext.Base
            {
                // Methods
                function constructor (data : variant);
                function getInsertId () : number;
                function getRows () : Ext.device.sqlite.SQLResultSetRowList;
                function getRowsAffected () : number;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class SQLResultSetRowList extends Ext.Base
            {
                // Methods
                function constructor (data : variant);
                function getLength () : number;
                function item (index : number) : variant;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class SQLTransaction extends Ext.Base
            {
                // Methods
                function constructor (id : variant);
                function executeSql (config : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

        }

        class storage
        {

            class Abstract extends Ext.Base
            {
                // Methods
                function getDatabaseDisplayName () : string;
                function getDatabaseName () : string;
                function getDatabaseSize () : variant;
                function getDatabaseVersion () : string;
                function setDatabaseDisplayName (databaseDisplayName : string) : void;
                function setDatabaseName (databaseName : string) : void;
                function setDatabaseSize (databaseSize : variant) : void;
                function setDatabaseVersion (databaseVersion : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }


            class HTML5
            {


                class HTML5 extends Ext.device.storage.Abstract
                {
                    // Methods
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : Ext.Base;
                    static function callParent (args : variant) : void;
                    static function create () : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : string;
                }

            }

        }

        class tunnel
        {

            class Abstract extends Ext.Base
            {
                // Methods
                function constructor ();
                function broadcast (message : string) : Ext.Promise;
                function connect (receiverId : string) : Ext.Promise;
                function onConnect (callback : function  () : void) : void;
                function onMessage (callback : function  () : void) : void;
                function send (receiverId : string, message : variant, foreground : boolean) : Ext.Promise;
                function send (receiverId : string, message : variant) : Ext.Promise;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }
    }

    class direct
    {

        class Event extends Ext.Base
        {
            // Methods
            function constructor (config : variant);
            function getCode () : variant;
            function getData () : variant;
            function getMessage () : string;
            function getName () : string;
            function getResult () : variant;
            function getStatus () : boolean;
            function getTransaction () : variant;
            function getXhr () : variant;
            function setCode (code : variant) : void;
            function setData (data : variant) : void;
            function setMessage (message : string) : void;
            function setName (name : string) : void;
            function setResult (result : variant) : void;
            function setStatus (status : boolean) : void;
            function setTransaction (transaction : variant) : void;
            function setXhr (xhr : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class ExceptionEvent extends Ext.direct.RemotingEvent
        {
            // Methods
            function getError () : variant;
            function setError (error : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class JsonProvider extends Ext.direct.Provider
        {
            // Methods
            function createEvent (response : variant) : Ext.direct.Event;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Manager extends Ext.Base
        {
            // Properties
            // Methods
            static function constructor (config : variant);
            static function addAfterListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function addAfterListener (eventName : string, fn : function  () : void) : void;
            static function addAfterListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : string, fn : string, scope : variant) : void;
            static function addAfterListener (eventName : string, fn : string) : void;
            static function addAfterListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function addAfterListener (eventName : string[], fn : function  () : void) : void;
            static function addAfterListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : string[], fn : string, scope : variant) : void;
            static function addAfterListener (eventName : string[], fn : string) : void;
            static function addAfterListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function addAfterListener (eventName : variant, fn : function  () : void) : void;
            static function addAfterListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function addAfterListener (eventName : variant, fn : string, scope : variant) : void;
            static function addAfterListener (eventName : variant, fn : string) : void;
            static function addBeforeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function addBeforeListener (eventName : string, fn : function  () : void) : void;
            static function addBeforeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : string, fn : string, scope : variant) : void;
            static function addBeforeListener (eventName : string, fn : string) : void;
            static function addBeforeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function addBeforeListener (eventName : string[], fn : function  () : void) : void;
            static function addBeforeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : string[], fn : string, scope : variant) : void;
            static function addBeforeListener (eventName : string[], fn : string) : void;
            static function addBeforeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function addBeforeListener (eventName : variant, fn : function  () : void) : void;
            static function addBeforeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function addBeforeListener (eventName : variant, fn : string, scope : variant) : void;
            static function addBeforeListener (eventName : variant, fn : string) : void;
            static function addListener (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function addListener (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            static function addListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function addListener (eventName : string, fn : function  () : void, order : string) : void;
            static function addListener (eventName : string, fn : function  () : void) : void;
            static function addListener (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function addListener (eventName : string, fn : string, scope : variant, order : string) : void;
            static function addListener (eventName : string, fn : string, scope : variant) : void;
            static function addListener (eventName : string, fn : string, order : string) : void;
            static function addListener (eventName : string, fn : string) : void;
            static function addListener (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function addListener (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            static function addListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function addListener (eventName : string[], fn : function  () : void, order : string) : void;
            static function addListener (eventName : string[], fn : function  () : void) : void;
            static function addListener (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function addListener (eventName : string[], fn : string, scope : variant, order : string) : void;
            static function addListener (eventName : string[], fn : string, scope : variant) : void;
            static function addListener (eventName : string[], fn : string, order : string) : void;
            static function addListener (eventName : string[], fn : string) : void;
            static function addListener (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function addListener (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            static function addListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function addListener (eventName : variant, fn : function  () : void, order : string) : void;
            static function addListener (eventName : variant, fn : function  () : void) : void;
            static function addListener (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            static function addListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function addListener (eventName : variant, fn : string, scope : variant, order : string) : void;
            static function addListener (eventName : variant, fn : string, scope : variant) : void;
            static function addListener (eventName : variant, fn : string, order : string) : void;
            static function addListener (eventName : variant, fn : string) : void;
            static function addProvider (provider : Ext.direct.Provider) : variant;
            static function addProvider (provider : variant) : variant;
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function clearListeners () : void;
            static function destroy () : void;
            static function enableBubble (events : string) : void;
            static function enableBubble (events : string[]) : void;
            static function fireAction (eventName : string, args : variant[], fn : function  () : void, scope : variant) : variant;
            static function fireEvent (eventName : string, args : variant) : boolean;
            static function getBubbleEvents () : variant;
            static function getId () : string;
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function getListeners () : variant;
            static function getProvider (id : string) : variant;
            static function getProvider (id : Ext.direct.Provider) : variant;
            static function hasListener (eventName : string) : boolean;
            static function initConfig (instanceConfig : variant) : variant;
            static function on (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function on (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function on (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            static function on (eventName : string, fn : function  () : void, scope : variant) : void;
            static function on (eventName : string, fn : function  () : void, order : string) : void;
            static function on (eventName : string, fn : function  () : void) : void;
            static function on (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            static function on (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function on (eventName : string, fn : string, scope : variant, order : string) : void;
            static function on (eventName : string, fn : string, scope : variant) : void;
            static function on (eventName : string, fn : string, order : string) : void;
            static function on (eventName : string, fn : string) : void;
            static function on (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function on (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function on (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            static function on (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function on (eventName : string[], fn : function  () : void, order : string) : void;
            static function on (eventName : string[], fn : function  () : void) : void;
            static function on (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            static function on (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function on (eventName : string[], fn : string, scope : variant, order : string) : void;
            static function on (eventName : string[], fn : string, scope : variant) : void;
            static function on (eventName : string[], fn : string, order : string) : void;
            static function on (eventName : string[], fn : string) : void;
            static function on (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function on (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function on (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            static function on (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function on (eventName : variant, fn : function  () : void, order : string) : void;
            static function on (eventName : variant, fn : function  () : void) : void;
            static function on (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            static function on (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function on (eventName : variant, fn : string, scope : variant, order : string) : void;
            static function on (eventName : variant, fn : string, scope : variant) : void;
            static function on (eventName : variant, fn : string, order : string) : void;
            static function on (eventName : variant, fn : string) : void;
            static function onAfter (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function onAfter (eventName : string, fn : function  () : void, scope : variant) : void;
            static function onAfter (eventName : string, fn : function  () : void) : void;
            static function onAfter (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function onAfter (eventName : string, fn : string, scope : variant) : void;
            static function onAfter (eventName : string, fn : string) : void;
            static function onAfter (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function onAfter (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function onAfter (eventName : string[], fn : function  () : void) : void;
            static function onAfter (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function onAfter (eventName : string[], fn : string, scope : variant) : void;
            static function onAfter (eventName : string[], fn : string) : void;
            static function onAfter (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function onAfter (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function onAfter (eventName : variant, fn : function  () : void) : void;
            static function onAfter (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function onAfter (eventName : variant, fn : string, scope : variant) : void;
            static function onAfter (eventName : variant, fn : string) : void;
            static function onBefore (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function onBefore (eventName : string, fn : function  () : void, scope : variant) : void;
            static function onBefore (eventName : string, fn : function  () : void) : void;
            static function onBefore (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function onBefore (eventName : string, fn : string, scope : variant) : void;
            static function onBefore (eventName : string, fn : string) : void;
            static function onBefore (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function onBefore (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function onBefore (eventName : string[], fn : function  () : void) : void;
            static function onBefore (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function onBefore (eventName : string[], fn : string, scope : variant) : void;
            static function onBefore (eventName : string[], fn : string) : void;
            static function onBefore (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function onBefore (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function onBefore (eventName : variant, fn : function  () : void) : void;
            static function onBefore (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function onBefore (eventName : variant, fn : string, scope : variant) : void;
            static function onBefore (eventName : variant, fn : string) : void;
            static function parseMethod (fn : string) : function () : void;
            static function parseMethod (fn : function  () : void) : function () : void;
            static function relayEvents (object : variant, events : string) : Ext.mixin.Observable;
            static function relayEvents (object : variant, events : variant[]) : Ext.mixin.Observable;
            static function relayEvents (object : variant, events : variant) : Ext.mixin.Observable;
            static function removeAfterListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function removeAfterListener (eventName : string, fn : function  () : void) : void;
            static function removeAfterListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : string, fn : string, scope : variant) : void;
            static function removeAfterListener (eventName : string, fn : string) : void;
            static function removeAfterListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function removeAfterListener (eventName : string[], fn : function  () : void) : void;
            static function removeAfterListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : string[], fn : string, scope : variant) : void;
            static function removeAfterListener (eventName : string[], fn : string) : void;
            static function removeAfterListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function removeAfterListener (eventName : variant, fn : function  () : void) : void;
            static function removeAfterListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function removeAfterListener (eventName : variant, fn : string, scope : variant) : void;
            static function removeAfterListener (eventName : variant, fn : string) : void;
            static function removeBeforeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function removeBeforeListener (eventName : string, fn : function  () : void) : void;
            static function removeBeforeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : string, fn : string, scope : variant) : void;
            static function removeBeforeListener (eventName : string, fn : string) : void;
            static function removeBeforeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function removeBeforeListener (eventName : string[], fn : function  () : void) : void;
            static function removeBeforeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : string[], fn : string, scope : variant) : void;
            static function removeBeforeListener (eventName : string[], fn : string) : void;
            static function removeBeforeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function removeBeforeListener (eventName : variant, fn : function  () : void) : void;
            static function removeBeforeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function removeBeforeListener (eventName : variant, fn : string, scope : variant) : void;
            static function removeBeforeListener (eventName : variant, fn : string) : void;
            static function removeListener (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeListener (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            static function removeListener (eventName : string, fn : function  () : void, scope : variant) : void;
            static function removeListener (eventName : string, fn : function  () : void, order : string) : void;
            static function removeListener (eventName : string, fn : function  () : void) : void;
            static function removeListener (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function removeListener (eventName : string, fn : string, scope : variant, order : string) : void;
            static function removeListener (eventName : string, fn : string, scope : variant) : void;
            static function removeListener (eventName : string, fn : string, order : string) : void;
            static function removeListener (eventName : string, fn : string) : void;
            static function removeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function removeListener (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            static function removeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function removeListener (eventName : string[], fn : function  () : void, order : string) : void;
            static function removeListener (eventName : string[], fn : function  () : void) : void;
            static function removeListener (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function removeListener (eventName : string[], fn : string, scope : variant, order : string) : void;
            static function removeListener (eventName : string[], fn : string, scope : variant) : void;
            static function removeListener (eventName : string[], fn : string, order : string) : void;
            static function removeListener (eventName : string[], fn : string) : void;
            static function removeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function removeListener (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            static function removeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function removeListener (eventName : variant, fn : function  () : void, order : string) : void;
            static function removeListener (eventName : variant, fn : function  () : void) : void;
            static function removeListener (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            static function removeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function removeListener (eventName : variant, fn : string, scope : variant, order : string) : void;
            static function removeListener (eventName : variant, fn : string, scope : variant) : void;
            static function removeListener (eventName : variant, fn : string, order : string) : void;
            static function removeListener (eventName : variant, fn : string) : void;
            static function removeProvider (provider : string) : variant;
            static function removeProvider (provider : Ext.direct.Provider) : variant;
            static function resumeEvents (discardQueuedEvents : boolean) : void;
            static function setBubbleEvents (bubbleEvents : string) : void;
            static function setBubbleEvents (bubbleEvents : string[]) : void;
            static function setListeners (listeners : variant) : void;
            static function statics () : Ext.Class;
            static function suspendEvents () : void;
            static function un (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function un (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function un (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            static function un (eventName : string, fn : function  () : void, scope : variant) : void;
            static function un (eventName : string, fn : function  () : void, order : string) : void;
            static function un (eventName : string, fn : function  () : void) : void;
            static function un (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            static function un (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function un (eventName : string, fn : string, scope : variant, order : string) : void;
            static function un (eventName : string, fn : string, scope : variant) : void;
            static function un (eventName : string, fn : string, order : string) : void;
            static function un (eventName : string, fn : string) : void;
            static function un (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function un (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function un (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            static function un (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function un (eventName : string[], fn : function  () : void, order : string) : void;
            static function un (eventName : string[], fn : function  () : void) : void;
            static function un (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            static function un (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function un (eventName : string[], fn : string, scope : variant, order : string) : void;
            static function un (eventName : string[], fn : string, scope : variant) : void;
            static function un (eventName : string[], fn : string, order : string) : void;
            static function un (eventName : string[], fn : string) : void;
            static function un (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            static function un (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function un (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            static function un (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function un (eventName : variant, fn : function  () : void, order : string) : void;
            static function un (eventName : variant, fn : function  () : void) : void;
            static function un (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            static function un (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function un (eventName : variant, fn : string, scope : variant, order : string) : void;
            static function un (eventName : variant, fn : string, scope : variant) : void;
            static function un (eventName : variant, fn : string, order : string) : void;
            static function un (eventName : variant, fn : string) : void;
            static function unAfter (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function unAfter (eventName : string, fn : function  () : void, scope : variant) : void;
            static function unAfter (eventName : string, fn : function  () : void) : void;
            static function unAfter (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function unAfter (eventName : string, fn : string, scope : variant) : void;
            static function unAfter (eventName : string, fn : string) : void;
            static function unAfter (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function unAfter (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function unAfter (eventName : string[], fn : function  () : void) : void;
            static function unAfter (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function unAfter (eventName : string[], fn : string, scope : variant) : void;
            static function unAfter (eventName : string[], fn : string) : void;
            static function unAfter (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function unAfter (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function unAfter (eventName : variant, fn : function  () : void) : void;
            static function unAfter (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function unAfter (eventName : variant, fn : string, scope : variant) : void;
            static function unAfter (eventName : variant, fn : string) : void;
            static function unBefore (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            static function unBefore (eventName : string, fn : function  () : void, scope : variant) : void;
            static function unBefore (eventName : string, fn : function  () : void) : void;
            static function unBefore (eventName : string, fn : string, scope : variant, options : variant) : void;
            static function unBefore (eventName : string, fn : string, scope : variant) : void;
            static function unBefore (eventName : string, fn : string) : void;
            static function unBefore (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            static function unBefore (eventName : string[], fn : function  () : void, scope : variant) : void;
            static function unBefore (eventName : string[], fn : function  () : void) : void;
            static function unBefore (eventName : string[], fn : string, scope : variant, options : variant) : void;
            static function unBefore (eventName : string[], fn : string, scope : variant) : void;
            static function unBefore (eventName : string[], fn : string) : void;
            static function unBefore (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            static function unBefore (eventName : variant, fn : function  () : void, scope : variant) : void;
            static function unBefore (eventName : variant, fn : function  () : void) : void;
            static function unBefore (eventName : variant, fn : string, scope : variant, options : variant) : void;
            static function unBefore (eventName : variant, fn : string, scope : variant) : void;
            static function unBefore (eventName : variant, fn : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            static function event (e : Ext.direct.Event, provider : Ext.direct.Provider, eOpts : variant) : void;
            static function exception (e : Ext.direct.Event, eOpts : variant) : void;
        }

        class PollingProvider extends Ext.direct.JsonProvider
        {
            // Methods
            function getBaseParams () : variant;
            function getInterval () : number;
            function getUrl () : variant;
            function setBaseParams (baseParams : variant) : void;
            function setInterval (interval : number) : void;
            function setUrl (url : string) : void;
            function setUrl (url : function  () : void) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function beforepoll (this_ : Ext.direct.PollingProvider, eOpts : variant) : void;
            function poll (this_ : Ext.direct.PollingProvider, eOpts : variant) : void;
        }

        class Provider extends Ext.Base
        {
            // Properties
            var isProvider : boolean;
            // Methods
            function connect () : void;
            function disconnect () : void;
            function isConnected () : boolean;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function connect (provider : Ext.direct.Provider, eOpts : variant) : void;
            function data (provider : Ext.direct.Provider, e : Ext.direct.Event, eOpts : variant) : void;
            function disconnect (provider : Ext.direct.Provider, eOpts : variant) : void;
            function exception (eOpts : variant) : void;
        }

        class RemotingEvent extends Ext.direct.Event
        {
            // Methods
            function getTid () : variant;
            function setTid (tid : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class RemotingProvider extends Ext.direct.JsonProvider
        {
            // Methods
            function getActions () : variant;
            function getEnableBuffer () : variant;
            function getEnableUrlEncode () : string;
            function getMaxRetries () : number;
            function getNamespace () : variant;
            function getTimeout () : number;
            function getUrl () : string;
            function setActions (actions : variant) : void;
            function setEnableBuffer (enableBuffer : number) : void;
            function setEnableBuffer (enableBuffer : boolean) : void;
            function setEnableUrlEncode (enableUrlEncode : string) : void;
            function setMaxRetries (maxRetries : number) : void;
            function setNamespace (namespace : string) : void;
            function setNamespace (namespace : variant) : void;
            function setTimeout (timeout : number) : void;
            function setUrl (url : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function beforecall (provider : Ext.direct.RemotingProvider, transaction : Ext.direct.Transaction, meta : variant, eOpts : variant) : void;
            function call (provider : Ext.direct.RemotingProvider, transaction : Ext.direct.Transaction, meta : variant, eOpts : variant) : void;
        }

        class Transaction extends Ext.Base
        {
            // Methods
            function constructor (config : variant);
            function getAction () : variant;
            function getArgs () : variant;
            function getCallback () : variant;
            function getData () : variant;
            function getForm () : variant;
            function getId () : variant;
            function getMethod () : variant;
            function getProvider () : variant;
            function getRetryCount () : number;
            function setAction (action : variant) : void;
            function setArgs (args : variant) : void;
            function setCallback (callback : variant) : void;
            function setData (data : variant) : void;
            function setForm (form : variant) : void;
            function setId (id : variant) : void;
            function setMethod (method : variant) : void;
            function setProvider (provider : variant) : void;
            function setRetryCount (retryCount : number) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }
    }

    class dom
    {

        class CompositeElement extends Ext.dom.CompositeElementLite
        {
            // Methods
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class CompositeElementLite extends Ext.Base
        {
            // Properties
            var elements : HTMLElement[];
            // Methods
            function add (els : HTMLElement[], root : HTMLElement) : Ext.dom.CompositeElementLite;
            function add (els : HTMLElement[], root : string) : Ext.dom.CompositeElementLite;
            function add (els : HTMLElement[]) : Ext.dom.CompositeElementLite;
            function add (els : Ext.dom.CompositeElementLite, root : HTMLElement) : Ext.dom.CompositeElementLite;
            function add (els : Ext.dom.CompositeElementLite, root : string) : Ext.dom.CompositeElementLite;
            function add (els : Ext.dom.CompositeElementLite) : Ext.dom.CompositeElementLite;
            function clear () : void;
            function each (fn : function  (el : Ext.dom.Element, c : Ext.dom.CompositeElementLite, index : number) : void, scope : variant) : Ext.dom.CompositeElementLite;
            function each (fn : function  (el : Ext.dom.Element, c : Ext.dom.CompositeElementLite, index : number) : void) : Ext.dom.CompositeElementLite;
            function fill (els : HTMLElement[]) : Ext.dom.CompositeElementLite;
            function fill (els : Ext.dom.CompositeElementLite) : Ext.dom.CompositeElementLite;
            function filter (selector : string) : Ext.dom.CompositeElementLite;
            function filter (selector : function  (el : Ext.dom.Element, index : number) : void) : Ext.dom.CompositeElementLite;
            function getCount () : number;
            function indexOf (el : string) : number;
            function indexOf (el : HTMLElement) : number;
            function indexOf (el : Ext.dom.Element) : number;
            function indexOf (el : number) : number;
            function item (index : number) : Ext.dom.Element;
            function removeElement (el : string, removeDom : boolean) : Ext.dom.CompositeElementLite;
            function removeElement (el : string) : Ext.dom.CompositeElementLite;
            function removeElement (el : HTMLElement, removeDom : boolean) : Ext.dom.CompositeElementLite;
            function removeElement (el : HTMLElement) : Ext.dom.CompositeElementLite;
            function removeElement (el : Ext.dom.Element, removeDom : boolean) : Ext.dom.CompositeElementLite;
            function removeElement (el : Ext.dom.Element) : Ext.dom.CompositeElementLite;
            function removeElement (el : number, removeDom : boolean) : Ext.dom.CompositeElementLite;
            function removeElement (el : number) : Ext.dom.CompositeElementLite;
            function replaceElement (el : string, replacement : string, domReplace : boolean) : Ext.dom.CompositeElementLite;
            function replaceElement (el : string, replacement : string) : Ext.dom.CompositeElementLite;
            function replaceElement (el : string, replacement : Ext.dom.Element, domReplace : boolean) : Ext.dom.CompositeElementLite;
            function replaceElement (el : string, replacement : Ext.dom.Element) : Ext.dom.CompositeElementLite;
            function replaceElement (el : HTMLElement, replacement : string, domReplace : boolean) : Ext.dom.CompositeElementLite;
            function replaceElement (el : HTMLElement, replacement : string) : Ext.dom.CompositeElementLite;
            function replaceElement (el : HTMLElement, replacement : Ext.dom.Element, domReplace : boolean) : Ext.dom.CompositeElementLite;
            function replaceElement (el : HTMLElement, replacement : Ext.dom.Element) : Ext.dom.CompositeElementLite;
            function replaceElement (el : Ext.dom.Element, replacement : string, domReplace : boolean) : Ext.dom.CompositeElementLite;
            function replaceElement (el : Ext.dom.Element, replacement : string) : Ext.dom.CompositeElementLite;
            function replaceElement (el : Ext.dom.Element, replacement : Ext.dom.Element, domReplace : boolean) : Ext.dom.CompositeElementLite;
            function replaceElement (el : Ext.dom.Element, replacement : Ext.dom.Element) : Ext.dom.CompositeElementLite;
            function replaceElement (el : number, replacement : string, domReplace : boolean) : Ext.dom.CompositeElementLite;
            function replaceElement (el : number, replacement : string) : Ext.dom.CompositeElementLite;
            function replaceElement (el : number, replacement : Ext.dom.Element, domReplace : boolean) : Ext.dom.CompositeElementLite;
            function replaceElement (el : number, replacement : Ext.dom.Element) : Ext.dom.CompositeElementLite;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Element extends Ext.Base
        {
            // Properties
            var DISPLAY : number;
            var OFFSETS : number;
            var VISIBILITY : number;
            var defaultUnit : string;
            var dom : HTMLElement;
            var id : string;
            // Methods
            function addCls (names : string, prefix : string, suffix : string) : Ext.dom.Element;
            function addCls (names : string, prefix : string) : Ext.dom.Element;
            function addCls (names : string) : Ext.dom.Element;
            function appendChild (element : HTMLElement) : Ext.dom.Element;
            function appendChild (element : Ext.dom.Element) : Ext.dom.Element;
            function appendTo (el : string) : Ext.dom.Element;
            function appendTo (el : HTMLElement) : Ext.dom.Element;
            function appendTo (el : Ext.dom.Element) : Ext.dom.Element;
            function applyStyles (styles : string) : Ext.dom.Element;
            function applyStyles (styles : variant) : Ext.dom.Element;
            function applyStyles (styles : function  () : void) : Ext.dom.Element;
            function child (selector : string, returnDom : boolean) : variant;
            function child (selector : string) : variant;
            function contains (element : HTMLElement) : boolean;
            function contains (element : string) : boolean;
            function createChild (config : variant, insertBefore : HTMLElement, returnDom : boolean) : Ext.dom.Element;
            function createChild (config : variant, insertBefore : HTMLElement) : Ext.dom.Element;
            function createChild (config : variant, returnDom : boolean) : Ext.dom.Element;
            function createChild (config : variant) : Ext.dom.Element;
            function cssTranslate () : void;
            function down (selector : string, returnDom : boolean) : variant;
            function down (selector : string) : variant;
            function findParent (simpleSelector : string, maxDepth : number, returnEl : boolean) : variant;
            function findParent (simpleSelector : string, maxDepth : number) : variant;
            function findParent (simpleSelector : string, maxDepth : string, returnEl : boolean) : variant;
            function findParent (simpleSelector : string, maxDepth : string) : variant;
            function findParent (simpleSelector : string, maxDepth : HTMLElement, returnEl : boolean) : variant;
            function findParent (simpleSelector : string, maxDepth : HTMLElement) : variant;
            function findParent (simpleSelector : string, maxDepth : Ext.dom.Element, returnEl : boolean) : variant;
            function findParent (simpleSelector : string, maxDepth : Ext.dom.Element) : variant;
            function findParent (simpleSelector : string, returnEl : boolean) : variant;
            function findParent (simpleSelector : string) : variant;
            function findParentNode (simpleSelector : string, maxDepth : number, returnEl : boolean) : variant;
            function findParentNode (simpleSelector : string, maxDepth : number) : variant;
            function findParentNode (simpleSelector : string, maxDepth : string, returnEl : boolean) : variant;
            function findParentNode (simpleSelector : string, maxDepth : string) : variant;
            function findParentNode (simpleSelector : string, maxDepth : HTMLElement, returnEl : boolean) : variant;
            function findParentNode (simpleSelector : string, maxDepth : HTMLElement) : variant;
            function findParentNode (simpleSelector : string, maxDepth : Ext.dom.Element, returnEl : boolean) : variant;
            function findParentNode (simpleSelector : string, maxDepth : Ext.dom.Element) : variant;
            function findParentNode (simpleSelector : string, returnEl : boolean) : variant;
            function findParentNode (simpleSelector : string) : variant;
            function first (selector : string, returnDom : boolean) : variant;
            function first (selector : string) : variant;
            function first (returnDom : boolean) : variant;
            function first () : variant;
            function getAlignToXY (element : variant, position : string, offsets : variant[]) : variant[];
            function getAlignToXY (element : variant, position : string) : variant[];
            function getAlignToXY (element : variant, offsets : variant[]) : variant[];
            function getAlignToXY (element : variant) : variant[];
            function getAttribute (name : string, namespace : string) : string;
            function getAttribute (name : string) : string;
            function getBorderWidth (side : string) : number;
            function getBottom () : number;
            function getBox (contentBox : boolean, local : boolean) : variant;
            function getBox (contentBox : boolean) : variant;
            function getBox () : variant;
            function getHeight (contentHeight : boolean) : number;
            function getHeight () : number;
            function getHtml () : string;
            function getLeft () : number;
            function getMargin (sides : string) : variant;
            function getMargin () : variant;
            function getOffsetsTo (element : variant) : variant[];
            function getOuterHeight () : void;
            function getOuterWidth () : void;
            function getPadding (side : string) : number;
            function getPageBox (asRegion : boolean) : variant;
            function getPageBox () : variant;
            function getRight () : number;
            function getScrollParent () : void;
            function getSize (contentSize : boolean) : variant;
            function getSize () : variant;
            function getStyle (prop : string) : string;
            function getTop () : number;
            function getValue (asNumber : boolean) : variant;
            function getWidth (contentWidth : boolean) : number;
            function getWidth () : number;
            function getX () : number;
            function getXY () : variant[];
            function getY () : number;
            function hasCls (name : string) : boolean;
            function hide () : void;
            function insertAfter (el : string) : Ext.dom.Element;
            function insertAfter (el : HTMLElement) : Ext.dom.Element;
            function insertAfter (el : Ext.dom.Element) : Ext.dom.Element;
            function insertBefore (el : string) : Ext.dom.Element;
            function insertBefore (el : HTMLElement) : Ext.dom.Element;
            function insertBefore (el : Ext.dom.Element) : Ext.dom.Element;
            function insertFirst (element : string) : Ext.dom.Element;
            function insertFirst (element : HTMLElement) : Ext.dom.Element;
            function insertFirst (element : Ext.dom.Element) : Ext.dom.Element;
            function insertHtml (where : string, html : string, returnEl : boolean) : variant;
            function insertHtml (where : string, html : string) : variant;
            function insertSibling (el : string, where : string, returnDom : boolean) : Ext.dom.Element;
            function insertSibling (el : string, where : string) : Ext.dom.Element;
            function insertSibling (el : string, returnDom : boolean) : Ext.dom.Element;
            function insertSibling (el : string) : Ext.dom.Element;
            function insertSibling (el : HTMLElement, where : string, returnDom : boolean) : Ext.dom.Element;
            function insertSibling (el : HTMLElement, where : string) : Ext.dom.Element;
            function insertSibling (el : HTMLElement, returnDom : boolean) : Ext.dom.Element;
            function insertSibling (el : HTMLElement) : Ext.dom.Element;
            function insertSibling (el : Ext.dom.Element, where : string, returnDom : boolean) : Ext.dom.Element;
            function insertSibling (el : Ext.dom.Element, where : string) : Ext.dom.Element;
            function insertSibling (el : Ext.dom.Element, returnDom : boolean) : Ext.dom.Element;
            function insertSibling (el : Ext.dom.Element) : Ext.dom.Element;
            function insertSibling (el : variant, where : string, returnDom : boolean) : Ext.dom.Element;
            function insertSibling (el : variant, where : string) : Ext.dom.Element;
            function insertSibling (el : variant, returnDom : boolean) : Ext.dom.Element;
            function insertSibling (el : variant) : Ext.dom.Element;
            function insertSibling (el : variant[], where : string, returnDom : boolean) : Ext.dom.Element;
            function insertSibling (el : variant[], where : string) : Ext.dom.Element;
            function insertSibling (el : variant[], returnDom : boolean) : Ext.dom.Element;
            function insertSibling (el : variant[]) : Ext.dom.Element;
            function is (selector : string) : boolean;
            function isDescendent () : void;
            function isStyle (style : string, value : string) : boolean;
            function last (selector : string, returnDom : boolean) : variant;
            function last (selector : string) : variant;
            function last (returnDom : boolean) : variant;
            function last () : variant;
            function mask () : void;
            function next (selector : string, returnDom : boolean) : variant;
            function next (selector : string) : variant;
            function next (returnDom : boolean) : variant;
            function next () : variant;
            function parent (selector : string, returnDom : boolean) : variant;
            function parent (selector : string) : variant;
            function parent (returnDom : boolean) : variant;
            function parent () : variant;
            function prev (selector : string, returnDom : boolean) : variant;
            function prev (selector : string) : variant;
            function prev (returnDom : boolean) : variant;
            function prev () : variant;
            function query (selector : string) : HTMLElement[];
            function removeCls (names : string, prefix : string, suffix : string) : Ext.dom.Element;
            function removeCls (names : string, prefix : string) : Ext.dom.Element;
            function removeCls (names : string) : Ext.dom.Element;
            function repaint () : Ext.dom.Element;
            function replace (element : string) : Ext.dom.Element;
            function replace (element : HTMLElement) : Ext.dom.Element;
            function replace (element : Ext.dom.Element) : Ext.dom.Element;
            function replaceCls (oldName : string, newName : string, prefix : string, suffix : string) : Ext.dom.Element;
            function replaceCls (oldName : string, newName : string, prefix : string) : Ext.dom.Element;
            function replaceCls (oldName : string, newName : string) : Ext.dom.Element;
            function replaceWith (el : string) : Ext.dom.Element;
            function replaceWith (el : HTMLElement) : Ext.dom.Element;
            function replaceWith (el : Ext.dom.Element) : Ext.dom.Element;
            function replaceWith (el : variant) : Ext.dom.Element;
            function select (selector : string, composite : boolean) : variant;
            function select (selector : HTMLElement[], composite : boolean) : variant;
            function set (attributes : variant, useSet : boolean) : Ext.dom.Element;
            function set (attributes : variant) : Ext.dom.Element;
            function setBottom (bottom : string) : Ext.dom.Element;
            function setBox (box : variant) : Ext.dom.Element;
            function setCls (className : string) : void;
            function setCls (className : variant[]) : void;
            function setHeight (height : number) : Ext.dom.Element;
            function setHeight (height : string) : Ext.dom.Element;
            function setHtml (html : string) : void;
            function setLeft (left : string) : Ext.dom.Element;
            function setMaxHeight (height : number) : Ext.dom.Element;
            function setMaxHeight (height : string) : Ext.dom.Element;
            function setMaxWidth (width : number) : Ext.dom.Element;
            function setMaxWidth (width : string) : Ext.dom.Element;
            function setMinHeight (height : number) : Ext.dom.Element;
            function setMinHeight (height : string) : Ext.dom.Element;
            function setMinWidth (width : number) : Ext.dom.Element;
            function setMinWidth (width : string) : Ext.dom.Element;
            function setRight (right : string) : Ext.dom.Element;
            function setSize (width : number, height : number) : Ext.dom.Element;
            function setSize (width : number, height : string) : Ext.dom.Element;
            function setSize (width : string, height : number) : Ext.dom.Element;
            function setSize (width : string, height : string) : Ext.dom.Element;
            function setStyle (property : string, value : string) : Ext.dom.Element;
            function setStyle (property : string) : Ext.dom.Element;
            function setStyle (property : variant, value : string) : Ext.dom.Element;
            function setStyle (property : variant) : Ext.dom.Element;
            function setTop (top : string) : Ext.dom.Element;
            function setTopLeft () : void;
            function setVisibilityMode (mode : variant) : Ext.dom.Element;
            function setVisible (visible : boolean) : Ext.dom.Element;
            function setWidth (width : number) : Ext.dom.Element;
            function setWidth (width : string) : Ext.dom.Element;
            function setX (x : number) : Ext.dom.Element;
            function setXY (pos : number[]) : Ext.dom.Element;
            function setY (y : number) : Ext.dom.Element;
            function show () : void;
            function toggleCls (className : string) : Ext.dom.Element;
            function translatePoints (x : number, y : number) : variant;
            function translatePoints (x : number) : variant;
            function translatePoints (x : variant[], y : number) : variant;
            function translatePoints (x : variant[]) : variant;
            function unmask () : void;
            function up (simpleSelector : string, maxDepth : number) : variant;
            function up (simpleSelector : string, maxDepth : string) : variant;
            function up (simpleSelector : string, maxDepth : HTMLElement) : variant;
            function up (simpleSelector : string, maxDepth : Ext.dom.Element) : variant;
            function up (simpleSelector : string) : variant;
            function wrap (config : variant, domNode : boolean) : variant;
            function wrap (config : variant) : variant;
            function wrap (domNode : boolean) : variant;
            function wrap () : variant;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function fly (element : string, named : string) : Ext.dom.Element;
            static function fly (element : string) : Ext.dom.Element;
            static function fly (element : HTMLElement, named : string) : Ext.dom.Element;
            static function fly (element : HTMLElement) : Ext.dom.Element;
            static function fromPoint (x : number, y : number) : string;
            static function get (element : string) : Ext.dom.Element;
            static function get (element : HTMLElement) : Ext.dom.Element;
            static function get (element : Ext.dom.Element) : Ext.dom.Element;
            static function getName () : string;
            static function normalize (prop : string) : string;
            static function parseBox (box : number) : variant;
            static function parseBox (box : string) : variant;
            static function parseStyles (styles : string) : variant;
            static function select (selector : string, composite : boolean, root : HTMLElement) : variant;
            static function select (selector : string, composite : boolean, root : string) : variant;
            static function select (selector : string, composite : boolean) : variant;
            static function select (selector : HTMLElement[], composite : boolean, root : HTMLElement) : variant;
            static function select (selector : HTMLElement[], composite : boolean, root : string) : variant;
            static function select (selector : HTMLElement[], composite : boolean) : variant;
            static function serializeForm (form : variant) : string;
            static function unitizeBox (box : number, units : string) : string;
            static function unitizeBox (box : string, units : string) : string;
            // Events
            function doubletap (event : Ext.event.Event, node : HTMLElement, options : variant, eOpts : variant) : void;
            function longpress (event : Ext.event.Event, node : HTMLElement, options : variant, eOpts : variant) : void;
            function painted (this_ : Ext.dom.Element, eOpts : variant) : void;
            function pinch (event : Ext.event.Event, node : HTMLElement, options : variant, eOpts : variant) : void;
            function pinchend (event : Ext.event.Event, node : HTMLElement, options : variant, eOpts : variant) : void;
            function pinchstart (event : Ext.event.Event, node : HTMLElement, options : variant, eOpts : variant) : void;
            function resize (this_ : Ext.dom.Element, eOpts : variant) : void;
            function rotate (event : Ext.event.Event, node : HTMLElement, options : variant, eOpts : variant) : void;
            function rotateend (event : Ext.event.Event, node : HTMLElement, options : variant, eOpts : variant) : void;
            function rotatestart (event : Ext.event.Event, node : HTMLElement, options : variant, eOpts : variant) : void;
            function singletap (event : Ext.event.Event, node : HTMLElement, options : variant, eOpts : variant) : void;
            function swipe (event : Ext.event.Event, node : HTMLElement, options : variant, eOpts : variant) : void;
            function taphold (event : Ext.event.Event, node : HTMLElement, options : variant, eOpts : variant) : void;
        }

        class Query extends Ext.Base
        {
            // Methods
            function is (el : string, selector : string) : boolean;
            function is (el : HTMLElement, selector : string) : boolean;
            function is (el : variant[], selector : string) : boolean;
            function select (selector : string, root : HTMLElement) : HTMLElement[];
            function select (selector : string, root : string) : HTMLElement[];
            function select (selector : string) : HTMLElement[];
            function selectNode (selector : string, root : HTMLElement) : HTMLElement;
            function selectNode (selector : string, root : string) : HTMLElement;
            function selectNode (selector : string) : HTMLElement;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }
    }

    class draw
    {

        class Animator extends Ext.Base
        {
            // Properties
            // Methods
            static function add (animation : variant) : void;
            static function addFrameCallback (callback : function  () : void, scope : variant) : string;
            static function animationTime () : number;
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function cancel (id : string) : void;
            static function contains (animation : variant) : boolean;
            static function destroy () : void;
            static function empty () : boolean;
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function initConfig (instanceConfig : variant) : variant;
            static function remove (animation : variant) : void;
            static function removeFrameCallback (id : string) : void;
            static function schedule (callback : function  () : void, scope : variant) : string;
            static function statics () : Ext.Class;
            static function step (frameTime : number) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Color extends Ext.Base
        {
            // Methods
            function constructor (red : number, green : number, blue : number, alpha : number);
            function constructor (red : number, green : number, blue : number);
            function createDarker (factor : number) : Ext.draw.Color;
            function createDarker () : Ext.draw.Color;
            function createLighter (factor : number) : Ext.draw.Color;
            function createLighter () : Ext.draw.Color;
            function getGrayscale () : number;
            function getHSL (target : variant[]) : variant[];
            function getHSL () : variant[];
            function setFromString (str : string) : variant;
            function setHSL (h : number, s : number, l : number) : variant;
            function toHex (color : string) : string;
            function toHex (color : variant[]) : string;
            override function toString () : string;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create (red : Ext.draw.Color, green : number, blue : number, alpha : number) : Ext.draw.Color;
            static function create (red : Ext.draw.Color, green : number, blue : number) : Ext.draw.Color;
            static function create (red : Ext.draw.Color, green : number) : Ext.draw.Color;
            static function create (red : Ext.draw.Color) : Ext.draw.Color;
            static function create (red : string, green : number, blue : number, alpha : number) : Ext.draw.Color;
            static function create (red : string, green : number, blue : number) : Ext.draw.Color;
            static function create (red : string, green : number) : Ext.draw.Color;
            static function create (red : string) : Ext.draw.Color;
            static function create (red : number[], green : number, blue : number, alpha : number) : Ext.draw.Color;
            static function create (red : number[], green : number, blue : number) : Ext.draw.Color;
            static function create (red : number[], green : number) : Ext.draw.Color;
            static function create (red : number[]) : Ext.draw.Color;
            static function create (red : number, green : number, blue : number, alpha : number) : Ext.draw.Color;
            static function create (red : number, green : number, blue : number) : Ext.draw.Color;
            static function create (red : number, green : number) : Ext.draw.Color;
            static function create (red : number) : Ext.draw.Color;
            static function create () : Ext.draw.Color;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function fly (red : number, green : number, blue : number, alpha : number) : Ext.draw.Color;
            static function fly (red : number, green : number, blue : number) : Ext.draw.Color;
            static function fly (red : number, green : number) : Ext.draw.Color;
            static function fly (red : number) : Ext.draw.Color;
            static function fly (red : string, green : number, blue : number, alpha : number) : Ext.draw.Color;
            static function fly (red : string, green : number, blue : number) : Ext.draw.Color;
            static function fly (red : string, green : number) : Ext.draw.Color;
            static function fly (red : string) : Ext.draw.Color;
            static function fromHSL (h : number, s : number, l : number) : Ext.draw.Color;
            static function fromString (string : string) : Ext.draw.Color;
            static function getName () : string;
        }

        class Component extends Ext.Container
        {
            // Methods
            function constructor (config : variant);
            override function destroy () : void;
            function getBackground () : variant;
            function getResizeHandler () : function () : void;
            function getSprites () : variant;
            function getSurface (id : string) : Ext.draw.Surface;
            function getSurface () : Ext.draw.Surface;
            override function initialize () : void;
            function onPlaceWatermark () : void;
            function renderFrame () : void;
            function setBackground (background : variant) : void;
            function setResizeHandler (resizeHandler : function  () : void) : void;
            function setSprites (sprites : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Draw extends Ext.Base
        {
            // Properties
            // Methods
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function degrees (radian : number) : number;
            static function destroy () : void;
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function initConfig (instanceConfig : variant) : variant;
            static function isBBoxIntersect (bbox1 : variant, bbox2 : variant, padding : number) : boolean;
            static function isBBoxIntersect (bbox1 : variant, bbox2 : variant) : boolean;
            static function rad (degrees : number) : number;
            static function reflectFn (a : variant) : variant;
            static function smooth (dataX : variant, dataY : variant, value : variant) : variant;
            static function spline (points : variant[]) : void;
            static function statics () : Ext.Class;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Group extends Ext.Base
        {
            // Methods
            function add (sprite : Ext.draw.sprite.Sprite) : void;
            function addAll (sprites : variant[]) : void;
            function addAll (sprites : Ext.draw.sprite.Sprite) : void;
            function clear (destroySprite : boolean) : void;
            function clear () : void;
            function each (fn : function  () : void) : void;
            function get (id : string) : Ext.draw.sprite.Sprite;
            function get (id : number) : Ext.draw.sprite.Sprite;
            function getAt (index : number) : Ext.draw.sprite.Sprite;
            function getBBox (isWithTransform : variant) : void;
            function getSurface () : variant;
            function hide (o : boolean) : void;
            function remove (sprite : Ext.draw.sprite.Sprite, destroySprite : boolean) : void;
            function remove (sprite : Ext.draw.sprite.Sprite) : void;
            function setAttributes (o : variant) : void;
            function setDirty () : void;
            function setSurface (surface : variant) : void;
            function show (o : boolean) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class LimitedCache extends Ext.Base
        {
            // Methods
            function constructor (config : variant);
            function clear () : void;
            function get (id : string, args : variant) : variant;
            function getFeeder () : function () : void;
            function getLimit () : number;
            function getScope () : variant;
            function setFeeder (feeder : function  () : void) : number;
            function setLimit (limit : number) : void;
            function setScope (scope : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Matrix extends Ext.Base
        {
            // Properties
            var a : number;
            // Methods
            function constructor (xx : number, xy : number, yx : number, yy : number, dx : number, dy : number);
            function append (xx : number, xy : number, yx : number, yy : number, dx : number, dy : number) : Ext.draw.Matrix;
            function appendMatrix (matrix : Ext.draw.Matrix) : Ext.draw.Matrix;
            function clone () : Ext.draw.Matrix;
            function equals (matrix : Ext.draw.Matrix) : boolean;
            function flipX () : Ext.draw.Matrix;
            function flipY () : Ext.draw.Matrix;
            function getDX () : number;
            function getDY () : number;
            function getScaleX () : number;
            function getScaleY () : number;
            function getXX () : number;
            function getXY () : number;
            function getYX () : number;
            function getYY () : number;
            function inverse (target : Ext.draw.Matrix) : Ext.draw.Matrix;
            function inverse () : Ext.draw.Matrix;
            function isIdentity () : boolean;
            function multiply (matrix : Ext.draw.Matrix) : Ext.draw.Matrix;
            function prepend (xx : number, xy : number, yx : number, yy : number, dx : number, dy : number) : Ext.draw.Matrix;
            function prependMatrix (matrix : Ext.draw.Matrix) : Ext.draw.Matrix;
            function reset () : Ext.draw.Matrix;
            function rotate (angle : number, rcx : Nullable.<number>, rcy : Nullable.<number>, prepend : boolean) : Ext.draw.Matrix;
            function rotate (angle : number, rcx : Nullable.<number>, rcy : Nullable.<number>) : Ext.draw.Matrix;
            function rotateFromVector (x : number, y : number, prepend : boolean) : Ext.draw.Matrix;
            function rotateFromVector (x : number, y : number) : Ext.draw.Matrix;
            function scale (sx : number, sy : number, scx : number, scy : number, prepend : boolean) : Ext.draw.Matrix;
            function scale (sx : number, sy : number, scx : number, scy : number) : Ext.draw.Matrix;
            function set (xx : number, xy : number, yx : number, yy : number, dx : number, dy : number) : Ext.draw.Matrix;
            function skewX (angle : number) : Ext.draw.Matrix;
            function skewY (angle : number) : Ext.draw.Matrix;
            function split () : variant;
            function toArray () : variant[];
            function toContext (ctx : variant) : Ext.draw.Matrix;
            override function toString () : string;
            function toSvg () : string;
            function toVerticalArray () : variant;
            function transformBBox (bbox : variant, radius : number, target : variant) : variant;
            function transformBBox (bbox : variant, radius : number) : variant;
            function transformBBox (bbox : variant, target : variant) : variant;
            function transformBBox (bbox : variant) : variant;
            function transformList (list : variant[]) : variant[];
            function transformPoint (point : variant[]) : variant[];
            function translate (x : number, y : number, prepend : boolean) : Ext.draw.Matrix;
            function translate (x : number, y : number) : Ext.draw.Matrix;
            function x (x : number, y : number) : number;
            function y (x : number, y : number) : number;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create (mat : variant) : Ext.draw.Matrix;
            static function createAffineMatrixFromTwoPair (x0 : number, y0 : number, x1 : number, y1 : number, x0p : number, y0p : number, x1p : number, y1p : number) : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function createPanZoomFromTwoPair (x0 : number, y0 : number, x1 : number, y1 : number, x0p : number, y0p : number, x1p : number, y1p : number) : void;
            static function fly (elements : variant[]) : Ext.draw.Matrix;
            static function getName () : string;
        }

        class Path extends Ext.Base
        {
            // Methods
            function constructor (pathString : string);
            function arc (x : number, y : number, radius : number, startAngle : number, endAngle : number, anticlockwise : number) : void;
            function arcSvg (rx : number, ry : number, rotation : number, fA : number, fS : number, x2 : number, y2 : number) : void;
            function arcTo (x1 : number, y1 : number, x2 : number, y2 : number, rx : number, ry : number, rotation : number) : void;
            function arcTo (x1 : number, y1 : number, x2 : number, y2 : number, rx : number, ry : number) : void;
            function arcTo (x1 : number, y1 : number, x2 : number, y2 : number, rx : number) : void;
            function arcTo (x1 : number, y1 : number, x2 : number, y2 : number) : void;
            function bezierCurveTo (cx1 : number, cy1 : number, cx2 : number, cy2 : number, x : number, y : number) : void;
            function clear () : void;
            function clone () : Ext.draw.Path;
            function closePath () : void;
            function ellipse (cx : number, cy : number, radiusX : number, radiusY : number, rotation : number, startAngle : number, endAngle : number, anticlockwise : number) : void;
            function fromStripes (stripes : variant[]) : void;
            function fromSvgString (pathString : string) : void;
            function getDimension (target : variant) : variant;
            function getDimension () : variant;
            function getDimensionWithTransform (matrix : Ext.draw.Matrix, target : variant) : variant;
            function getDimensionWithTransform (matrix : Ext.draw.Matrix) : variant;
            function isPointInPath (x : number, y : number) : boolean;
            function lineTo (x : number, y : number) : void;
            function moveTo (x : number, y : number) : void;
            function quadraticCurveTo (cx : number, cy : number, x : number, y : number) : void;
            function rect (x : number, y : number, width : number, height : number) : void;
            override function toString () : string;
            function toStripes (target : variant[]) : variant[];
            function toStripes () : variant[];
            function transform (matrix : Ext.draw.Matrix) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class SegmentTree extends Ext.Base
        {
            // Methods
            function constructor (config : variant);
            function getAggregation (min : number, max : number, estStep : number) : variant;
            function getStrategy () : string;
            function setData (dataX : number, dataOpen : number, dataHigh : number, dataLow : number, dataClose : number) : void;
            function setStrategy (strategy : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class Surface extends Ext.Component
        {
            // Properties
            var devicePixelRatio : variant;
            // Methods
            function constructor (config : variant);
            function add () : void;
            function clear () : void;
            function getBackground () : variant;
            function getDirty () : boolean;
            function getGroups () : variant[];
            function getItems () : Ext.draw.Group;
            function getRegion () : variant[];
            function onAdd (sprite : Ext.draw.sprite.Sprite) : void;
            function remove (sprite : Ext.draw.sprite.Sprite, destroySprite : boolean) : void;
            function removeAll () : void;
            function renderFrame () : void;
            function repaint () : void;
            function resetTransform () : void;
            function roundPixel (num : number) : number;
            function setBackground (background : variant) : void;
            function setGroups (groups : variant[]) : void;
            function setItems (items : Ext.draw.Group) : void;
            function setRegion (region : variant[]) : void;
            function waitFor (surface : Ext.draw.Surface) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            static function stableSort (list : variant[]) : void;
        }

        class TextMeasurer extends Ext.Base
        {
            // Properties
            // Methods
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function destroy () : void;
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function initConfig (instanceConfig : variant) : variant;
            static function measureText (text : string, font : string) : variant;
            static function measureTextSingleLine (text : string, font : string) : variant;
            static function statics () : Ext.Class;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class TimingFunctions extends Ext.Base
        {
            // Properties
            // Methods
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function destroy () : void;
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function initConfig (instanceConfig : variant) : variant;
            static function statics () : Ext.Class;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class engine
        {

            class Canvas extends Ext.draw.Surface
            {
                // Methods
                function getHighPrecision () : boolean;
                function setHighPrecision (highPrecision : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Svg extends Ext.draw.Surface
            {
                // Methods
                function createSvgNode (type : string) : variant;
                function getHighPrecision () : boolean;
                function setHighPrecision (highPrecision : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class SvgContext extends Ext.Base
            {
                // Methods
                function constructor (SvgSurface : variant);
                function arc (x : number, y : number, radius : number, startAngle : number, endAngle : number, anticlockwise : number) : void;
                function arcSvg (r1 : number, r2 : number, rotation : number, large : number, swipe : number, x2 : number, y2 : number) : void;
                function arcTo (x1 : number, y1 : number, x2 : number, y2 : number, radiusX : number, radiusY : number, rotation : number) : void;
                function beginPath () : void;
                function bezierCurveTo (x1 : number, y1 : number, x2 : number, y2 : number, x3 : number, y3 : number) : void;
                function clear () : void;
                function closePath () : void;
                function createLinearGradient (x0 : number, y0 : number, x1 : number, y1 : number) : Ext.draw.engine.SvgContext.Gradient;
                function createRadialGradient (x0 : number, y0 : number, r0 : number, x1 : number, y1 : number, r1 : number) : Ext.draw.engine.SvgContext.Gradient;
                function drawImage (image : HTMLElement, sx : number, sy : number, sw : number, sh : number, dx : number, dy : number, dw : number, dh : number) : void;
                function ellipse (x : number, y : number, radiusX : number, radiusY : number, rotation : number, startAngle : number, endAngle : number, anticlockwise : number) : void;
                function fill () : void;
                function fillRect (x : number, y : number, width : number, height : number) : void;
                function fillStroke (attr : variant, transformFillStroke : boolean) : void;
                function fillStroke (attr : variant) : void;
                function fillText (text : string, x : number, y : number) : void;
                function lineTo (x : number, y : number) : void;
                function moveTo (x : number, y : number) : void;
                function rect (x : number, y : number, width : number, height : number) : void;
                function restore () : void;
                function save () : void;
                function setTransform (xx : number, yx : number, xy : number, yy : number, dx : number, dy : number) : void;
                function stroke () : void;
                function strokeRect (x : number, y : number, width : number, height : number) : void;
                function strokeText (text : string, x : number, y : number) : void;
                function transform (xx : number, yx : number, xy : number, yy : number, dx : number, dy : number) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;

                class Gradient extends Ext.Base
                {
                    // Methods
                    function constructor (ctx : variant, surface : variant, element : variant, compression : variant);
                    function addColorStop (offset : number, color : string) : void;
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : Ext.Base;
                    static function callParent (args : variant) : void;
                    static function create () : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : string;
                }
            }
        }

        class gradient
        {

            class Gradient extends Ext.Base
            {
                // Methods
                function constructor (config : variant);
                function generateGradient (ctx : Ext.draw.engine.SvgContext, bbox : variant) : variant;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Linear extends Ext.draw.gradient.Gradient
            {
                // Methods
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Radial extends Ext.draw.gradient.Gradient
            {
                // Methods
                function getEnd () : variant;
                function getStart () : variant;
                function setEnd (end : variant) : void;
                function setStart (start : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }

        class modifier
        {

            class Animation extends Ext.draw.modifier.Modifier
            {
                // Methods
                function clearDurationOn (attrs : variant) : void;
                function clearEasingOn (attrs : variant) : void;
                function getCustomDuration () : variant;
                function getCustomEasings () : variant;
                function getDuration () : number;
                function getEasing () : function () : void;
                function setCustomDuration (customDuration : variant) : void;
                function setCustomEasings (customEasings : variant) : void;
                function setDuration (duration : number) : void;
                function setDurationOn (attrs : variant, duration : string) : void;
                function setEasing (easing : function  () : void) : void;
                function setEasingOn (attrs : variant, easing : string) : void;
                function stop () : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Highlight extends Ext.draw.modifier.Modifier
            {
                // Methods
                function filterChanges (attr : variant, changes : variant) : variant;
                function getEnabled () : boolean;
                function getHighlightStyle () : variant;
                function setEnabled (enabled : boolean) : void;
                function setHighlightStyle (highlightStyle : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Modifier extends Ext.Base
            {
                // Methods
                function constructor (config : variant);
                function getNext () : Ext.draw.modifier.Modifier;
                function getPrevious () : Ext.draw.modifier.Modifier;
                function getSprite () : Ext.draw.sprite.Sprite;
                function popUp (attributes : variant, changes : variant) : void;
                function prepareAttributes (attr : variant) : void;
                function pushDown (attr : variant, changes : variant) : variant;
                function setNext (next : Ext.draw.modifier.Modifier) : void;
                function setPrevious (previous : Ext.draw.modifier.Modifier) : void;
                function setSprite (sprite : Ext.draw.sprite.Sprite) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Target extends Ext.draw.modifier.Modifier
            {
                // Methods
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }

        class sprite
        {


            class Arc extends Ext.draw.sprite.Circle
            {
                // Methods
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }



            class Circle extends Ext.draw.sprite.Path
            {
                // Methods
                function updatePath (path : variant, attr : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Composite extends Ext.draw.sprite.Sprite
            {
                // Methods
                function add (sprite : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Ellipse extends Ext.draw.sprite.Path
            {
                // Methods
                function updatePath (path : variant, attr : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class EllipticalArc extends Ext.draw.sprite.Ellipse
            {
                // Methods
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Image extends Ext.draw.sprite.Rect
            {
                // Methods
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Instancing extends Ext.draw.sprite.Sprite
            {
                // Methods
                function constructor (config : variant);
                function createInstance (config : variant, data : variant, bypassNormalization : boolean, avoidCopy : boolean) : variant;
                function createInstance (config : variant, data : variant, bypassNormalization : boolean) : variant;
                function createInstance (config : variant, data : variant) : variant;
                function createInstance (config : variant, bypassNormalization : boolean, avoidCopy : boolean) : variant;
                function createInstance (config : variant, bypassNormalization : boolean) : variant;
                function createInstance (config : variant) : variant;
                override function getBBox () : void;
                function getBBoxFor (index : number, isWithoutTransform : boolean) : variant;
                function getBBoxFor (index : number) : variant;
                function getTemplate () : variant;
                function render (surface : variant, ctx : variant, clipRegion : variant, region : variant) : variant;
                function setAttributesFor (index : number, changes : variant, bypassNormalization : boolean) : void;
                function setAttributesFor (index : number, changes : variant) : void;
                function setTemplate (template : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Path extends Ext.draw.sprite.Sprite
            {
                // Methods
                function render (surface : variant, ctx : variant) : variant;
                function updatePath (path : Ext.draw.Path, attr : variant) : void;
                override function updatePlainBBox (plain : variant) : void;
                function updateTransformedBBox (transform : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Rect extends Ext.draw.sprite.Path
            {
                // Methods
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Sector extends Ext.draw.sprite.Path
            {
                // Methods
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Sprite extends Ext.Base
            {
                // Properties
                var attr : variant;
                // Methods
                function constructor (config : variant);
                override function destroy () : void;
                function getBBox (isWithoutTransform : boolean) : void;
                function getBBox () : void;
                function getBBoxCenter (isWithoutTransform : boolean) : variant[];
                function getParent () : variant;
                function hide () : Ext.draw.sprite.Sprite;
                function preRender () : void;
                function render (surface : Ext.draw.Surface, ctx : variant, region : variant[]) : variant;
                function setAttributes (changes : variant, bypassNormalization : boolean, avoidCopy : boolean) : void;
                function setAttributes (changes : variant, bypassNormalization : boolean) : void;
                function setAttributes (changes : variant) : void;
                function setParent (parent : variant) : void;
                function show () : Ext.draw.sprite.Sprite;
                function updatePlainBBox (plain : variant) : void;
                function updateTransformedBBox (transform : variant, plain : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Text extends Ext.draw.sprite.Sprite
            {
                // Methods
                function render (surface : variant, ctx : variant) : variant;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }
    }

    class env
    {

        class Browser extends Ext.Base
        {
            // Properties
            var engineName : string;
            var engineVersion : Ext.Version;
            var isSecure : boolean;
            var isStrict : boolean;
            var name : string;
            var userAgent : string;
            var version : Ext.Version;
            // Methods
            function constructor (userAgent : variant);
            function is (value : string) : boolean;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Feature extends Ext.Base
        {
            // Methods
            function constructor ();
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class OS extends Ext.Base
        {
            // Properties
            var name : string;
            var version : Ext.Version;
            // Methods
            function constructor (userAgent : variant, platform : variant, browserScope : variant);
            function is (value : string) : boolean;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }
    }

    class event
    {



        class Dom
        {
            // Properties
            var distance : number;
            var pageX : number;
            var pageY : number;
            var target : HTMLElement;
            // Methods
            function constructor (event : variant);
            function getTarget (selector : string, maxDepth : number, returnEl : boolean) : HTMLElement;
            function getTarget (selector : string, maxDepth : number) : HTMLElement;
            function getTarget (selector : string, maxDepth : variant, returnEl : boolean) : HTMLElement;
            function getTarget (selector : string, maxDepth : variant) : HTMLElement;
            function getTarget (selector : string, returnEl : boolean) : HTMLElement;
            function getTarget (selector : string) : HTMLElement;
            function getTarget (maxDepth : number, returnEl : boolean) : HTMLElement;
            function getTarget (maxDepth : number) : HTMLElement;
            function getTarget (maxDepth : variant, returnEl : boolean) : HTMLElement;
            function getTarget (maxDepth : variant) : HTMLElement;
            function getTarget (returnEl : boolean) : HTMLElement;
            function getTarget () : HTMLElement;
            function getTime () : Date;
            function preventDefault () : void;
        }

        class Event extends Ext.Base
        {
            // Properties
            var angle : number;
            var direction : number;
            var duration : number;
            var rotation : number;
            var scale : number;
            // Methods
            function stopEvent () : Ext.event.Event;
            function stopPropagation () : Ext.event.Event;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }



        class publisher
        {




            class Dom extends Ext.event.publisher.Publisher
            {
                // Methods
                function constructor ();
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }



            class Publisher extends Ext.Base
            {
                // Methods
                function constructor ();
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

        }

        class recognizer
        {






            class MultiTouch extends Ext.event.recognizer.Touch
            {
                // Methods
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }


            class Recognizer extends Ext.Base
            {
                // Methods
                function constructor (config : variant);
                function getCallbackScope () : variant;
                function getOnFailed () : variant;
                function getOnRecognized () : variant;
                function setCallbackScope (callbackScope : variant) : void;
                function setOnFailed (onFailed : variant) : void;
                function setOnRecognized (onRecognized : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }


            class SingleTouch extends Ext.event.recognizer.Touch
            {
                // Methods
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Swipe extends Ext.event.recognizer.SingleTouch
            {
                // Methods
                function getMaxDuration () : number;
                function getMaxOffset () : number;
                function getMinDistance () : number;
                function setMaxDuration (maxDuration : number) : void;
                function setMaxOffset (maxOffset : number) : void;
                function setMinDistance (minDistance : number) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }


            class Touch extends Ext.event.recognizer.Recognizer
            {
                // Methods
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

        }
    }

    class feature extends Ext.env.Feature
    {
        // Properties
        // Methods
        static function constructor ();
        static function callOverridden (args : variant[]) : variant;
        static function callParent (args : variant[]) : variant;
        static function callSuper (args : variant[]) : variant;
        static function destroy () : void;
        static function getInitialConfig (name : string) : variant;
        static function getInitialConfig () : variant;
        static function has (value : string) : boolean;
        static function initConfig (instanceConfig : variant) : variant;
        static function statics () : Ext.Class;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class field
    {

        class Checkbox extends Ext.field.Field
        {
            // Methods
            function check () : Ext.field.Checkbox;
            function doChecked () : void;
            function doUnChecked () : void;
            function getChecked () : variant;
            function getGroupValues () : variant[];
            function getSubmitValue () : variant;
            override function getValue () : string;
            function isChecked () : boolean;
            function resetGroupValues () : Ext.field.Checkbox;
            function setGroupValues (values : variant[]) : Ext.field.Checkbox;
            function setValue (value : string) : void;
            function uncheck () : Ext.field.Checkbox;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function change (this_ : Ext.field.Checkbox, newValue : boolean, oldValue : boolean, eOpts : variant) : void;
            function check (this_ : Ext.field.Checkbox, e : Ext.event.Event, eOpts : variant) : void;
            function uncheck (this_ : Ext.field.Checkbox, e : Ext.event.Event, eOpts : variant) : void;
        }

        class DatePicker extends Ext.field.Select
        {
            // Methods
            function getDateFormat () : string;
            function getDestroyPickerOnHide () : boolean;
            function getFormattedValue (format : string) : string;
            function setDateFormat (dateFormat : string) : void;
            function setDestroyPickerOnHide (destroyPickerOnHide : boolean) : void;
            function setPicker (picker : variant) : void;
            function setPicker (picker : Ext.picker.Date) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Email extends Ext.field.Text
        {
            // Methods
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Field extends Ext.Decorator
        {
            // Properties
            var isField : boolean;
            var originalValue : variant;
            // Methods
            function getClearIcon () : boolean;
            function getInputCls () : string;
            function getLabel () : string;
            function getLabelAlign () : string;
            function getLabelCls () : string;
            function getLabelWidth () : variant;
            function getLabelWrap () : boolean;
            function getName () : string;
            function getRequired () : boolean;
            function getRequiredCls () : string;
            function getTabIndex () : number;
            function getValue () : variant;
            function isDirty () : boolean;
            function reset () : Ext.field.Field;
            function resetOriginalValue () : void;
            function setClearIcon (clearIcon : boolean) : void;
            function setInputCls (inputCls : string) : void;
            function setLabel (label : string) : void;
            function setLabelAlign (labelAlign : string) : void;
            function setLabelCls (labelCls : string) : void;
            function setLabelWidth (labelWidth : number) : void;
            function setLabelWidth (labelWidth : string) : void;
            function setLabelWrap (labelWrap : boolean) : void;
            function setName (name : string) : void;
            function setRequired (required : boolean) : void;
            function setRequiredCls (requiredCls : string) : void;
            function setTabIndex (tabIndex : number) : void;
            function setValue (value : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class File extends Ext.field.Field
        {
            // Methods
            function getAccept () : string;
            function getCapture () : string;
            function getMultiple () : boolean;
            function setAccept (accept : string) : void;
            function setCapture (capture : string) : void;
            function setMultiple (multiple : boolean) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class Hidden extends Ext.field.Text
        {
            // Methods
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Input extends Ext.Component
        {
            // Properties
            var isFocused : boolean;
            // Methods
            function blur () : Ext.field.Input;
            function focus () : Ext.field.Input;
            function getAutoCapitalize () : boolean;
            function getAutoComplete () : boolean;
            function getAutoCorrect () : boolean;
            function getChecked () : variant;
            function getFastFocus () : boolean;
            function getFocusCls () : string;
            function getMaxLength () : number;
            function getMaxRows () : number;
            function getMaxValue () : number;
            function getMinValue () : number;
            function getName () : string;
            function getPattern () : string;
            function getPlaceHolder () : string;
            function getReadOnly () : boolean;
            function getStartValue () : variant;
            function getStepValue () : number;
            function getTabIndex () : number;
            function getType () : string;
            function getValue () : variant;
            function isDirty () : boolean;
            function reset () : void;
            function select () : Ext.field.Input;
            function setAutoCapitalize (autoCapitalize : boolean) : void;
            function setAutoComplete (autoComplete : boolean) : void;
            function setAutoCorrect (autoCorrect : boolean) : void;
            function setFastFocus (fastFocus : boolean) : void;
            function setFocusCls (focusCls : string) : void;
            function setMaxLength (maxLength : number) : void;
            function setMaxRows (maxRows : number) : void;
            function setMaxValue (maxValue : number) : void;
            function setMinValue (minValue : number) : void;
            function setName (name : string) : void;
            function setPattern (pattern : string) : void;
            function setPlaceHolder (placeHolder : string) : void;
            function setReadOnly (readOnly : boolean) : void;
            function setStartValue (startValue : variant) : void;
            function setStepValue (stepValue : number) : void;
            function setTabIndex (tabIndex : number) : void;
            function setType (type : string) : void;
            function updateUseMask (newUseMask : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function blur (e : Ext.event.Event, eOpts : variant) : void;
            function clearicontap (this_ : Ext.field.Input, e : Ext.event.Event, eOpts : variant) : void;
            function click (e : Ext.event.Event, eOpts : variant) : void;
            function focus (e : Ext.event.Event, eOpts : variant) : void;
            function keyup (e : Ext.event.Event, eOpts : variant) : void;
            function masktap (this_ : Ext.field.Input, e : Ext.event.Event, eOpts : variant) : void;
            function mousedown (e : Ext.event.Event, eOpts : variant) : void;
            function paste (e : Ext.event.Event, eOpts : variant) : void;
        }

        class Number extends Ext.field.Text
        {
            // Methods
            function getMaxValue () : number;
            function getMinValue () : number;
            function getStepValue () : number;
            function setMaxValue (maxValue : number) : void;
            function setMinValue (minValue : number) : void;
            function setStepValue (stepValue : number) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Password extends Ext.field.Text
        {
            // Methods
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Radio extends Ext.field.Checkbox
        {
            // Methods
            function getGroupValue () : string;
            function setGroupValue (value : string) : Ext.field.Radio;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Search extends Ext.field.Text
        {
            // Methods
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Select extends Ext.field.Text
        {
            // Methods
            override function destroy () : void;
            function getAutoSelect () : boolean;
            function getDefaultPhonePickerConfig () : variant;
            function getDefaultTabletPickerConfig () : variant;
            function getDisplayField () : variant;
            function getHiddenName () : string;
            function getOptions () : variant[];
            function getStore () : variant;
            function getUsePicker () : variant;
            function getValueField () : variant;
            function onStoreDataChanged (store : variant) : void;
            override function reset () : Ext.field.Select;
            function setAutoSelect (autoSelect : boolean) : void;
            function setDefaultPhonePickerConfig (defaultPhonePickerConfig : variant) : void;
            function setDefaultTabletPickerConfig (defaultTabletPickerConfig : variant) : void;
            function setDisplayField (displayField : string) : void;
            function setDisplayField (displayField : number) : void;
            function setHiddenName (hiddenName : string) : void;
            function setOptions (options : variant[]) : void;
            function setStore (store : Ext.data.Store) : void;
            function setStore (store : variant) : void;
            function setStore (store : string) : void;
            function setUsePicker (usePicker : string) : void;
            function setUsePicker (usePicker : boolean) : void;
            function setValueField (valueField : string) : void;
            function setValueField (valueField : number) : void;
            function showPicker () : void;
            function updateOptions (newOptions : variant[]) : Ext.field.Select;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Slider extends Ext.field.Field
        {
            // Methods
            function getIncrement () : number;
            function getMaxValue () : number;
            function getMinValue () : number;
            function getReadOnly () : boolean;
            override function getValue () : variant;
            function getValues () : variant;
            function setIncrement (increment : number) : void;
            function setMaxValue (maxValue : number) : void;
            function setMinValue (minValue : number) : void;
            function setReadOnly (readOnly : boolean) : void;
            function setValues (value : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function change (me : Ext.field.Slider, sl : Ext.slider.Slider, thumb : Ext.slider.Thumb, newValue : number, oldValue : number, eOpts : variant) : void;
            function drag (this_ : Ext.field.Slider, sl : Ext.slider.Slider, thumb : Ext.slider.Thumb, e : Ext.event.Event, eOpts : variant) : void;
            function dragend (this_ : Ext.field.Slider, sl : Ext.slider.Slider, thumb : Ext.slider.Thumb, value : variant[], e : Ext.event.Event, eOpts : variant) : void;
            function dragstart (this_ : Ext.field.Slider, sl : Ext.slider.Slider, thumb : Ext.slider.Thumb, value : variant[], e : Ext.event.Event, eOpts : variant) : void;
        }

        class Spinner extends Ext.field.Number
        {
            // Methods
            function getAccelerateOnTapHold () : boolean;
            function getCycle () : boolean;
            function getDefaultValue () : number;
            function getGroupButtons () : boolean;
            function setAccelerateOnTapHold (accelerateOnTapHold : boolean) : void;
            function setCycle (cycle : boolean) : void;
            function setDefaultValue (defaultValue : number) : void;
            function setGroupButtons (groupButtons : boolean) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function spin (this_ : Ext.field.Spinner, value : number, direction : string, eOpts : variant) : void;
            function spindown (this_ : Ext.field.Spinner, value : number, eOpts : variant) : void;
            function spinup (this_ : Ext.field.Spinner, value : number, eOpts : variant) : void;
        }

        class Text extends Ext.field.Field
        {
            // Properties
            var startValue : variant;
            // Methods
            function blur () : Ext.field.Text;
            function focus () : Ext.field.Text;
            function getAutoCapitalize () : boolean;
            function getAutoComplete () : boolean;
            function getAutoCorrect () : boolean;
            function getMaxLength () : number;
            function getPlaceHolder () : string;
            function getReadOnly () : boolean;
            override function reset () : Ext.field.Field;
            function select () : Ext.field.Text;
            function setAutoCapitalize (autoCapitalize : boolean) : void;
            function setAutoComplete (autoComplete : boolean) : void;
            function setAutoCorrect (autoCorrect : boolean) : void;
            function setMaxLength (maxLength : number) : void;
            function setPlaceHolder (placeHolder : string) : void;
            function setReadOnly (readOnly : boolean) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function action (this_ : Ext.field.Text, e : variant, eOpts : variant) : void;
            function blur (this_ : Ext.field.Text, e : Ext.event.Event, eOpts : variant) : void;
            function change (this_ : Ext.field.Text, newValue : variant, oldValue : variant, eOpts : variant) : void;
            function clearicontap (this_ : Ext.field.Text, e : Ext.event.Event, eOpts : variant) : void;
            function focus (this_ : Ext.field.Text, e : Ext.event.Event, eOpts : variant) : void;
            function keyup (this_ : Ext.field.Text, e : Ext.event.Event, eOpts : variant) : void;
            function mousedown (this_ : Ext.field.Text, e : Ext.event.Event, eOpts : variant) : void;
            function paste (this_ : Ext.field.Text, e : Ext.event.Event, eOpts : variant) : void;
        }

        class TextArea extends Ext.field.Text
        {
            // Methods
            function getMaxRows () : number;
            function setMaxRows (maxRows : number) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class Toggle extends Ext.field.Slider
        {
            // Methods
            function getActiveLabel () : string;
            function getInactiveLabel () : string;
            function getMaxValueCls () : string;
            function getMinValueCls () : string;
            function setActiveLabel (activeLabel : string) : void;
            function setInactiveLabel (inactiveLabel : string) : void;
            function setMaxValueCls (maxValueCls : string) : void;
            function setMinValueCls (minValueCls : string) : void;
            function toggle () : variant;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Url extends Ext.field.Text
        {
            // Methods
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }
    }

    class form
    {

        class FieldSet extends Ext.Container
        {
            // Methods
            function setInstructions (instructions : string) : void;
            function setTitle (title : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Panel extends Ext.Panel
        {
            // Methods
            function getApi () : variant;
            function getBaseParams () : variant;
            function getEnctype () : variant;
            function getMethod () : string;
            function getMultipartDetection () : boolean;
            function getParamOrder () : variant;
            function getParamsAsHash () : boolean;
            function getStandardSubmit () : boolean;
            function getSubmitOnAction () : variant;
            function getTimeout () : number;
            function getTrackResetOnLoad () : boolean;
            function getUrl () : string;
            function getValues (enabled : boolean, all : boolean) : variant;
            function getValues (enabled : boolean) : variant;
            function getValues () : variant;
            function load (options : variant) : Ext.data.Connection;
            function reset () : Ext.form.Panel;
            function setApi (api : variant) : void;
            function setBaseParams (baseParams : variant) : void;
            function setEnctype (enctype : variant) : void;
            function setMethod (method : string) : void;
            function setMultipartDetection (multipartDetection : boolean) : void;
            function setParamOrder (paramOrder : string) : void;
            function setParamOrder (paramOrder : string[]) : void;
            function setParamsAsHash (paramsAsHash : boolean) : void;
            function setStandardSubmit (standardSubmit : boolean) : void;
            function setSubmitOnAction (submitOnAction : variant) : void;
            function setTimeout (timeout : number) : void;
            function setTrackResetOnLoad (trackResetOnLoad : boolean) : void;
            function setUrl (url : string) : void;
            function setValues (values : variant) : Ext.form.Panel;
            function submit (options : variant) : Ext.data.Connection;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function beforesubmit (this_ : Ext.form.Panel, values : variant, options : variant, e : Ext.event.Event, eOpts : variant) : void;
            function exception (this_ : Ext.form.Panel, result : variant, eOpts : variant) : void;
            function submit (this_ : Ext.form.Panel, result : variant, e : Ext.event.Event, eOpts : variant) : void;
        }
    }

    class fx
    {

        class Animation extends Ext.Base
        {
            // Methods
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }




        class animation
        {

            class Abstract extends Ext.Evented
            {
                // Methods
                function getAfter () : variant;
                function getBefore () : variant;
                function getDelay () : number;
                function getDirection () : string;
                function getDuration () : number;
                function getEasing () : string;
                function getElement () : variant;
                function getIteration () : number;
                function getName () : string;
                function getOnBeforeEnd () : variant;
                function getOnBeforeStart () : variant;
                function getOnEnd () : variant;
                function getPreserveEndState () : boolean;
                function getReplacePrevious () : boolean;
                function getReverse () : variant;
                function getScope () : variant;
                function setAfter (after : variant) : void;
                function setBefore (before : variant) : void;
                function setDelay (delay : number) : void;
                function setDirection (direction : string) : void;
                function setDuration (duration : number) : void;
                function setEasing (easing : string) : void;
                function setElement (element : variant) : void;
                function setIteration (iteration : number) : void;
                function setName (name : string) : void;
                function setOnBeforeEnd (onBeforeEnd : variant) : void;
                function setOnBeforeStart (onBeforeStart : variant) : void;
                function setOnEnd (onEnd : variant) : void;
                function setPreserveEndState (preserveEndState : boolean) : void;
                function setReplacePrevious (replacePrevious : boolean) : void;
                function setReverse (reverse : variant) : void;
                function setScope (scope : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }


            class Fade extends Ext.fx.animation.Abstract
            {
                // Methods
                function getOut () : boolean;
                function setOut (out : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }



            class Pop extends Ext.fx.animation.Abstract
            {
                // Methods
                function getOut () : boolean;
                function setOut (out : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }


            class Slide extends Ext.fx.animation.Abstract
            {
                // Methods
                function getIsElementBoxFit () : boolean;
                function getOffset () : number;
                function getOut () : boolean;
                function getUseCssTransform () : boolean;
                function setContainerBox (containerBox : string) : void;
                function setElementBox (elementBox : string) : void;
                function setIsElementBoxFit (isElementBoxFit : boolean) : void;
                function setOffset (offset : number) : void;
                function setOut (out : boolean) : void;
                function setUseCssTransform (useCssTransform : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }


            class Wipe extends Ext.fx.Animation
            {
                // Methods
                function getDirection () : string;
                function getEasing () : string;
                function getOut () : boolean;
                function setDirection (direction : string) : void;
                function setEasing (easing : string) : void;
                function setOut (out : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

        }

        class easing
        {

            class Abstract extends Ext.Base
            {
                // Methods
                function constructor (config : variant);
                function getStartTime () : number;
                function getStartValue () : number;
                function setStartTime (startTime : number) : void;
                function setStartValue (startValue : number) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }





            class Linear extends Ext.fx.easing.Abstract
            {
                // Methods
                function getDuration () : number;
                function getEndValue () : number;
                function setDuration (duration : number) : void;
                function setEndValue (endValue : number) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

        }

        class layout
        {

            class Card extends Ext.Base
            {
                // Methods
                function constructor (config : variant);
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class card
            {

                class Abstract extends Ext.Evented
                {
                    // Methods
                    override function destroy () : void;
                    function getDirection () : string;
                    function getDuration () : variant;
                    function getLayout () : variant;
                    function getReverse () : variant;
                    function setDirection (direction : string) : void;
                    function setDuration (duration : variant) : void;
                    function setLayout (layout : variant) : void;
                    function setReverse (reverse : variant) : void;
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : Ext.Base;
                    static function callParent (args : variant) : void;
                    static function create () : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : string;
                }







                class Scroll extends Ext.fx.layout.card.Abstract
                {
                    // Methods
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : Ext.Base;
                    static function callParent (args : variant) : void;
                    static function create () : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : string;
                }




                class Style extends Ext.fx.layout.card.Abstract
                {
                    // Methods
                    function getInAnimation () : variant;
                    function getOutAnimation () : variant;
                    function setInAnimation (inAnimation : variant) : void;
                    function setOutAnimation (outAnimation : variant) : void;
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : Ext.Base;
                    static function callParent (args : variant) : void;
                    static function create () : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : string;
                }
            }
        }

        class runner
        {

            class Css extends Ext.Evented
            {
                // Methods
                function constructor ();
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }


        }
    }


    class layout
    {

        class Abstract extends Ext.Base
        {
            // Methods
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Box extends Ext.layout.Default
        {
            // Methods
            function getAlign () : string;
            function getOrient () : string;
            function getPack () : string;
            function setAlign (align : string) : void;
            function setOrient (orient : string) : void;
            function setPack (pack : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Card extends Ext.layout.Default
        {
            // Methods
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function activeitemchange (this_ : Ext.layout.Card, newActiveItem : variant, oldActiveItem : variant, eOpts : variant) : void;
        }

        class Default extends Ext.layout.Abstract
        {
            // Methods
            override function destroy () : void;
            function getAnimation () : Ext.fx.layout.Card;
            function onItemInnerStateChange (item : Ext.Component, isInner : boolean, destroying : boolean) : void;
            function onItemInnerStateChange (item : Ext.Component, isInner : boolean) : void;
            function setAnimation (animation : Ext.fx.layout.Card) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Fit extends Ext.layout.Default
        {
            // Methods
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class FlexBox extends Ext.layout.Box
        {
            // Methods
            function setItemFlex (item : Ext.Component, flex : number) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Float extends Ext.layout.Default
        {
            // Methods
            function getDirection () : string;
            function setDirection (direction : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class HBox extends Ext.layout.FlexBox
        {
            // Methods
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class VBox extends Ext.layout.FlexBox
        {
            // Methods
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class wrapper
        {

            class BoxDock extends Ext.Base
            {
                // Methods
                function constructor (config : variant);
                function getBodyElement () : variant;
                function getContainer () : variant;
                function getDirection () : string;
                function getElement () : variant;
                function getInnerWrapper () : variant;
                function getSizeState () : boolean;
                function setBodyElement (bodyElement : variant) : void;
                function setContainer (container : variant) : void;
                function setDirection (direction : string) : void;
                function setElement (element : variant) : void;
                function setInnerWrapper (innerWrapper : variant) : void;
                function setSizeState (sizeState : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Dock extends Ext.Base
            {
                // Methods
                function constructor (config : variant);
                function getBodyElement () : variant;
                function getContainer () : variant;
                function getDirection () : string;
                function getElement () : variant;
                function getInnerWrapper () : variant;
                function getSizeState () : boolean;
                function setBodyElement (bodyElement : variant) : void;
                function setContainer (container : variant) : void;
                function setDirection (direction : string) : void;
                function setElement (element : variant) : void;
                function setInnerWrapper (innerWrapper : variant) : void;
                function setSizeState (sizeState : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Inner extends Ext.Base
            {
                // Methods
                function constructor (config : variant);
                function getContainer () : variant;
                function getSizeState () : variant;
                function setContainer (container : variant) : void;
                function setSizeState (sizeState : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }
    }

    class mixin
    {

        class Bindable extends Ext.mixin.Mixin
        {
            // Methods
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }



        class Mixin extends Ext.Base
        {
            // Methods
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Observable extends Ext.mixin.Mixin
        {
            // Methods
            function constructor (config : variant);
            function addAfterListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            function addAfterListener (eventName : string, fn : function  () : void, scope : variant) : void;
            function addAfterListener (eventName : string, fn : function  () : void) : void;
            function addAfterListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            function addAfterListener (eventName : string, fn : string, scope : variant) : void;
            function addAfterListener (eventName : string, fn : string) : void;
            function addAfterListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            function addAfterListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            function addAfterListener (eventName : string[], fn : function  () : void) : void;
            function addAfterListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            function addAfterListener (eventName : string[], fn : string, scope : variant) : void;
            function addAfterListener (eventName : string[], fn : string) : void;
            function addAfterListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            function addAfterListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            function addAfterListener (eventName : variant, fn : function  () : void) : void;
            function addAfterListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            function addAfterListener (eventName : variant, fn : string, scope : variant) : void;
            function addAfterListener (eventName : variant, fn : string) : void;
            function addBeforeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            function addBeforeListener (eventName : string, fn : function  () : void, scope : variant) : void;
            function addBeforeListener (eventName : string, fn : function  () : void) : void;
            function addBeforeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            function addBeforeListener (eventName : string, fn : string, scope : variant) : void;
            function addBeforeListener (eventName : string, fn : string) : void;
            function addBeforeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            function addBeforeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            function addBeforeListener (eventName : string[], fn : function  () : void) : void;
            function addBeforeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            function addBeforeListener (eventName : string[], fn : string, scope : variant) : void;
            function addBeforeListener (eventName : string[], fn : string) : void;
            function addBeforeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            function addBeforeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            function addBeforeListener (eventName : variant, fn : function  () : void) : void;
            function addBeforeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            function addBeforeListener (eventName : variant, fn : string, scope : variant) : void;
            function addBeforeListener (eventName : variant, fn : string) : void;
            function addListener (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            function addListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            function addListener (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            function addListener (eventName : string, fn : function  () : void, scope : variant) : void;
            function addListener (eventName : string, fn : function  () : void, order : string) : void;
            function addListener (eventName : string, fn : function  () : void) : void;
            function addListener (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            function addListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            function addListener (eventName : string, fn : string, scope : variant, order : string) : void;
            function addListener (eventName : string, fn : string, scope : variant) : void;
            function addListener (eventName : string, fn : string, order : string) : void;
            function addListener (eventName : string, fn : string) : void;
            function addListener (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            function addListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            function addListener (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            function addListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            function addListener (eventName : string[], fn : function  () : void, order : string) : void;
            function addListener (eventName : string[], fn : function  () : void) : void;
            function addListener (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            function addListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            function addListener (eventName : string[], fn : string, scope : variant, order : string) : void;
            function addListener (eventName : string[], fn : string, scope : variant) : void;
            function addListener (eventName : string[], fn : string, order : string) : void;
            function addListener (eventName : string[], fn : string) : void;
            function addListener (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            function addListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            function addListener (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            function addListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            function addListener (eventName : variant, fn : function  () : void, order : string) : void;
            function addListener (eventName : variant, fn : function  () : void) : void;
            function addListener (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            function addListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            function addListener (eventName : variant, fn : string, scope : variant, order : string) : void;
            function addListener (eventName : variant, fn : string, scope : variant) : void;
            function addListener (eventName : variant, fn : string, order : string) : void;
            function addListener (eventName : variant, fn : string) : void;
            function clearListeners () : void;
            override function destroy () : void;
            function enableBubble (events : string) : void;
            function enableBubble (events : string[]) : void;
            function fireAction (eventName : string, args : variant[], fn : function  () : void, scope : variant) : variant;
            function fireEvent (eventName : string, args : variant) : boolean;
            function getBubbleEvents () : variant;
            function getListeners () : variant;
            function hasListener (eventName : string) : boolean;
            function on (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            function on (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            function on (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            function on (eventName : string, fn : function  () : void, scope : variant) : void;
            function on (eventName : string, fn : function  () : void, order : string) : void;
            function on (eventName : string, fn : function  () : void) : void;
            function on (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            function on (eventName : string, fn : string, scope : variant, options : variant) : void;
            function on (eventName : string, fn : string, scope : variant, order : string) : void;
            function on (eventName : string, fn : string, scope : variant) : void;
            function on (eventName : string, fn : string, order : string) : void;
            function on (eventName : string, fn : string) : void;
            function on (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            function on (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            function on (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            function on (eventName : string[], fn : function  () : void, scope : variant) : void;
            function on (eventName : string[], fn : function  () : void, order : string) : void;
            function on (eventName : string[], fn : function  () : void) : void;
            function on (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            function on (eventName : string[], fn : string, scope : variant, options : variant) : void;
            function on (eventName : string[], fn : string, scope : variant, order : string) : void;
            function on (eventName : string[], fn : string, scope : variant) : void;
            function on (eventName : string[], fn : string, order : string) : void;
            function on (eventName : string[], fn : string) : void;
            function on (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            function on (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            function on (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            function on (eventName : variant, fn : function  () : void, scope : variant) : void;
            function on (eventName : variant, fn : function  () : void, order : string) : void;
            function on (eventName : variant, fn : function  () : void) : void;
            function on (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            function on (eventName : variant, fn : string, scope : variant, options : variant) : void;
            function on (eventName : variant, fn : string, scope : variant, order : string) : void;
            function on (eventName : variant, fn : string, scope : variant) : void;
            function on (eventName : variant, fn : string, order : string) : void;
            function on (eventName : variant, fn : string) : void;
            function onAfter (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            function onAfter (eventName : string, fn : function  () : void, scope : variant) : void;
            function onAfter (eventName : string, fn : function  () : void) : void;
            function onAfter (eventName : string, fn : string, scope : variant, options : variant) : void;
            function onAfter (eventName : string, fn : string, scope : variant) : void;
            function onAfter (eventName : string, fn : string) : void;
            function onAfter (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            function onAfter (eventName : string[], fn : function  () : void, scope : variant) : void;
            function onAfter (eventName : string[], fn : function  () : void) : void;
            function onAfter (eventName : string[], fn : string, scope : variant, options : variant) : void;
            function onAfter (eventName : string[], fn : string, scope : variant) : void;
            function onAfter (eventName : string[], fn : string) : void;
            function onAfter (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            function onAfter (eventName : variant, fn : function  () : void, scope : variant) : void;
            function onAfter (eventName : variant, fn : function  () : void) : void;
            function onAfter (eventName : variant, fn : string, scope : variant, options : variant) : void;
            function onAfter (eventName : variant, fn : string, scope : variant) : void;
            function onAfter (eventName : variant, fn : string) : void;
            function onBefore (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            function onBefore (eventName : string, fn : function  () : void, scope : variant) : void;
            function onBefore (eventName : string, fn : function  () : void) : void;
            function onBefore (eventName : string, fn : string, scope : variant, options : variant) : void;
            function onBefore (eventName : string, fn : string, scope : variant) : void;
            function onBefore (eventName : string, fn : string) : void;
            function onBefore (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            function onBefore (eventName : string[], fn : function  () : void, scope : variant) : void;
            function onBefore (eventName : string[], fn : function  () : void) : void;
            function onBefore (eventName : string[], fn : string, scope : variant, options : variant) : void;
            function onBefore (eventName : string[], fn : string, scope : variant) : void;
            function onBefore (eventName : string[], fn : string) : void;
            function onBefore (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            function onBefore (eventName : variant, fn : function  () : void, scope : variant) : void;
            function onBefore (eventName : variant, fn : function  () : void) : void;
            function onBefore (eventName : variant, fn : string, scope : variant, options : variant) : void;
            function onBefore (eventName : variant, fn : string, scope : variant) : void;
            function onBefore (eventName : variant, fn : string) : void;
            function relayEvents (object : variant, events : string) : Ext.mixin.Observable;
            function relayEvents (object : variant, events : variant[]) : Ext.mixin.Observable;
            function relayEvents (object : variant, events : variant) : Ext.mixin.Observable;
            function removeAfterListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            function removeAfterListener (eventName : string, fn : function  () : void, scope : variant) : void;
            function removeAfterListener (eventName : string, fn : function  () : void) : void;
            function removeAfterListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            function removeAfterListener (eventName : string, fn : string, scope : variant) : void;
            function removeAfterListener (eventName : string, fn : string) : void;
            function removeAfterListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            function removeAfterListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            function removeAfterListener (eventName : string[], fn : function  () : void) : void;
            function removeAfterListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            function removeAfterListener (eventName : string[], fn : string, scope : variant) : void;
            function removeAfterListener (eventName : string[], fn : string) : void;
            function removeAfterListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            function removeAfterListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            function removeAfterListener (eventName : variant, fn : function  () : void) : void;
            function removeAfterListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            function removeAfterListener (eventName : variant, fn : string, scope : variant) : void;
            function removeAfterListener (eventName : variant, fn : string) : void;
            function removeBeforeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            function removeBeforeListener (eventName : string, fn : function  () : void, scope : variant) : void;
            function removeBeforeListener (eventName : string, fn : function  () : void) : void;
            function removeBeforeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            function removeBeforeListener (eventName : string, fn : string, scope : variant) : void;
            function removeBeforeListener (eventName : string, fn : string) : void;
            function removeBeforeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            function removeBeforeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            function removeBeforeListener (eventName : string[], fn : function  () : void) : void;
            function removeBeforeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            function removeBeforeListener (eventName : string[], fn : string, scope : variant) : void;
            function removeBeforeListener (eventName : string[], fn : string) : void;
            function removeBeforeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            function removeBeforeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            function removeBeforeListener (eventName : variant, fn : function  () : void) : void;
            function removeBeforeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            function removeBeforeListener (eventName : variant, fn : string, scope : variant) : void;
            function removeBeforeListener (eventName : variant, fn : string) : void;
            function removeListener (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            function removeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            function removeListener (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            function removeListener (eventName : string, fn : function  () : void, scope : variant) : void;
            function removeListener (eventName : string, fn : function  () : void, order : string) : void;
            function removeListener (eventName : string, fn : function  () : void) : void;
            function removeListener (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            function removeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            function removeListener (eventName : string, fn : string, scope : variant, order : string) : void;
            function removeListener (eventName : string, fn : string, scope : variant) : void;
            function removeListener (eventName : string, fn : string, order : string) : void;
            function removeListener (eventName : string, fn : string) : void;
            function removeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            function removeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            function removeListener (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            function removeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            function removeListener (eventName : string[], fn : function  () : void, order : string) : void;
            function removeListener (eventName : string[], fn : function  () : void) : void;
            function removeListener (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            function removeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            function removeListener (eventName : string[], fn : string, scope : variant, order : string) : void;
            function removeListener (eventName : string[], fn : string, scope : variant) : void;
            function removeListener (eventName : string[], fn : string, order : string) : void;
            function removeListener (eventName : string[], fn : string) : void;
            function removeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            function removeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            function removeListener (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            function removeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            function removeListener (eventName : variant, fn : function  () : void, order : string) : void;
            function removeListener (eventName : variant, fn : function  () : void) : void;
            function removeListener (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            function removeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            function removeListener (eventName : variant, fn : string, scope : variant, order : string) : void;
            function removeListener (eventName : variant, fn : string, scope : variant) : void;
            function removeListener (eventName : variant, fn : string, order : string) : void;
            function removeListener (eventName : variant, fn : string) : void;
            function resumeEvents (discardQueuedEvents : boolean) : void;
            function setBubbleEvents (bubbleEvents : string) : void;
            function setBubbleEvents (bubbleEvents : string[]) : void;
            function setListeners (listeners : variant) : void;
            function suspendEvents () : void;
            function un (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            function un (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            function un (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            function un (eventName : string, fn : function  () : void, scope : variant) : void;
            function un (eventName : string, fn : function  () : void, order : string) : void;
            function un (eventName : string, fn : function  () : void) : void;
            function un (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            function un (eventName : string, fn : string, scope : variant, options : variant) : void;
            function un (eventName : string, fn : string, scope : variant, order : string) : void;
            function un (eventName : string, fn : string, scope : variant) : void;
            function un (eventName : string, fn : string, order : string) : void;
            function un (eventName : string, fn : string) : void;
            function un (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            function un (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            function un (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            function un (eventName : string[], fn : function  () : void, scope : variant) : void;
            function un (eventName : string[], fn : function  () : void, order : string) : void;
            function un (eventName : string[], fn : function  () : void) : void;
            function un (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            function un (eventName : string[], fn : string, scope : variant, options : variant) : void;
            function un (eventName : string[], fn : string, scope : variant, order : string) : void;
            function un (eventName : string[], fn : string, scope : variant) : void;
            function un (eventName : string[], fn : string, order : string) : void;
            function un (eventName : string[], fn : string) : void;
            function un (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            function un (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            function un (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            function un (eventName : variant, fn : function  () : void, scope : variant) : void;
            function un (eventName : variant, fn : function  () : void, order : string) : void;
            function un (eventName : variant, fn : function  () : void) : void;
            function un (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            function un (eventName : variant, fn : string, scope : variant, options : variant) : void;
            function un (eventName : variant, fn : string, scope : variant, order : string) : void;
            function un (eventName : variant, fn : string, scope : variant) : void;
            function un (eventName : variant, fn : string, order : string) : void;
            function un (eventName : variant, fn : string) : void;
            function unAfter (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            function unAfter (eventName : string, fn : function  () : void, scope : variant) : void;
            function unAfter (eventName : string, fn : function  () : void) : void;
            function unAfter (eventName : string, fn : string, scope : variant, options : variant) : void;
            function unAfter (eventName : string, fn : string, scope : variant) : void;
            function unAfter (eventName : string, fn : string) : void;
            function unAfter (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            function unAfter (eventName : string[], fn : function  () : void, scope : variant) : void;
            function unAfter (eventName : string[], fn : function  () : void) : void;
            function unAfter (eventName : string[], fn : string, scope : variant, options : variant) : void;
            function unAfter (eventName : string[], fn : string, scope : variant) : void;
            function unAfter (eventName : string[], fn : string) : void;
            function unAfter (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            function unAfter (eventName : variant, fn : function  () : void, scope : variant) : void;
            function unAfter (eventName : variant, fn : function  () : void) : void;
            function unAfter (eventName : variant, fn : string, scope : variant, options : variant) : void;
            function unAfter (eventName : variant, fn : string, scope : variant) : void;
            function unAfter (eventName : variant, fn : string) : void;
            function unBefore (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            function unBefore (eventName : string, fn : function  () : void, scope : variant) : void;
            function unBefore (eventName : string, fn : function  () : void) : void;
            function unBefore (eventName : string, fn : string, scope : variant, options : variant) : void;
            function unBefore (eventName : string, fn : string, scope : variant) : void;
            function unBefore (eventName : string, fn : string) : void;
            function unBefore (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            function unBefore (eventName : string[], fn : function  () : void, scope : variant) : void;
            function unBefore (eventName : string[], fn : function  () : void) : void;
            function unBefore (eventName : string[], fn : string, scope : variant, options : variant) : void;
            function unBefore (eventName : string[], fn : string, scope : variant) : void;
            function unBefore (eventName : string[], fn : string) : void;
            function unBefore (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            function unBefore (eventName : variant, fn : function  () : void, scope : variant) : void;
            function unBefore (eventName : variant, fn : function  () : void) : void;
            function unBefore (eventName : variant, fn : string, scope : variant, options : variant) : void;
            function unBefore (eventName : variant, fn : string, scope : variant) : void;
            function unBefore (eventName : variant, fn : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }




        class Templatable extends Ext.mixin.Mixin
        {
            // Methods
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

    }

    class navigation
    {


        class View extends Ext.Container
        {
            // Methods
            function getDefaultBackButtonText () : string;
            function getNavigationBar () : variant;
            function getPreviousItem () : variant;
            function getUseTitleForBackButtonText () : boolean;
            function pop (count : number) : Ext.Component;
            function pop (count : string) : Ext.Component;
            function pop (count : variant) : Ext.Component;
            function push (view : variant) : Ext.Component;
            function reset () : Ext.Component;
            function setDefaultBackButtonText (defaultBackButtonText : string) : void;
            function setNavigationBar (navigationBar : boolean) : void;
            function setNavigationBar (navigationBar : variant) : void;
            function setUseTitleForBackButtonText (useTitleForBackButtonText : boolean) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function back (this_ : Ext.navigation.View, eOpts : variant) : void;
            function pop (this_ : Ext.navigation.View, view : variant, eOpts : variant) : void;
            function push (this_ : Ext.navigation.View, view : variant, eOpts : variant) : void;
        }
    }

    class os extends Ext.env.OS
    {
        // Properties
        static var deviceType : string;
        // Methods
        static function constructor (userAgent : variant, platform : variant, browserScope : variant);
        static function callOverridden (args : variant[]) : variant;
        static function callParent (args : variant[]) : variant;
        static function callSuper (args : variant[]) : variant;
        static function destroy () : void;
        static function getInitialConfig (name : string) : variant;
        static function getInitialConfig () : variant;
        static function initConfig (instanceConfig : variant) : variant;
        static function is (value : string) : boolean;
        static function statics () : Ext.Class;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : Ext.Base;
        static function callParent (args : variant) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class picker
    {

        class Date extends Ext.picker.Picker
        {
            // Methods
            function getDayText () : string;
            function getMonthText () : string;
            function getSlotOrder () : variant[];
            function getYearFrom () : number;
            function getYearText () : string;
            function getYearTo () : number;
            function setDayText (dayText : string) : void;
            function setMonthText (monthText : string) : void;
            function setSlotOrder (slotOrder : variant[]) : void;
            function setYearFrom (yearFrom : number) : void;
            function setYearText (yearText : string) : void;
            function setYearTo (yearTo : number) : void;
            function updateDayText (newDayText : variant, oldDayText : variant) : void;
            function updateMonthText (newMonthText : variant, oldMonthText : variant) : void;
            function updateYearFrom () : void;
            function updateYearText (yearText : variant) : void;
            function updateYearTo () : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Picker extends Ext.Sheet
        {
            // Methods
            function applyCancelButton (config : variant) : variant;
            function applyDoneButton (config : variant) : variant;
            function getCancelButton () : variant;
            function getDoneButton () : variant;
            function getSlots () : variant[];
            function getToolbar () : variant;
            function getToolbarPosition () : string;
            function getUseTitles () : boolean;
            function getValue (useDom : variant) : variant;
            function getValues () : variant;
            override function initialize () : void;
            function setCancelButton (cancelButton : string) : void;
            function setCancelButton (cancelButton : variant) : void;
            function setDoneButton (doneButton : string) : void;
            function setDoneButton (doneButton : variant) : void;
            function setSlots (slots : variant[]) : void;
            function setToolbar (toolbar : Ext.TitleBar) : void;
            function setToolbar (toolbar : Ext.Toolbar) : void;
            function setToolbar (toolbar : variant) : void;
            function setToolbarPosition (toolbarPosition : string) : void;
            function setUseTitles (useTitles : boolean) : void;
            function setValue (values : variant, animated : boolean) : Ext.picker.Picker;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function cancel (this_ : Ext.picker.Picker, eOpts : variant) : void;
            function change (this_ : Ext.picker.Picker, value : variant, eOpts : variant) : void;
            function pick (this_ : Ext.picker.Picker, The : variant, slot : Ext.picker.Slot, eOpts : variant) : void;
        }

        class Slot extends Ext.dataview.DataView
        {
            // Methods
            function applyTitle (title : string) : string;
            function getAlign () : string;
            function getDisplayField () : string;
            function getName () : string;
            function getTitle () : string;
            function getValueField () : string;
            function setAlign (align : string) : void;
            function setDisplayField (displayField : string) : void;
            function setName (name : string) : void;
            function setTitle (title : string) : void;
            function setValueField (valueField : string) : void;
            function updateAlign (newAlign : variant, oldAlign : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function slotpick (this_ : Ext.picker.Slot, value : variant, node : HTMLElement, eOpts : variant) : void;
        }
    }

    class plugin
    {

        class BufferedList
        {
            // Methods
            function getList () : variant;
            function setList (list : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class ListPaging extends Ext.Component
        {
            // Methods
            function getAutoPaging () : boolean;
            function getLoadMoreText () : string;
            function getNoMoreRecordsText () : string;
            function setAutoPaging (autoPaging : boolean) : void;
            function setLoadMoreText (loadMoreText : string) : void;
            function setNoMoreRecordsText (noMoreRecordsText : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function loadmorecmpadded (this_ : Ext.plugin.ListPaging, list : Ext.dataview.List, eOpts : variant) : void;
        }

        class PullRefresh extends Ext.Component
        {
            // Methods
            function getAutoSnapBack () : boolean;
            function getLastUpdatedDateFormat () : string;
            function getLastUpdatedText () : string;
            function getList () : Ext.dataview.List;
            function getLoadedText () : string;
            function getLoadingText () : string;
            function getOverpullSnapBackDuration () : number;
            function getPullText () : string;
            function getPullTpl () : variant;
            function getReleaseText () : string;
            function getScrollerAutoRefresh () : boolean;
            function getSnappingAnimationDuration () : number;
            function setAutoSnapBack (autoSnapBack : boolean) : void;
            function setLastUpdatedDateFormat (lastUpdatedDateFormat : string) : void;
            function setLastUpdatedText (lastUpdatedText : string) : void;
            function setList (list : Ext.dataview.List) : void;
            function setLoadedText (loadedText : string) : void;
            function setLoadingText (loadingText : string) : void;
            function setOverpullSnapBackDuration (overpullSnapBackDuration : number) : void;
            function setPullText (pullText : string) : void;
            function setPullTpl (pullTpl : Ext.XTemplate) : void;
            function setPullTpl (pullTpl : string) : void;
            function setPullTpl (pullTpl : variant[]) : void;
            function setReleaseText (releaseText : string) : void;
            function setScrollerAutoRefresh (scrollerAutoRefresh : boolean) : void;
            function setSnappingAnimationDuration (snappingAnimationDuration : number) : void;
            function snapBack (force : boolean) : void;
            function snapBack () : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class SortableList extends Ext.Component
        {
            // Methods
            function getHandleSelector () : string;
            function getList () : variant;
            function setHandleSelector (handleSelector : string) : void;
            function setList (list : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }
    }

    class scroll
    {


        class Scroller extends Ext.Evented
        {
            // Methods
            function getDirection () : string;
            function getDirectionLock () : boolean;
            function getDisabled () : boolean;
            function getInitialOffset () : variant;
            function getMomentumEasing () : variant;
            function getSlotSnapEasing () : variant;
            function getSlotSnapSize () : variant;
            function getTranslatable () : variant;
            function isAxisEnabled (axis : string) : boolean;
            function scrollBy (x : number, y : number, animation : boolean) : Ext.scroll.Scroller;
            function scrollBy (x : number, y : number, animation : variant) : Ext.scroll.Scroller;
            function scrollBy (x : number, y : number) : Ext.scroll.Scroller;
            function scrollTo (x : number, y : number, animation : boolean) : Ext.scroll.Scroller;
            function scrollTo (x : number, y : number, animation : variant) : Ext.scroll.Scroller;
            function scrollTo (x : number, y : number) : Ext.scroll.Scroller;
            function scrollToEnd (animation : variant) : Ext.scroll.Scroller;
            function setDirection (direction : string) : void;
            function setDirectionLock (directionLock : boolean) : void;
            function setDisabled (disabled : boolean) : void;
            function setInitialOffset (initialOffset : variant) : void;
            function setInitialOffset (initialOffset : number) : void;
            function setMomentumEasing (momentumEasing : variant) : void;
            function setSlotSnapEasing (slotSnapEasing : variant) : void;
            function setSlotSnapSize (slotSnapSize : number) : void;
            function setSlotSnapSize (slotSnapSize : variant) : void;
            function setTranslatable (translatable : variant) : void;
            function updateBoundary () : Ext.scroll.Scroller;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function maxpositionchange (this_ : Ext.scroll.Scroller, maxPosition : number, eOpts : variant) : void;
            function refresh (this_ : Ext.scroll.Scroller, eOpts : variant) : void;
            function scroll (this_ : Ext.scroll.Scroller, x : number, y : number, eOpts : variant) : void;
            function scrollend (this_ : Ext.scroll.Scroller, x : number, y : number, eOpts : variant) : void;
            function scrollstart (this_ : Ext.scroll.Scroller, x : number, y : number, eOpts : variant) : void;
        }

        class View extends Ext.Evented
        {
            // Methods
            function getCls () : string;
            function getElement () : variant;
            function getIndicators () : variant;
            function getIndicatorsHidingDelay () : number;
            function getIndicatorsUi () : string;
            function getScroller () : Ext.scroll.View;
            function setCls (cls : string) : void;
            function setElement (element : variant) : void;
            function setIndicators (indicators : variant) : void;
            function setIndicatorsHidingDelay (indicatorsHidingDelay : number) : void;
            function setIndicatorsUi (indicatorsUi : string) : void;
            function setScroller (scroller : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class indicator
        {

            class Abstract extends Ext.Component
            {
                // Methods
                function getActive () : boolean;
                function getAutoHide () : boolean;
                function getAxis () : string;
                function getBarCls () : string;
                function getLength () : variant;
                function getMinLength () : number;
                function getRatio () : number;
                function getValue () : variant;
                function setActive (active : boolean) : void;
                function setAutoHide (autoHide : boolean) : void;
                function setAxis (axis : string) : void;
                function setBarCls (barCls : string) : void;
                function setLength (length : variant) : void;
                function setMinLength (minLength : number) : void;
                function setRatio (ratio : number) : void;
                function setValue (value : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }



        }
    }

    class slider
    {

        class Slider extends Ext.Container
        {
            // Methods
            function applyIncrement (increment : number) : number;
            function getAllowThumbsOverlapping () : boolean;
            function getAnimation () : variant;
            function getIncrement () : number;
            function getMaxValue () : number;
            function getMinValue () : number;
            function getReadOnly () : boolean;
            function getThumb (index : number) : Ext.slider.Thumb;
            function getThumb () : Ext.slider.Thumb;
            function getThumbConfig () : variant;
            function getThumbs () : Ext.slider.Thumb[];
            function getValue () : variant;
            function getValues () : variant;
            function setAllowThumbsOverlapping (allowThumbsOverlapping : boolean) : void;
            function setAnimation (animation : boolean) : void;
            function setAnimation (animation : variant) : void;
            function setIncrement (increment : number) : void;
            function setMaxValue (maxValue : number) : void;
            function setMinValue (minValue : number) : void;
            function setReadOnly (readOnly : boolean) : void;
            function setThumbConfig (thumbConfig : variant) : void;
            function setValue (value : number) : void;
            function setValue (value : number[]) : void;
            function setValues (value : variant) : void;
            function updateValue (newValue : variant, oldValue : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function change (this_ : Ext.slider.Slider, thumb : Ext.slider.Thumb, newValue : number, oldValue : number, eOpts : variant) : void;
            function drag (this_ : Ext.slider.Slider, thumb : Ext.slider.Thumb, e : Ext.event.Event, eOpts : variant) : void;
            function dragend (this_ : Ext.slider.Slider, thumb : Ext.slider.Thumb, value : variant[], e : Ext.event.Event, eOpts : variant) : void;
            function dragstart (this_ : Ext.slider.Slider, thumb : Ext.slider.Thumb, value : variant[], e : Ext.event.Event, eOpts : variant) : void;
        }

        class Thumb extends Ext.Component
        {
            // Methods
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

    }


    class tab
    {


        class Panel extends Ext.Container
        {
            // Methods
            function doTabChange (tabBar : variant, newTab : variant) : boolean;
            function getTabBar () : variant;
            function getTabBarPosition () : string;
            function setTabBar (tabBar : variant) : void;
            function setTabBarPosition (tabBarPosition : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Tab extends Ext.Button
        {
            // Methods
            function getActive () : boolean;
            function getActiveCls () : string;
            function getTitle () : string;
            function setActive (active : boolean) : void;
            function setActiveCls (activeCls : string) : void;
            function setTitle (title : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function activate (this_ : Ext.tab.Tab, eOpts : variant) : void;
            function deactivate (this_ : Ext.tab.Tab, eOpts : variant) : void;
        }
    }

    class util
    {

        class AbstractMixedCollection extends Ext.Base
        {
            // Methods
            function add (key : string, obj : variant) : variant;
            function addAll (objs : variant) : void;
            function addAll (objs : variant[]) : void;
            function clear () : void;
            function clone () : Ext.util.MixedCollection;
            function collect (property : string, root : string, allowNull : boolean) : variant[];
            function collect (property : string, root : string) : variant[];
            function collect (property : string, allowNull : boolean) : variant[];
            function collect (property : string) : variant[];
            function contains (o : variant) : boolean;
            function containsKey (key : string) : boolean;
            function each (fn : function  (item : variant, index : number, length : number, return_ : boolean) : void, scope : variant) : void;
            function each (fn : function  (item : variant, index : number, length : number, return_ : boolean) : void) : void;
            function eachKey (fn : function  () : void, scope : variant) : void;
            function eachKey (fn : function  () : void) : void;
            function filter (property : Ext.util.Filter[], value : string, anyMatch : boolean, caseSensitive : boolean) : Ext.util.MixedCollection;
            function filter (property : Ext.util.Filter[], value : string, anyMatch : boolean) : Ext.util.MixedCollection;
            function filter (property : Ext.util.Filter[], value : string) : Ext.util.MixedCollection;
            function filter (property : Ext.util.Filter[], value : RegExp, anyMatch : boolean, caseSensitive : boolean) : Ext.util.MixedCollection;
            function filter (property : Ext.util.Filter[], value : RegExp, anyMatch : boolean) : Ext.util.MixedCollection;
            function filter (property : Ext.util.Filter[], value : RegExp) : Ext.util.MixedCollection;
            function filter (property : string, value : string, anyMatch : boolean, caseSensitive : boolean) : Ext.util.MixedCollection;
            function filter (property : string, value : string, anyMatch : boolean) : Ext.util.MixedCollection;
            function filter (property : string, value : string) : Ext.util.MixedCollection;
            function filter (property : string, value : RegExp, anyMatch : boolean, caseSensitive : boolean) : Ext.util.MixedCollection;
            function filter (property : string, value : RegExp, anyMatch : boolean) : Ext.util.MixedCollection;
            function filter (property : string, value : RegExp) : Ext.util.MixedCollection;
            function filterBy (fn : function  () : void, scope : variant) : Ext.util.MixedCollection;
            function filterBy (fn : function  () : void) : Ext.util.MixedCollection;
            function findBy (fn : function  () : void, scope : variant) : variant;
            function findBy (fn : function  () : void) : variant;
            function findIndex (property : string, value : string, start : number, anyMatch : boolean, caseSensitive : boolean) : number;
            function findIndex (property : string, value : string, start : number, anyMatch : boolean) : number;
            function findIndex (property : string, value : string, start : number) : number;
            function findIndex (property : string, value : string, anyMatch : boolean, caseSensitive : boolean) : number;
            function findIndex (property : string, value : string, anyMatch : boolean) : number;
            function findIndex (property : string, value : string) : number;
            function findIndex (property : string, value : RegExp, start : number, anyMatch : boolean, caseSensitive : boolean) : number;
            function findIndex (property : string, value : RegExp, start : number, anyMatch : boolean) : number;
            function findIndex (property : string, value : RegExp, start : number) : number;
            function findIndex (property : string, value : RegExp, anyMatch : boolean, caseSensitive : boolean) : number;
            function findIndex (property : string, value : RegExp, anyMatch : boolean) : number;
            function findIndex (property : string, value : RegExp) : number;
            function findIndexBy (fn : function  () : void, scope : variant, start : number) : number;
            function findIndexBy (fn : function  () : void, scope : variant) : number;
            function findIndexBy (fn : function  () : void, start : number) : number;
            function findIndexBy (fn : function  () : void) : number;
            function first () : variant;
            function get (key : string) : variant;
            function get (key : number) : variant;
            function getAt (index : number) : variant;
            function getByKey (key : string) : variant;
            function getByKey (key : number) : variant;
            function getCount () : number;
            function getKey (item : variant) : variant;
            function getRange (start : number, end : number) : variant[];
            function getRange (start : number) : variant[];
            function getRange () : variant[];
            function indexOf (o : variant) : number;
            function indexOfKey (key : string) : number;
            function insert (index : number, key : string, obj : variant) : variant;
            function insert (index : number, key : string) : variant;
            function last () : variant;
            function remove (o : variant) : variant;
            function removeAll (items : variant[]) : Ext.util.MixedCollection;
            function removeAt (index : number) : variant;
            function removeAtKey (key : string) : variant;
            function replace (key : string, o : variant) : variant;
            function replace (key : string) : variant;
            function sum (property : string, root : string, start : number, end : number) : number;
            function sum (property : string, root : string, start : number) : number;
            function sum (property : string, root : string) : number;
            function sum (property : string, start : number, end : number) : number;
            function sum (property : string, start : number) : number;
            function sum (property : string) : number;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function add (index : number, o : variant, key : string, eOpts : variant) : void;
            function clear (eOpts : variant) : void;
            function remove (o : variant, key : string, eOpts : variant) : void;
            function remove (o : variant, eOpts : variant) : void;
            function replace (key : string, old : variant, new_ : variant, eOpts : variant) : void;
        }


        class BufferedCollection extends Ext.util.Collection
        {
            // Methods
            function getPageSize () : number;
            function getTotalCount () : number;
            function setPageSize (pageSize : number) : void;
            function setTotalCount (totalCount : number) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Collection extends Ext.Base
        {
            // Properties
            var all : variant[];
            var indices : variant;
            var items : variant[];
            var keys : variant[];
            var length : number;
            var map : variant;
            // Methods
            function constructor (keyFn : variant, config : variant);
            function add (key : string, item : variant) : variant;
            function addAll (addItems : variant) : void;
            function addAll (addItems : variant[]) : void;
            function clear () : void;
            function clone () : Ext.util.MixedCollection;
            function contains (item : variant) : boolean;
            function containsKey (key : string) : boolean;
            function each (fn : function  (item : variant, index : number, length : number) : void, scope : variant) : void;
            function eachKey (fn : function  () : void, scope : variant) : void;
            function filterBy (fn : function  (o : variant, k : string) : void, scope : variant) : Ext.util.MixedCollection;
            function findBy (fn : function  () : void, scope : variant) : variant;
            function findIndexBy (fn : function  (o : variant, k : string) : void, scope : variant, start : number) : number;
            function findIndexBy (fn : function  (o : variant, k : string) : void, scope : variant) : number;
            function first () : variant;
            function get (key : string) : variant;
            function get (key : number) : variant;
            function getAt (index : number) : variant;
            function getAutoFilter () : boolean;
            function getAutoSort () : boolean;
            function getByKey (key : string) : variant;
            function getByKey (key : number) : variant;
            function getCount () : number;
            function getKey (item : variant) : variant;
            function getRange (start : number, end : number) : variant[];
            function getRange (start : number) : variant[];
            function getRange () : variant[];
            function indexOf (item : variant) : number;
            function indexOfKey (key : string) : number;
            function insert (index : number, key : string, item : variant) : variant;
            function last () : variant;
            function remove (item : variant) : variant;
            function removeAll (items : variant[]) : Ext.util.MixedCollection;
            function removeAt (index : number) : variant;
            function removeAtKey (key : string) : variant;
            function replace (oldKey : string, item : variant) : variant;
            function setAutoFilter (autoFilter : boolean) : void;
            function setAutoSort (autoSort : boolean) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class DelayedTask extends Ext.Base
        {
            // Methods
            function constructor (fn : function  () : void, scope : variant, args : variant[]);
            function cancel () : void;
            function delay (delay : number, newFn : function  () : void, newScope : variant, newArgs : variant[]) : void;
            function getArgs () : variant;
            function getDelay () : variant;
            function getFn () : variant;
            function getInterval () : variant;
            function getScope () : variant;
            function setArgs (args : variant) : void;
            function setDelay (delay : variant) : void;
            function setFn (fn : variant) : void;
            function setInterval (interval : variant) : void;
            function setScope (scope : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Draggable extends Ext.Base
        {
            // Methods
            function disable () : Ext.util.Draggable;
            function enable () : Ext.util.Draggable;
            function getCls () : string;
            function getConstraint () : string;
            function getDirection () : string;
            function getDisabled () : variant;
            function getDraggingCls () : string;
            function getElement () : variant;
            function getInitialOffset () : variant;
            function getTranslatable () : variant;
            function setCls (cls : string) : void;
            function setConstraint (constraint : string) : void;
            function setDirection (direction : string) : void;
            function setDisabled (disabled : variant) : void;
            function setDraggingCls (draggingCls : string) : void;
            function setElement (element : variant) : void;
            function setInitialOffset (initialOffset : variant) : void;
            function setInitialOffset (initialOffset : number) : void;
            function setTranslatable (translatable : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function drag (this_ : Ext.util.Draggable, e : Ext.event.Event, offsetX : number, offsetY : number, eOpts : variant) : void;
            function dragend (this_ : Ext.util.Draggable, e : Ext.event.Event, offsetX : number, offsetY : number, eOpts : variant) : void;
            function dragstart (this_ : Ext.util.Draggable, e : Ext.event.Event, offsetX : number, offsetY : number, eOpts : variant) : void;
        }

        class Droppable extends Ext.Base
        {
            // Methods
            function disable () : void;
            function enable () : void;
            function getBaseCls () : string;
            function isDisabled () : boolean;
            function isMonitoring () : boolean;
            function setBaseCls (baseCls : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function drop (this_ : Ext.util.Droppable, draggable : Ext.util.Draggable, e : Ext.event.Event, eOpts : variant) : void;
            function dropactivate (this_ : Ext.util.Droppable, draggable : Ext.util.Draggable, e : Ext.event.Event, eOpts : variant) : void;
            function dropdeactivate (this_ : Ext.util.Droppable, draggable : Ext.util.Draggable, e : Ext.event.Event, eOpts : variant) : void;
            function dropenter (this_ : Ext.util.Droppable, draggable : Ext.util.Draggable, e : Ext.event.Event, eOpts : variant) : void;
            function dropleave (this_ : Ext.util.Droppable, draggable : Ext.util.Draggable, e : Ext.event.Event, eOpts : variant) : void;
        }

        class Filter extends Ext.Base
        {
            // Methods
            function constructor (config : variant);
            function getAnyMatch () : boolean;
            function getCaseSensitive () : boolean;
            function getExactMatch () : boolean;
            function getFilterFn () : function (collection : Ext.util.MixedCollection) : boolean;
            function getId () : string;
            function getProperty () : string;
            function getRoot () : string;
            function getScope () : variant;
            function getValue () : variant;
            function setAnyMatch (anyMatch : boolean) : void;
            function setCaseSensitive (caseSensitive : boolean) : void;
            function setExactMatch (exactMatch : boolean) : void;
            function setFilterFn (filterFn : function  () : void) : void;
            function setId (id : string) : void;
            function setProperty (property : string) : void;
            function setRoot (root : string) : void;
            function setScope (scope : variant) : void;
            function setValue (value : RegExp) : void;
            function setValue (value : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Format extends Ext.Base
        {
            // Properties
            static var defaultDateFormat : string;
            static var potentialUndefinedKeys : variant[];
            // Methods
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function date (value : string, format : string) : string;
            static function date (value : string) : string;
            static function date (value : Date, format : string) : string;
            static function date (value : Date) : string;
            static function destroy () : void;
            static function ellipsis (value : string, length : number, word : boolean) : string;
            static function ellipsis (value : string, length : number) : string;
            static function escape (string : string) : string;
            static function escapeRegex (str : string) : string;
            static function format (string : string, values : string) : string;
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function htmlDecode (value : string) : string;
            static function htmlEncode (value : string) : string;
            static function initConfig (instanceConfig : variant) : variant;
            static function leftPad (string : string, size : number, char : string) : string;
            static function leftPad (string : string, size : number) : string;
            static function statics () : Ext.Class;
            static function toggle (string : string, value : string, other : string) : string;
            static function trim (string : string) : string;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Geolocation extends Ext.Evented
        {
            // Properties
            var accuracy : number;
            var altitude : number;
            var altitudeAccuracy : number;
            var heading : number;
            var latitude : number;
            var longitude : number;
            var speed : number;
            var timestamp : Date;
            // Methods
            function getAllowHighAccuracy () : boolean;
            function getAutoUpdate () : boolean;
            function getFrequency () : number;
            function getMaximumAge () : number;
            function getTimeout () : number;
            function setAllowHighAccuracy (allowHighAccuracy : boolean) : void;
            function setAutoUpdate (autoUpdate : boolean) : void;
            function setFrequency (frequency : number) : void;
            function setMaximumAge (maximumAge : number) : void;
            function setTimeout (timeout : number) : void;
            function updateLocation (callback : function  () : void, scope : variant) : void;
            function updateLocation (callback : function  () : void) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function locationerror (this_ : Ext.util.Geolocation, timeout : boolean, permissionDenied : boolean, locationUnavailable : boolean, message : string, eOpts : variant) : void;
            function locationupdate (this_ : Ext.util.Geolocation, eOpts : variant) : void;
        }

        class Grouper extends Ext.util.Sorter
        {
            // Methods
            function getGroupFn (item : variant, return_ : string) : void;
            function getSortProperty () : string;
            function setGroupFn (groupFn : function  () : void, item : variant, return_ : string) : void;
            function setSortProperty (sortProperty : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class HashMap extends Ext.Base
        {
            // Methods
            function add (key : string, value : variant) : variant;
            function clear (initial : variant) : Ext.util.HashMap;
            function clone () : Ext.util.HashMap;
            function contains (value : variant) : boolean;
            function containsKey (key : string) : boolean;
            function each (fn : function  (key : string, value : number, length : number, return_ : boolean) : void, scope : variant) : Ext.util.HashMap;
            function each (fn : function  (key : string, value : number, length : number, return_ : boolean) : void) : Ext.util.HashMap;
            function get (key : string) : variant;
            function getCount () : number;
            function getKeys () : variant[];
            function getValues () : variant[];
            function remove (o : variant) : boolean;
            function removeByKey (key : string) : boolean;
            function replace (key : string, value : variant) : variant;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function add (this_ : Ext.util.HashMap, key : string, value : variant, eOpts : variant) : void;
            function clear (this_ : Ext.util.HashMap, eOpts : variant) : void;
            function remove (this_ : Ext.util.HashMap, key : string, value : variant, eOpts : variant) : void;
            function replace (this_ : Ext.util.HashMap, key : string, value : variant, old : variant, eOpts : variant) : void;
        }

        class Inflector extends Ext.Base
        {
            // Properties
            // Methods
            static function callOverridden (args : variant[]) : variant;
            static function callParent (args : variant[]) : variant;
            static function callSuper (args : variant[]) : variant;
            static function classify (word : string) : string;
            static function clearPlurals () : void;
            static function clearSingulars () : void;
            static function destroy () : void;
            static function getInitialConfig (name : string) : variant;
            static function getInitialConfig () : variant;
            static function initConfig (instanceConfig : variant) : variant;
            static function isTransnumeral (word : string) : boolean;
            static function ordinalize (number : number) : string;
            static function plural (matcher : RegExp, replacer : string) : void;
            static function pluralize (word : string) : string;
            static function singular (matcher : RegExp, replacer : string) : void;
            static function singularize (word : string) : string;
            static function statics () : Ext.Class;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class LineSegment extends Ext.Base
        {
            // Methods
            function constructor (point1 : Ext.util.Point, point2 : Ext.util.Point);
            function intersects (lineSegment : Ext.util.LineSegment) : Ext.util.Point;
            override function toString () : string;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class MixedCollection extends Ext.util.AbstractMixedCollection
        {
            // Methods
            function reorder (mapping : variant) : void;
            function sortBy (sorterFn : function  () : void) : void;
            function sortByKey (dir : string, fn : function  () : void) : void;
            function sortByKey (dir : string) : void;
            function sortByKey (fn : function  () : void) : void;
            function sortByKey () : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function sort (this_ : Ext.util.MixedCollection, eOpts : variant) : void;
        }


        class PaintMonitor extends Ext.Base
        {
            // Methods
            function constructor (config : variant);
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Point extends Ext.Base
        {
            // Methods
            function constructor (x : number, y : number);
            function constructor (x : number);
            function constructor ();
            function clone () : Ext.util.Point;
            function copyFrom (point : Ext.util.Point) : Ext.util.Point;
            function copyFrom (point : variant) : Ext.util.Point;
            function equals (point : Ext.util.Point) : boolean;
            function equals (point : variant) : boolean;
            function isCloseTo (point : Ext.util.Point, threshold : variant) : boolean;
            function isCloseTo (point : Ext.util.Point, threshold : number) : boolean;
            function isCloseTo (point : variant, threshold : variant) : boolean;
            function isCloseTo (point : variant, threshold : number) : boolean;
            function roundedEquals (point : Ext.util.Point) : boolean;
            function roundedEquals (point : variant) : boolean;
            override function toString () : string;
            function translate (x : number, y : number) : boolean;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function from (object : variant) : Ext.util.Point;
            static function fromEvent (e : Event) : Ext.util.Point;
            static function fromTouch (touch : Event) : Ext.util.Point;
            static function getName () : string;
        }


        class Region extends Ext.Base
        {
            // Methods
            function constructor (top : number, right : number, bottom : number, left : number);
            function adjust (top : number, right : number, bottom : number, left : number) : Ext.util.Region;
            function constrainTo (targetRegion : Ext.util.Region) : Ext.util.Region;
            function contains (region : Ext.util.Region) : boolean;
            function copy () : Ext.util.Region;
            function equals (region : Ext.util.Region) : boolean;
            function getOutOfBoundOffset (axis : string, p : Ext.util.Point) : Ext.util.Region;
            function getOutOfBoundOffset (axis : variant, p : Ext.util.Point) : Ext.util.Region;
            function getOutOfBoundOffsetX (p : number) : number;
            function getOutOfBoundOffsetY (p : number) : number;
            function intersect (region : Ext.util.Region) : variant;
            function isOutOfBound (axis : string, p : Ext.util.Point) : boolean;
            function isOutOfBound (axis : string, p : number) : boolean;
            function isOutOfBoundX (p : number) : boolean;
            function isOutOfBoundY (p : number) : boolean;
            function round () : Ext.util.Region;
            override function toString () : string;
            function translateBy (offset : variant) : Ext.util.Region;
            function union (region : Ext.util.Region) : Ext.util.Region;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function from (o : variant) : Ext.util.Region;
            static function getName () : string;
            static function getRegion (el : string) : Ext.util.Region;
            static function getRegion (el : HTMLElement) : Ext.util.Region;
            static function getRegion (el : Ext.dom.Element) : Ext.util.Region;
        }

        class SizeMonitor extends Ext.Base
        {
            // Methods
            function constructor (config : variant);
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Sortable extends Ext.mixin.Mixin
        {
            // Properties
            var defaultSortDirection : string;
            var isSortable : boolean;
            var sortRoot : string;
            var sorters : Ext.util.MixedCollection;
            // Methods
            function initSortable () : void;
            function sort (sorters : string, direction : string, where : string, doSort : boolean) : Ext.util.Sorter[];
            function sort (sorters : string, direction : string, where : string) : Ext.util.Sorter[];
            function sort (sorters : string, direction : string, doSort : boolean) : Ext.util.Sorter[];
            function sort (sorters : string, direction : string) : Ext.util.Sorter[];
            function sort (sorters : string, doSort : boolean) : Ext.util.Sorter[];
            function sort (sorters : string) : Ext.util.Sorter[];
            function sort (sorters : Ext.util.Sorter[], direction : string, where : string, doSort : boolean) : Ext.util.Sorter[];
            function sort (sorters : Ext.util.Sorter[], direction : string, where : string) : Ext.util.Sorter[];
            function sort (sorters : Ext.util.Sorter[], direction : string, doSort : boolean) : Ext.util.Sorter[];
            function sort (sorters : Ext.util.Sorter[], direction : string) : Ext.util.Sorter[];
            function sort (sorters : Ext.util.Sorter[], doSort : boolean) : Ext.util.Sorter[];
            function sort (sorters : Ext.util.Sorter[]) : Ext.util.Sorter[];
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Sorter extends Ext.Base
        {
            // Methods
            function constructor (config : variant);
            function getDirection () : string;
            function getId () : variant;
            function getProperty () : string;
            function getRoot () : string;
            function getSorterFn () : function () : void;
            function getTransform () : function () : void;
            function setDirection (direction : string) : void;
            function setId (id : variant) : void;
            function setProperty (property : string) : void;
            function setRoot (root : string) : void;
            function setSorterFn (sorterFn : function  () : void) : void;
            function setTransform (transform : function  () : void) : void;
            function toggle () : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class TapRepeater extends Ext.Base
        {
            // Methods
            function getAccelerate () : boolean;
            function getDelay () : number;
            function getEl () : variant;
            function getInterval () : number;
            function getPressCls () : variant;
            function getPreventDefault () : boolean;
            function getStopDefault () : boolean;
            function getTimer () : number;
            function setAccelerate (accelerate : boolean) : void;
            function setDelay (delay : number) : void;
            function setEl (el : variant) : void;
            function setInterval (interval : number) : void;
            function setPressCls (pressCls : variant) : void;
            function setPreventDefault (preventDefault : boolean) : void;
            function setStopDefault (stopDefault : boolean) : void;
            function setTimer (timer : number) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function tap (this_ : Ext.util.TapRepeater, e : Ext.event.Event, eOpts : variant) : void;
            function touchend (this_ : Ext.util.TapRepeater, e : Ext.event.Event, eOpts : variant) : void;
            function touchstart (this_ : Ext.util.TapRepeater, e : Ext.event.Event, eOpts : variant) : void;
        }




        class Wrapper extends Ext.Base
        {
            // Methods
            function constructor (elementConfig : variant, wrappedElement : variant);
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class paintmonitor
        {

            class Abstract extends Ext.Base
            {
                // Methods
                function constructor (config : variant);
                function getArgs () : variant[];
                function getCallback () : variant;
                function getElement () : variant;
                function getScope () : variant;
                function setArgs (args : variant[]) : void;
                function setCallback (callback : variant) : void;
                function setElement (element : variant) : void;
                function setScope (scope : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }


        }

        class sizemonitor
        {

            class Abstract extends Ext.Base
            {
                // Methods
                function constructor (config : variant);
                function getArgs () : variant[];
                function getCallback () : variant;
                function getElement () : variant;
                function getScope () : variant;
                function setArgs (args : variant[]) : void;
                function setCallback (callback : variant) : void;
                function setElement (element : variant) : void;
                function setScope (scope : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }



        }

        class translatable
        {

            class Abstract extends Ext.Evented
            {
                // Methods
                override function destroy () : void;
                function getEasing () : variant;
                function getEasingX () : variant;
                function getEasingY () : variant;
                function getUseWrapper () : variant;
                function setEasing (easing : variant) : void;
                function setEasingX (easingX : variant) : void;
                function setEasingY (easingY : variant) : void;
                function setUseWrapper (useWrapper : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
                // Events
                function animationend (this_ : Ext.util.translatable.Abstract, x : number, y : number, eOpts : variant) : void;
                function animationframe (this_ : Ext.util.translatable.Abstract, x : number, y : number, eOpts : variant) : void;
                function animationstart (this_ : Ext.util.translatable.Abstract, x : number, y : number, eOpts : variant) : void;
            }



            class Dom extends Ext.util.translatable.Abstract
            {
                // Methods
                function getElement () : variant;
                function setElement (element : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

        }
    }

    class ux
    {

        class ActionOverFlowMenuButton extends Ext.ux.MenuButton
        {
            // Methods
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class ApplicationMenu extends Ext.Menu
        {
            // Methods
            function getDefaults () : variant;
            function setDefaults (defaults : variant) : void;
        }

        class ContextMenu extends Ext.Menu
        {
        }

        class MenuButton extends Ext.Button
        {
            // Methods
            function getMenuItems () : variant[];
            function setMenuItems (menuItems : variant[]) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class TabMenuButton extends Ext.ux.MenuButton
        {
            // Methods
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class device
        {

            class Analytics extends Ext.Base
            {
                // Properties
                // Methods
                static function constructor ();
                static function callOverridden (args : variant[]) : variant;
                static function callParent (args : variant[]) : variant;
                static function callSuper (args : variant[]) : variant;
                static function destroy () : void;
                static function getAccountID () : variant;
                static function getInitialConfig (name : string) : variant;
                static function getInitialConfig () : variant;
                static function initConfig (instanceConfig : variant) : variant;
                static function registerAccount (accountID : string) : void;
                static function setAccountID (accountID : variant) : void;
                static function statics () : Ext.Class;
                static function trackEvent (config : variant) : void;
                static function trackPageview (config : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Twitter extends Ext.Base
            {
                // Properties
                // Methods
                static function constructor ();
                static function callOverridden (args : variant[]) : variant;
                static function callParent (args : variant[]) : variant;
                static function callSuper (args : variant[]) : variant;
                static function compose (config : variant) : void;
                static function destroy () : void;
                static function getInitialConfig (name : string) : variant;
                static function getInitialConfig () : variant;
                static function getMentions (config : variant) : void;
                static function getPublicTimeline (config : variant) : void;
                static function getTwitterRequest (config : variant) : void;
                static function getTwitterUsername (config : variant) : void;
                static function initConfig (instanceConfig : variant) : variant;
                static function statics () : Ext.Class;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : Ext.Base;
                static function callParent (args : variant) : void;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class analytics
            {

                class Abstract extends Ext.Base
                {
                    // Methods
                    function getAccountID () : variant;
                    function registerAccount (accountID : string) : void;
                    function setAccountID (accountID : variant) : void;
                    function trackEvent (config : variant) : void;
                    function trackPageview (config : string) : void;
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : Ext.Base;
                    static function callParent (args : variant) : void;
                    static function create () : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : string;
                }

            }

            class twitter
            {


            }
        }
    }

    class viewport
    {


        class Default extends Ext.Container
        {
            // Properties
            var isReady : boolean;
            // Methods
            function constructor (config : variant);
            function getAutoMaximize () : boolean;
            function getOrientation () : string;
            function getPreventPanning () : boolean;
            function getPreventZooming () : boolean;
            function getWindowHeight () : number;
            function getWindowWidth () : number;
            function hideAllMenus (animation : variant) : void;
            function hideMenu (side : string) : void;
            function hideOtherMenus (side : string, animation : string) : void;
            function removeMenu (side : string) : void;
            function setAutoMaximize (autoMaximize : boolean) : void;
            function setMenu (menu : Ext.Menu, config : variant) : void;
            function setPreventPanning (preventPanning : boolean) : void;
            function setPreventZooming (preventZooming : boolean) : void;
            function showMenu (side : string) : void;
            function toggleMenu (side : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : Ext.Base;
            static function callParent (args : variant) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            // Events
            function maximize (this_ : Ext.Viewport, eOpts : variant) : void;
            function ready (this_ : Ext.Viewport, eOpts : variant) : void;
        }



    }
} = """Ext;""";